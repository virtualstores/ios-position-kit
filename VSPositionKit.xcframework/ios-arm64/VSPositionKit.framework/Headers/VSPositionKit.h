#import <Foundation/NSArray.h>
#import <Foundation/NSDictionary.h>
#import <Foundation/NSError.h>
#import <Foundation/NSObject.h>
#import <Foundation/NSSet.h>
#import <Foundation/NSString.h>
#import <Foundation/NSValue.h>

@class VSPKGlobalQPSValues, VSPKIQPSDeviceMode, VSPKKotlinFloatArray, VSPKIQPSParameterPackageEnum, VSPKKotlinArray<T>, VSPKMoveVector, VSPKVector, VSPKKotlinEnumCompanion, VSPKKotlinEnum<E>, VSPKIQPSDeviceOrientation, VSPKIQPSPersonalMLAlgorithm, UIImage, VSPKPointF, VSPKPersonalMLData, VSPKRawSensor, VSPKIQPSSystemType, VSPKIQPSReplayInteractorCompanion, VSPKStepData, VSPKKotlinUnit, VSPKReplayDataHandler, VSPKNavBundle, VSPKKotlinPair<__covariant A, __covariant B>, VSPKOutputSignalSignalType, VSPKDirectionBundle, VSPKMLUpdate, VSPKPositionEventPosEventType, VSPKPrecisionCircle, VSPKRealWorldOffsetUpdate, VSPKStepEventData, VSPKNotificationType, VSPKNotificationSeverity, VSPKNotification, VSPKUserAdjustments, VSPKQLayerHealthData, VSPKLegacyStepDetectorFactory, VSPKExternalDataManager, VSPKStepStateEvaluator, VSPKLegacyStepDetectorManager, VSPKLegacyStepDetectorManagerCompanion, VSPKModularStepDetectorFactory, VSPKSpackListeningMLStepDetector, VSPKSpackExtractor, VSPKObservable, VSPKStepEventFilterSetLeniency, VSPKStepState, VSPKStepDetectorManagerCompanion, VSPKStateBasedStepFilter, VSPKRegularState, VSPKStepFillEvaluatorCompanion, VSPKSpack, VSPKStepEventDataCompanion, VSPKSensorListeningStepDetector, VSPKSensorListener, VSPKMLModel, VSPKMLStepDetectorBaseCompanion, VSPKSVM, VSPKTrolleySVMStepDetectorCompanion, VSPKTrolleyStepDetectorCompanion, VSPKMLStepDetectorBase, VSPKAndroidMLJacketPocketStepDetectorCompanion, VSPKAndroidMLPocketStepDetectorCompanion, VSPKNoPCAEllipseEvaluator, VSPKAndroidMLRegularStepDetectorCompanion, VSPKEllipseEvaluator, VSPKPCATransformer, VSPKStandardScaler, VSPKMLJacketPocketStepDetectorCompanion, VSPKMLPocketStepDetectorCompanion, VSPKMLRegularStepDetectorCompanion, VSPKMLSwingAntiSymStepDetectorCompanion, VSPKMLSwingStepDetectorCompanion, VSPKSwingPCAEvaluator, VSPKMLSwingSymStepDetectorCompanion, VSPKNeuralNetwork, VSPKAndroidJacketPocketDirectionNNParameters, VSPKAndroidPocketDirectionNNParameters, VSPKAxisParameters, VSPKDirectionNeuralNetworkParameters, VSPKJacketPocketDirectionNNParameters, VSPKKotlinDoubleArray, VSPKSpackStepData, VSPKHistoryHandler<T>, VSPKRotatorDirection, VSPKPocketDirectionNNParameters, VSPKSanityCheckDirectionNeuralNetworkParameters, VSPKSwingAntiSymDirectionNNParameters, VSPKSwingSymDirectionNNParameters, VSPKNDirectionsFilter, VSPKStepStateCompanion, VSPKFusionSensorManagerParameters, VSPKJacketPocketStateCompanion, VSPKRegularStateCompanion, VSPKSwingAntiSymStateCompanion, VSPKSwingStateCompanion, VSPKSwingSymStateCompanion, VSPKTrolleyStateCompanion, VSPKTrouserPocketStateCompanion, VSPKSpeedSensorHelper, VSPKTrolleySpeedBundle, VSPKMapCoordinate, VSPKAuxSensorHelper, VSPKMapData, VSPKRawSensorDataSensorDataType, VSPKRawSensorDataCompanion, VSPKRawSensorData, VSPKReplaySensorCompanion, VSPKReplaySensor, VSPKReplayDataCoordinator, VSPKReplayDataVersion, VSPKFrequencyUser, VSPKEmilsPocketSensorCompanion, VSPKMaxRetardNN, VSPKModularSpackUser, VSPKRotationSensorCompanion, VSPKIReplayDataHandlerRadiusSyncPositionData, VSPKIReplayDataHandlerSyncPositionData, VSPKQPosition, VSPKStartPosition, VSPKIReplayDataHandlerCompanion, VSPKIReplayDataHandlerIReplayConfig, VSPKPointWithOffset, VSPKIReplayDataHandlerLegacySyncPositionData, VSPKBuggedSyncReplayDataV5Companion, VSPKBuggedSyncReplayDataV5, VSPKReplayDataV2Companion, VSPKReplayDataV2, VSPKReplayDataV3Companion, VSPKReplayDataV3, VSPKReplayDataV4Companion, VSPKReplayDataV4, VSPKReplayDataV5Companion, VSPKReplayDataV5, VSPKReplayDataV6Companion, VSPKReplayDataV6, VSPKReplayDataV7Companion, VSPKReplayDataV7, VSPKReplayDataV8Companion, VSPKReplayDataV8, VSPKLegacySyncPositionCompanion, VSPKLegacySyncPosition, VSPKPathUpdateCompanion, VSPKPathUpdate, VSPKRadiusSyncPositionCompanion, VSPKRadiusSyncPosition, VSPKReplaySensorDataCompanion, VSPKReplaySensorData, VSPKStartPositionCompanion, VSPKSyncPositionCompanion, VSPKSyncPosition, VSPKTickCompanion, VSPKTick, VSPKContinuousMoveVectorQueueCompanion, VSPKTimedMoveVector, VSPKIDNameGenerator, VSPKMLParametersFactory, VSPKOptimizationUtils, VSPKOptimizationUtilsExperimental, VSPKQuaternionUtils, VSPKVectorUtils, VSPKClockClockType, VSPKAverageVarianceDoublePack, VSPKAverageVarianceFloatPack, VSPKModifierManager<T>, VSPKNumericalModifier<T>, VSPKOffsetHelper, VSPKSpackFeaturisationHelpers, VSPKClusterSpawnAlgos, VSPKHistoryHandlerTimedData<T, T_>, VSPKPolynomial, VSPKComplex, VSPKRational, VSPKAnalogPrototypeCompanion, VSPKAnalogPrototype, VSPKPassbandType, VSPKSecondOrderSection, VSPKIIRFilter, VSPKComplexCompanion, VSPKLagrangePolynomialCompanion, VSPKKotlinIntArray, VSPKAllpass, VSPKTimedDebugPositions, VSPKTimedDebugRadius, VSPKDebugClusterCompanion, VSPKDebugCluster, VSPKDebugClusterAngleCompanion, VSPKDebugClusterAngle, VSPKDebugPositionCompanion, VSPKDebugPosition, VSPKDebugPrinter, VSPKDebugQPositionSpeedCompanion, VSPKDebugQPositionSpeed, VSPKTimedDebugClusterAnglesCompanion, VSPKTimedDebugClusterAngles, VSPKTimedDebugClustersCompanion, VSPKTimedDebugClusters, VSPKTimedDebugPositionCompanion, VSPKTimedDebugPosition, VSPKTimedDebugPositionsCompanion, VSPKTimedDebugRadiusCompanion, VSPKtt2EngineParameterManagerClassParameters, VSPKQLayerParameterManagerCompanion, VSPKDirectionPrioParameters, VSPKDirectionTrackerParameters, VSPKGetNewPositionsAmountParameters, VSPKMiscParameters, VSPKMovementStateManagerParameters, VSPKAnglePIDParameters, VSPKQClusterParameters, VSPKQLayerParameters, VSPKQLayerQueueParameters, VSPKQPosParameters, VSPKSlidingRatioParameters, VSPKSmallClusterSpreadIncreaserParameters, VSPKSpeedSpreadHandlerParameters, VSPKSplitPositionsParameters, VSPKTrolleySkipParameters, VSPKTSPPrioParameters, VSPKPointFCompanion, VSPKQPositionCompanion, VSPKAndroidRegularMLStepDetectorParameters, VSPKClusterBootParameters, VSPKFloorSensorParameters, VSPKQPSHandlerParameters, VSPKRegularMLStepDetectorParameters, VSPKSwingMLStepDetectorParameters, VSPKTrolleyStepDetectorParameters, VSPKVeddestaScrubberParameters, VSPKAndroidPocketMLStepDetectorParameters, VSPKPocketMLStepDetectorParameters, VSPKSwingAntiSymMLStepDetectorParameters, VSPKSwingSymMLStepDetectorParameters, VSPKIkeaQPSValues, VSPKJulaQPSValues, VSPKPS20QPSValues, VSPKRetailQPSValues, VSPKWarehouseQPSValues, VSPKAnglePIDParametersCompanion, VSPKDirectionPrioParametersCompanion, VSPKDirectionTrackerParametersCompanion, VSPKGetNewPositionsAmountParametersCompanion, VSPKMiscParametersCompanion, VSPKMovementStateManagerParametersCompanion, VSPKQClusterParametersCompanion, VSPKQLayerParametersCompanion, VSPKQLayerQueueParametersCompanion, VSPKQPosParametersCompanion, VSPKSlidingRatioParametersCompanion, VSPKSmallClusterSpreadIncreaserParametersCompanion, VSPKSpeedSpreadHandlerParametersCompanion, VSPKSplitPositionsParametersCompanion, VSPKTSPPrioParametersCompanion, VSPKTrolleySkipParametersCompanion, VSPKKotlinThrowable, VSPKQCluster, VSPKQClusterQClusterResetDegree, VSPKQClusterClusterState, VSPKQClusterClusterType, VSPKAdditiveModifier, VSPKPositionData, VSPKMoveEventData, VSPKContextManager, VSPKPolarPoint, VSPKMoveVectorMoveType, VSPKSensorBundleBundleType, VSPKSensorBundle, VSPKVectorTransformer, VSPKAndroidJacketPocketMLParameters, VSPKAndroidPantJacketDistinguishParameters, VSPKAndroidPocketLenientParameters, VSPKAndroidPocketMLParameters, VSPKAndroidPocketOrSwingNNParameters, VSPKAndroidRegularMLParameters, VSPKAndroidSwingAntiSymNeuralNetworkParameters, VSPKAndroidSwingSymNeuralNetworkParameters, VSPKIOSJacketPocketNeuralNetworkParameters, VSPKIOSPantJacketDistinguishParameters, VSPKIOSPocketNeuralNetworkParameters, VSPKMLModelFactory, VSPKNNActivationFunctions, VSPKNNCoefficientReader, VSPKNNCoefficientReaderJsonNN, VSPKNNCoefficientReaderJsonNNCompanion, VSPKNeuralNetworkActivationFunctionType, VSPKPS20SwingAntiSymNeuralNetworkParameters, VSPKPS20SwingSymNeuralNetworkParameters, VSPKPocketOrSwingNeuralNetworkParameters, VSPKRegularNeuralNetworkParameters, VSPKSwingAntiSymNeuralNetworkParameters, VSPKSwingNeuralNetworkParameters, VSPKSwingSymNeuralNetworkParameters, VSPKTrolleyNeuralNetworkParameters, VSPKAndroidSymAntiSymParameters, VSPKLinearSVMSwingStepDetectorValues, VSPKPS20SwingAntiSymLenientParameters, VSPKPS20SwingSymLenientParameters, VSPKRegularRBFSVMsupport, VSPKSVMHelpers, VSPKSpackRBFSVMsupport, VSPKSwingAntiSymLenientParameters, VSPKSwingSymLenientParameters, VSPKSymAntiSymParameters, VSPKWeakEvaluatorParameters, VSPKPositionEvent, VSPKSignalHandler, VSPKAverageVariance, VSPKAltitudeBasedFloorSensorFloorState, VSPKAltitudeBasedFloorSensor, VSPKNavMeshScrubber, VSPKSequentialScrubber, VSPKQLayerHandler, VSPKAltitudeOptions, VSPKAltitudeCompanion, VSPKSingleLinkedQueue<T>, VSPKAltitudeOptionsCompanion, VSPKNode<T>, VSPKBaseSignalDispatcher, VSPKPositionEventHandler, VSPKNavGraph, VSPKIPathfinderGoalType, VSPKDjikstrasOptimizedCompanion, VSPKDjikstrasOptimizedOldNodeGraph, VSPKNavGraphVertex, VSPKPriorityQueueUsingSinglyLinkedList<T>, VSPKNavGraphCompanion, VSPKNavGraphVertexCompanion, VSPKPathProcessor, VSPKPathProcessorBSpline, VSPKTSPThreeOptAlgorithmCompanion, VSPKKotlinRandom, VSPKStepEventBasedMLObservationType, VSPKStepEventBasedMLMLParameters, VSPKPersonalMLDataCompanion, VSPKReiterationData, VSPKCoefficientOptimizerJobCompanion, VSPKCoefficientOptimizerJobAxlExperimentalCompanion, VSPKCoefficientOptimizerJobLegacyCompanion, VSPKCoefficientOptimizerJobPaulExperimentalCompanion, VSPKWeightCalculatorNNParameters, VSPKKotlinFloatIterator, VSPKKotlinDoubleIterator, VSPKKotlinIntIterator, VSPKKotlinRandomDefault, VSPKKotlinByteArray, VSPKKotlinx_serialization_coreSerializersModule, VSPKKotlinx_serialization_coreSerialKind, VSPKKotlinNothing, VSPKKotlinByteIterator;

@protocol VSPKKotlinComparable, VSPKOutputSignal, VSPKIQPSVPS, VSPKIQPSPersonalMLParameters, VSPKIQPSOffsetZone, VSPKIQPSSyncData, VSPKStepListener, VSPKtt2EngineTt2EngineDelegate, VSPKMLJob, VSPKStepEventBasedMLStepEventBasedMLDelegate, VSPKPositioningHandler, VSPKClockListener, VSPKIQPSRawSensorManager, VSPKIQPSInteractor, VSPKIQPSReplayInteractor, VSPKIQPSMapInformation, VSPKIQPSUserSettings, VSPKSensorInterpreter, VSPKtt2Engine, VSPKtt2EngineParameterManager, VSPKIQPSMLParameters, VSPKStepDetector, VSPKSensorInterpreterStepListener, VSPKIStepDetectorManager, VSPKObserver, VSPKStepEventFilter, VSPKKotlinx_serialization_coreKSerializer, VSPKSpackListener, VSPKSpackEvaluator, VSPKSpackFeaturisationModule, VSPKDirectionModel, VSPKDirectionFilter, VSPKDiscreteSpeedFunction, VSPKContinuousSpeedFunction, VSPKAuxiliarySensor, VSPKAuxiliarySensorManager, VSPKIReplayDataHandler, VSPKPocketSensor, VSPKIReplayData, VSPKAdjustmentManager, VSPKRollingFeaturiser, VSPKContextReturnData, VSPKKotlinIterator, VSPKKotlinIterable, VSPKKotlinCollection, VSPKKotlinMutableIterable, VSPKKotlinMutableCollection, VSPKKotlinx_coroutines_coreDisposableHandle, VSPKKotlinMutableIterator, VSPKContextListener, VSPKContextTracker, VSPKContextData, VSPKSignalDispatcher, VSPKLegacyInterface, VSPKSignalResponse, VSPKSignalListener, VSPKLegacyInterfacePlus, VSPKFloorSensor, VSPKScrubber, VSPKAltitudeDelegate, VSPKIPathfinderGoal, VSPKIPathfinderPath, VSPKIPathfinderListener, VSPKIPathfinder, VSPKStepEventBasedML, VSPKMLParamSetter, VSPKCorridorFinder, VSPKKotlinx_serialization_coreEncoder, VSPKKotlinx_serialization_coreSerialDescriptor, VSPKKotlinx_serialization_coreSerializationStrategy, VSPKKotlinx_serialization_coreDecoder, VSPKKotlinx_serialization_coreDeserializationStrategy, VSPKKotlinx_serialization_coreCompositeEncoder, VSPKKotlinAnnotation, VSPKKotlinx_serialization_coreCompositeDecoder, VSPKKotlinx_serialization_coreSerializersModuleCollector, VSPKKotlinKClass, VSPKKotlinKDeclarationContainer, VSPKKotlinKAnnotatedElement, VSPKKotlinKClassifier;

NS_ASSUME_NONNULL_BEGIN
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-warning-option"
#pragma clang diagnostic ignored "-Wincompatible-property-type"
#pragma clang diagnostic ignored "-Wnullability"

#pragma push_macro("_Nullable_result")
#if !__has_feature(nullability_nullable_result)
#undef _Nullable_result
#define _Nullable_result _Nullable
#endif

__attribute__((swift_name("KotlinBase")))
@interface VSPKBase : NSObject
- (instancetype)init __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (void)initialize __attribute__((objc_requires_super));
@end;

@interface VSPKBase (VSPKBaseCopying) <NSCopying>
@end;

__attribute__((swift_name("KotlinMutableSet")))
@interface VSPKMutableSet<ObjectType> : NSMutableSet<ObjectType>
@end;

__attribute__((swift_name("KotlinMutableDictionary")))
@interface VSPKMutableDictionary<KeyType, ObjectType> : NSMutableDictionary<KeyType, ObjectType>
@end;

@interface NSError (NSErrorVSPKKotlinException)
@property (readonly) id _Nullable kotlinException;
@end;

__attribute__((swift_name("KotlinNumber")))
@interface VSPKNumber : NSNumber
- (instancetype)initWithChar:(char)value __attribute__((unavailable));
- (instancetype)initWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
- (instancetype)initWithShort:(short)value __attribute__((unavailable));
- (instancetype)initWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
- (instancetype)initWithInt:(int)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
- (instancetype)initWithLong:(long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
- (instancetype)initWithLongLong:(long long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
- (instancetype)initWithFloat:(float)value __attribute__((unavailable));
- (instancetype)initWithDouble:(double)value __attribute__((unavailable));
- (instancetype)initWithBool:(BOOL)value __attribute__((unavailable));
- (instancetype)initWithInteger:(NSInteger)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
+ (instancetype)numberWithChar:(char)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
+ (instancetype)numberWithShort:(short)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
+ (instancetype)numberWithInt:(int)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
+ (instancetype)numberWithLong:(long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
+ (instancetype)numberWithLongLong:(long long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
+ (instancetype)numberWithFloat:(float)value __attribute__((unavailable));
+ (instancetype)numberWithDouble:(double)value __attribute__((unavailable));
+ (instancetype)numberWithBool:(BOOL)value __attribute__((unavailable));
+ (instancetype)numberWithInteger:(NSInteger)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
@end;

__attribute__((swift_name("KotlinByte")))
@interface VSPKByte : VSPKNumber
- (instancetype)initWithChar:(char)value;
+ (instancetype)numberWithChar:(char)value;
@end;

__attribute__((swift_name("KotlinUByte")))
@interface VSPKUByte : VSPKNumber
- (instancetype)initWithUnsignedChar:(unsigned char)value;
+ (instancetype)numberWithUnsignedChar:(unsigned char)value;
@end;

__attribute__((swift_name("KotlinShort")))
@interface VSPKShort : VSPKNumber
- (instancetype)initWithShort:(short)value;
+ (instancetype)numberWithShort:(short)value;
@end;

__attribute__((swift_name("KotlinUShort")))
@interface VSPKUShort : VSPKNumber
- (instancetype)initWithUnsignedShort:(unsigned short)value;
+ (instancetype)numberWithUnsignedShort:(unsigned short)value;
@end;

__attribute__((swift_name("KotlinInt")))
@interface VSPKInt : VSPKNumber
- (instancetype)initWithInt:(int)value;
+ (instancetype)numberWithInt:(int)value;
@end;

__attribute__((swift_name("KotlinUInt")))
@interface VSPKUInt : VSPKNumber
- (instancetype)initWithUnsignedInt:(unsigned int)value;
+ (instancetype)numberWithUnsignedInt:(unsigned int)value;
@end;

__attribute__((swift_name("KotlinLong")))
@interface VSPKLong : VSPKNumber
- (instancetype)initWithLongLong:(long long)value;
+ (instancetype)numberWithLongLong:(long long)value;
@end;

__attribute__((swift_name("KotlinULong")))
@interface VSPKULong : VSPKNumber
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value;
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value;
@end;

__attribute__((swift_name("KotlinFloat")))
@interface VSPKFloat : VSPKNumber
- (instancetype)initWithFloat:(float)value;
+ (instancetype)numberWithFloat:(float)value;
@end;

__attribute__((swift_name("KotlinDouble")))
@interface VSPKDouble : VSPKNumber
- (instancetype)initWithDouble:(double)value;
+ (instancetype)numberWithDouble:(double)value;
@end;

__attribute__((swift_name("KotlinBoolean")))
@interface VSPKBoolean : VSPKNumber
- (instancetype)initWithBool:(BOOL)value;
+ (instancetype)numberWithBool:(BOOL)value;
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GlobalQPSValues")))
@interface VSPKGlobalQPSValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)globalQPSValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKGlobalQPSValues *shared __attribute__((swift_name("shared")));
@property VSPKIQPSDeviceMode *ARM_DIRECTION __attribute__((swift_name("ARM_DIRECTION")));
@property (readonly) VSPKKotlinFloatArray *ARM_REGULAR __attribute__((swift_name("ARM_REGULAR")));
@property (readonly) VSPKKotlinFloatArray *ARM_SWING __attribute__((swift_name("ARM_SWING")));
@property (readonly) VSPKKotlinFloatArray *ARM_TROLLEY __attribute__((swift_name("ARM_TROLLEY")));
@property (readonly) float ATMOSPHERE __attribute__((swift_name("ATMOSPHERE")));
@property (readonly) double BETA_LIMIT __attribute__((swift_name("BETA_LIMIT")));
@property (readonly) double CLUSTERING_RAYTRACE_RESOLUTION __attribute__((swift_name("CLUSTERING_RAYTRACE_RESOLUTION")));
@property (readonly) VSPKIQPSParameterPackageEnum *DEFAULT_PARAM_PACKAGE __attribute__((swift_name("DEFAULT_PARAM_PACKAGE")));
@property float DEFAULT_USER_HEIGHT __attribute__((swift_name("DEFAULT_USER_HEIGHT")));
@property BOOL DEVICE_IS_ANDROID __attribute__((swift_name("DEVICE_IS_ANDROID")));
@property double GENERIC_RAYTRACE_RESOLUTION __attribute__((swift_name("GENERIC_RAYTRACE_RESOLUTION")));
@property (readonly) float GRAVITY __attribute__((swift_name("GRAVITY")));
@property VSPKKotlinFloatArray *HAND_KNUCKLE_PUSH_TROLLEY __attribute__((swift_name("HAND_KNUCKLE_PUSH_TROLLEY")));
@property (readonly) VSPKKotlinFloatArray *HAND_REGULAR __attribute__((swift_name("HAND_REGULAR")));
@property (readonly) VSPKKotlinFloatArray *HAND_SWING __attribute__((swift_name("HAND_SWING")));
@property VSPKKotlinFloatArray *HAND_TROLLEY __attribute__((swift_name("HAND_TROLLEY")));
@property (readonly) VSPKKotlinFloatArray *HAND_TROLLEY_MOUNT __attribute__((swift_name("HAND_TROLLEY_MOUNT")));
@property (readonly) float IDEAL_GAS_CONSTANT __attribute__((swift_name("IDEAL_GAS_CONSTANT")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *LEFT __attribute__((swift_name("LEFT")));
@property (readonly) int32_t MAX_STEP_TIME __attribute__((swift_name("MAX_STEP_TIME")));
@property (readonly) double MINIMUM_RAYTRACE_RESOLUTION __attribute__((swift_name("MINIMUM_RAYTRACE_RESOLUTION")));
@property (readonly) int32_t MIN_STEP_TIME __attribute__((swift_name("MIN_STEP_TIME")));
@property (readonly) float MOLAR_MASS_AIR __attribute__((swift_name("MOLAR_MASS_AIR")));
@property int32_t NUMBER_OF_DIRECTIONS __attribute__((swift_name("NUMBER_OF_DIRECTIONS")));
@property VSPKKotlinFloatArray *POCKET_AXIS __attribute__((swift_name("POCKET_AXIS")));
@property (readonly) int32_t RAYTRACE_MAX_DISTANCE __attribute__((swift_name("RAYTRACE_MAX_DISTANCE")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *RIGHT __attribute__((swift_name("RIGHT")));
@property VSPKKotlinArray<VSPKKotlinFloatArray *> *ROTATION_MATRIX __attribute__((swift_name("ROTATION_MATRIX")));
@property (readonly) int64_t SECOND __attribute__((swift_name("SECOND")));
@property (readonly) double TAU __attribute__((swift_name("TAU")));
@property (readonly) float TEMPERATURE_15C __attribute__((swift_name("TEMPERATURE_15C")));
@property (readonly) double VARIABLE_ERROR __attribute__((swift_name("VARIABLE_ERROR")));
@property (readonly) double VARIABLE_ERROR_SCALER __attribute__((swift_name("VARIABLE_ERROR_SCALER")));
@property VSPKKotlinFloatArray *Y_AXIS __attribute__((swift_name("Y_AXIS")));
@property (readonly) VSPKMoveVector *ZERO_MOVE_VECTOR __attribute__((swift_name("ZERO_MOVE_VECTOR")));
@property (readonly) VSPKVector *ZERO_VECTOR __attribute__((swift_name("ZERO_VECTOR")));
@property (readonly) VSPKDouble * _Nullable magneticHeadingErrorStd __attribute__((swift_name("magneticHeadingErrorStd")));
@end;

__attribute__((swift_name("IQPS")))
@protocol VSPKIQPS
@required
@end;

__attribute__((swift_name("KotlinComparable")))
@protocol VSPKKotlinComparable
@required
- (int32_t)compareToOther:(id _Nullable)other __attribute__((swift_name("compareTo(other:)")));
@end;

__attribute__((swift_name("KotlinEnum")))
@interface VSPKKotlinEnum<E> : VSPKBase <VSPKKotlinComparable>
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKKotlinEnumCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(E)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t ordinal __attribute__((swift_name("ordinal")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IQPSDeviceMode")))
@interface VSPKIQPSDeviceMode : VSPKKotlinEnum<VSPKIQPSDeviceMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKIQPSDeviceMode *normal __attribute__((swift_name("normal")));
@property (class, readonly) VSPKIQPSDeviceMode *handLeft __attribute__((swift_name("handLeft")));
@property (class, readonly) VSPKIQPSDeviceMode *handRight __attribute__((swift_name("handRight")));
@property (class, readonly) VSPKIQPSDeviceMode *handVerticalLeft __attribute__((swift_name("handVerticalLeft")));
@property (class, readonly) VSPKIQPSDeviceMode *handVerticalRight __attribute__((swift_name("handVerticalRight")));
@property (class, readonly) VSPKIQPSDeviceMode *handKnucklePushLeft __attribute__((swift_name("handKnucklePushLeft")));
@property (class, readonly) VSPKIQPSDeviceMode *handKnucklePushRight __attribute__((swift_name("handKnucklePushRight")));
@property (class, readonly) VSPKIQPSDeviceMode *handVerticalKnucklePushLeft __attribute__((swift_name("handVerticalKnucklePushLeft")));
@property (class, readonly) VSPKIQPSDeviceMode *handVerticalKnucklePushRight __attribute__((swift_name("handVerticalKnucklePushRight")));
@property (class, readonly) VSPKIQPSDeviceMode *armLeft __attribute__((swift_name("armLeft")));
@property (class, readonly) VSPKIQPSDeviceMode *armRight __attribute__((swift_name("armRight")));
@property (class, readonly) VSPKIQPSDeviceMode *trolleyMountLeft __attribute__((swift_name("trolleyMountLeft")));
@property (class, readonly) VSPKIQPSDeviceMode *trolleyMountRight __attribute__((swift_name("trolleyMountRight")));
+ (VSPKKotlinArray<VSPKIQPSDeviceMode *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IQPSDeviceOrientation")))
@interface VSPKIQPSDeviceOrientation : VSPKKotlinEnum<VSPKIQPSDeviceOrientation *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKIQPSDeviceOrientation *regular __attribute__((swift_name("regular")));
@property (class, readonly) VSPKIQPSDeviceOrientation *swingSym __attribute__((swift_name("swingSym")));
@property (class, readonly) VSPKIQPSDeviceOrientation *swingAntiSym __attribute__((swift_name("swingAntiSym")));
@property (class, readonly) VSPKIQPSDeviceOrientation *trolley __attribute__((swift_name("trolley")));
@property (class, readonly) VSPKIQPSDeviceOrientation *trouserPocket __attribute__((swift_name("trouserPocket")));
@property (class, readonly) VSPKIQPSDeviceOrientation *jacketPocket __attribute__((swift_name("jacketPocket")));
+ (VSPKKotlinArray<VSPKIQPSDeviceOrientation *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IQPSInteractor")))
@protocol VSPKIQPSInteractor
@required
- (void)outputSignalSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("outputSignal(signal:)")));
- (void)setVPSVps:(id<VSPKIQPSVPS>)vps __attribute__((swift_name("setVPS(vps:)")));
@end;

__attribute__((swift_name("IQPSMLParameters")))
@protocol VSPKIQPSMLParameters
@required
@property (readonly) NSArray<VSPKIQPSPersonalMLAlgorithm *> * _Nullable mlAlgorithms __attribute__((swift_name("mlAlgorithms")));
@property (readonly) id<VSPKIQPSPersonalMLParameters> _Nullable personalMLParameters __attribute__((swift_name("personalMLParameters")));
@end;

__attribute__((swift_name("IQPSMapInformation")))
@protocol VSPKIQPSMapInformation
@required
@property (readonly) VSPKDouble * _Nullable floorHeight __attribute__((swift_name("floorHeight")));
@property (readonly) int32_t height __attribute__((swift_name("height")));
@property (readonly) UIImage * _Nullable mapFenceImage __attribute__((swift_name("mapFenceImage")));
@property (readonly) NSArray<NSArray<VSPKPointF *> *> *mapFencePolygons __attribute__((swift_name("mapFencePolygons")));
@property (readonly) double mapFenceScale __attribute__((swift_name("mapFenceScale")));
@property (readonly) VSPKDouble * _Nullable offsetZoneScale __attribute__((swift_name("offsetZoneScale")));
@property (readonly) NSArray<id<VSPKIQPSOffsetZone>> *offsetZones __attribute__((swift_name("offsetZones")));
@property (readonly) double realWorldOffset __attribute__((swift_name("realWorldOffset")));
@property (readonly) int32_t width __attribute__((swift_name("width")));
@end;

__attribute__((swift_name("IQPSOffsetZone")))
@protocol VSPKIQPSOffsetZone
@required
@property (readonly) double offsetRadians __attribute__((swift_name("offsetRadians")));
@property (readonly) NSArray<VSPKPointF *> *polygons __attribute__((swift_name("polygons")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IQPSParameterPackageEnum")))
@interface VSPKIQPSParameterPackageEnum : VSPKKotlinEnum<VSPKIQPSParameterPackageEnum *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKIQPSParameterPackageEnum *retail __attribute__((swift_name("retail")));
@property (class, readonly) VSPKIQPSParameterPackageEnum *ps20 __attribute__((swift_name("ps20")));
@property (class, readonly) VSPKIQPSParameterPackageEnum *warehouse __attribute__((swift_name("warehouse")));
@property (class, readonly) VSPKIQPSParameterPackageEnum *jula __attribute__((swift_name("jula")));
@property (class, readonly) VSPKIQPSParameterPackageEnum *ikea __attribute__((swift_name("ikea")));
+ (VSPKKotlinArray<VSPKIQPSParameterPackageEnum *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IQPSPersonalMLAlgorithm")))
@interface VSPKIQPSPersonalMLAlgorithm : VSPKKotlinEnum<VSPKIQPSPersonalMLAlgorithm *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *coefficientOptimizer __attribute__((swift_name("coefficientOptimizer")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *sac __attribute__((swift_name("sac")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *heuristicNoScan __attribute__((swift_name("heuristicNoScan")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *regresionMediator __attribute__((swift_name("regresionMediator")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *teoScanMl __attribute__((swift_name("teoScanMl")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *driftCompensator __attribute__((swift_name("driftCompensator")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *compassAngleRectifier __attribute__((swift_name("compassAngleRectifier")));
@property (class, readonly) VSPKIQPSPersonalMLAlgorithm *none __attribute__((swift_name("none")));
+ (VSPKKotlinArray<VSPKIQPSPersonalMLAlgorithm *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IQPSPersonalMLParameters")))
@protocol VSPKIQPSPersonalMLParameters
@required
@property (readonly) VSPKIQPSPersonalMLAlgorithm *personalMLAlgorithm __attribute__((swift_name("personalMLAlgorithm")));
@property (readonly) NSArray<VSPKPersonalMLData *> *personalMLData __attribute__((swift_name("personalMLData")));
@end;

__attribute__((swift_name("IQPSRawSensorManager")))
@protocol VSPKIQPSRawSensorManager
@required
- (void)clearAllObservers __attribute__((swift_name("clearAllObservers()")));
- (void)shutDown __attribute__((swift_name("shutDown()")));
- (void)start __attribute__((swift_name("start()")));
- (void)stopAllSensors __attribute__((swift_name("stopAllSensors()")));
@property (readonly) VSPKRawSensor *accelerationSensor __attribute__((swift_name("accelerationSensor")));
@property (readonly) VSPKRawSensor * _Nullable accelerationSensorUncalibrated __attribute__((swift_name("accelerationSensorUncalibrated")));
@property (readonly) VSPKRawSensor * _Nullable altitudeSensor __attribute__((swift_name("altitudeSensor")));
@property (readonly) VSPKRawSensor * _Nullable barometerSensor __attribute__((swift_name("barometerSensor")));
@property (readonly) VSPKRawSensor *gravitySensor __attribute__((swift_name("gravitySensor")));
@property (readonly) VSPKRawSensor * _Nullable gyroscopeSensorUncalibrated __attribute__((swift_name("gyroscopeSensorUncalibrated")));
@property (readonly) VSPKRawSensor * _Nullable lockedSensor __attribute__((swift_name("lockedSensor")));
@property (readonly) VSPKRawSensor * _Nullable luxSensor __attribute__((swift_name("luxSensor")));
@property (readonly) VSPKRawSensor * _Nullable orientationSensor __attribute__((swift_name("orientationSensor")));
@property (readonly) VSPKRawSensor *rotationSensor __attribute__((swift_name("rotationSensor")));
@property (readonly) VSPKRawSensor * _Nullable screenBrightnessSensor __attribute__((swift_name("screenBrightnessSensor")));
@property (readonly) VSPKIQPSSystemType *systemType __attribute__((swift_name("systemType")));
@end;

__attribute__((swift_name("IQPSReplayInteractor")))
@protocol VSPKIQPSReplayInteractor
@required
- (NSString * _Nullable)getDataIdentifier:(NSString *)identifier printMissingFileException:(BOOL)printMissingFileException __attribute__((swift_name("getData(identifier:printMissingFileException:)")));
- (void)postEndDataData:(NSString *)data identifier:(NSString *)identifier __attribute__((swift_name("postEndData(data:identifier:)")));
- (void)postPartialDataData:(NSString *)data identifier:(NSString *)identifier __attribute__((swift_name("postPartialData(data:identifier:)")));
@property (readonly) int64_t maxRecordingTimePerPartInMillis __attribute__((swift_name("maxRecordingTimePerPartInMillis")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IQPSReplayInteractorCompanion")))
@interface VSPKIQPSReplayInteractorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIQPSReplayInteractorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((swift_name("IQPSSyncData")))
@protocol VSPKIQPSSyncData
@required
@property (readonly) float angle __attribute__((swift_name("angle")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) BOOL syncAngle __attribute__((swift_name("syncAngle")));
@property (readonly) BOOL syncPosition __attribute__((swift_name("syncPosition")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) BOOL uncertainAngle __attribute__((swift_name("uncertainAngle")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IQPSSystemType")))
@interface VSPKIQPSSystemType : VSPKKotlinEnum<VSPKIQPSSystemType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKIQPSSystemType *android __attribute__((swift_name("android")));
@property (class, readonly) VSPKIQPSSystemType *ios __attribute__((swift_name("ios")));
+ (VSPKKotlinArray<VSPKIQPSSystemType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IQPSUserSettings")))
@protocol VSPKIQPSUserSettings
@required
@property (readonly) VSPKDouble * _Nullable headingCorrection __attribute__((swift_name("headingCorrection")));
@property (readonly) VSPKFloat * _Nullable speedRegressionIntercept __attribute__((swift_name("speedRegressionIntercept")));
@property (readonly) VSPKFloat * _Nullable speedRegressionSlope __attribute__((swift_name("speedRegressionSlope")));
@property (readonly) VSPKFloat * _Nullable speedScaling __attribute__((swift_name("speedScaling")));
@property (readonly) VSPKFloat * _Nullable userHeight __attribute__((swift_name("userHeight")));
@end;

__attribute__((swift_name("IQPSVPS")))
@protocol VSPKIQPSVPS
@required
- (void)deviceModeMode:(VSPKIQPSDeviceMode *)mode offset:(VSPKDouble * _Nullable)offset __attribute__((swift_name("deviceMode(mode:offset:)")));
- (VSPKKotlinFloatArray * _Nullable)getLastRotation __attribute__((swift_name("getLastRotation()")));
- (void)doInitPositionSyncEvent __attribute__((swift_name("doInitPositionSyncEvent()")));
- (void)onPathUpdateEventPath:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("onPathUpdateEvent(path:)")));
- (void)onPositionRadiusSyncEventPosition:(VSPKPointF *)position radius:(double)radius __attribute__((swift_name("onPositionRadiusSyncEvent(position:radius:)")));
- (void)onPositionSyncEventData:(id<VSPKIQPSSyncData>)data __attribute__((swift_name("onPositionSyncEvent(data:)")));
- (void)setCurrentDirectionAngle:(float)angle __attribute__((swift_name("setCurrentDirection(angle:)")));
- (void)startNavigationStartPos:(VSPKPointF *)startPos startAngle:(double)startAngle startSensors:(BOOL)startSensors uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("startNavigation(startPos:startAngle:startSensors:uncertainAngle:)")));
- (void)startRecording __attribute__((swift_name("startRecording()")));
- (void)stopNavigation __attribute__((swift_name("stopNavigation()")));
- (void)stopRecording __attribute__((swift_name("stopRecording()")));
- (BOOL)validPositionX:(float)x y:(float)y __attribute__((swift_name("validPosition(x:y:)")));
- (BOOL)validPositionPointF:(VSPKPointF *)pointF __attribute__((swift_name("validPosition(pointF:)")));
@end;

__attribute__((swift_name("StepListener")))
@protocol VSPKStepListener
@required
- (id _Nullable)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
@end;

__attribute__((swift_name("tt2EngineTt2EngineDelegate")))
@protocol VSPKtt2EngineTt2EngineDelegate
@required
- (void)onNewPositionX:(VSPKFloat * _Nullable)x y:(VSPKFloat * _Nullable)y std:(VSPKFloat * _Nullable)std timestamp:(int64_t)timestamp __attribute__((swift_name("onNewPosition(x:y:std:timestamp:)")));
@end;

__attribute__((swift_name("StepEventBasedMLStepEventBasedMLDelegate")))
@protocol VSPKStepEventBasedMLStepEventBasedMLDelegate
@required
- (void)onHeadingCorrectionSuggestionOffset:(VSPKDouble * _Nullable)offset deviceOrientation:(VSPKIQPSDeviceOrientation *)deviceOrientation __attribute__((swift_name("onHeadingCorrectionSuggestion(offset:deviceOrientation:)")));
- (void)onSpeedCoefficientSuggestionAlpha:(VSPKFloat * _Nullable)alpha beta:(VSPKFloat * _Nullable)beta __attribute__((swift_name("onSpeedCoefficientSuggestion(alpha:beta:)")));
- (void)onSpeedScalingSuggestionScaleFactor:(VSPKFloat * _Nullable)scaleFactor __attribute__((swift_name("onSpeedScalingSuggestion(scaleFactor:)")));
- (void)reiterateFromGivenTimestampTimestamp:(int64_t)timestamp __attribute__((swift_name("reiterateFromGivenTimestamp(timestamp:)")));
- (void)sendDriftAdditionFloat:(float)float_ __attribute__((swift_name("sendDriftAddition(float:)")));
- (void)sendMLDataData:(VSPKPersonalMLData *)data __attribute__((swift_name("sendMLData(data:)")));
- (void)sendMLJobJob:(id<VSPKMLJob>)job __attribute__((swift_name("sendMLJob(job:)")));
- (void)sendRotationAdditionFloat:(float)float_ override:(BOOL)override __attribute__((swift_name("sendRotationAddition(float:override:)")));
- (void)sendSpeedFactorFloat:(float)float_ override:(BOOL)override __attribute__((swift_name("sendSpeedFactor(float:override:)")));
@end;

__attribute__((swift_name("PositioningHandler")))
@protocol VSPKPositioningHandler <VSPKIQPSVPS, VSPKStepListener, VSPKtt2EngineTt2EngineDelegate, VSPKStepEventBasedMLStepEventBasedMLDelegate>
@required
- (void)updateDirectionAngle:(double)angle timestamp:(int64_t)timestamp __attribute__((swift_name("updateDirection(angle:timestamp:)")));
@end;

__attribute__((swift_name("ClockListener")))
@protocol VSPKClockListener
@required
- (void)tikTokOnTheClockCurrentTime:(int64_t)currentTime __attribute__((swift_name("tikTokOnTheClock(currentTime:)")));
@end;

__attribute__((swift_name("QLayerHandler")))
@interface VSPKQLayerHandler : VSPKBase <VSPKPositioningHandler, VSPKClockListener>
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager interactor:(id<VSPKIQPSInteractor>)interactor replayInteractor:(id<VSPKIQPSReplayInteractor> _Nullable)replayInteractor mapInformation:(id<VSPKIQPSMapInformation>)mapInformation userSettings:(id<VSPKIQPSUserSettings> _Nullable)userSettings parameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum playback:(BOOL)playback sensorInterpreter:(id<VSPKSensorInterpreter> _Nullable)sensorInterpreter particleFilter:(id<VSPKtt2Engine> _Nullable)particleFilter tt2EngineParameterManager:(id<VSPKtt2EngineParameterManager> _Nullable)tt2EngineParameterManager mlParameters:(id<VSPKIQPSMLParameters> _Nullable)mlParameters __attribute__((swift_name("init(rawSensorManager:interactor:replayInteractor:mapInformation:userSettings:parameterPackageEnum:playback:sensorInterpreter:particleFilter:tt2EngineParameterManager:mlParameters:)"))) __attribute__((objc_designated_initializer));
- (void)deviceModeMode:(VSPKIQPSDeviceMode *)mode offset:(VSPKDouble * _Nullable)offset __attribute__((swift_name("deviceMode(mode:offset:)")));
- (VSPKKotlinFloatArray * _Nullable)getLastRotation __attribute__((swift_name("getLastRotation()")));
- (void)doInitPositionSyncEvent __attribute__((swift_name("doInitPositionSyncEvent()")));
- (void)onHeadingCorrectionSuggestionOffset:(VSPKDouble * _Nullable)offset deviceOrientation:(VSPKIQPSDeviceOrientation *)deviceOrientation __attribute__((swift_name("onHeadingCorrectionSuggestion(offset:deviceOrientation:)")));
- (void)onNewPositionX:(VSPKFloat * _Nullable)x y:(VSPKFloat * _Nullable)y std:(VSPKFloat * _Nullable)std timestamp:(int64_t)timestamp __attribute__((swift_name("onNewPosition(x:y:std:timestamp:)")));
- (void)onPathUpdateEventPath:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("onPathUpdateEvent(path:)")));
- (void)onPositionRadiusSyncEventPosition:(VSPKPointF *)position radius:(double)radius __attribute__((swift_name("onPositionRadiusSyncEvent(position:radius:)")));
- (void)onPositionSyncEventData:(id<VSPKIQPSSyncData>)data __attribute__((swift_name("onPositionSyncEvent(data:)")));
- (void)onSpeedCoefficientSuggestionAlpha:(VSPKFloat * _Nullable)alpha beta:(VSPKFloat * _Nullable)beta __attribute__((swift_name("onSpeedCoefficientSuggestion(alpha:beta:)")));
- (void)onSpeedScalingSuggestionScaleFactor:(VSPKFloat * _Nullable)scaleFactor __attribute__((swift_name("onSpeedScalingSuggestion(scaleFactor:)")));
- (void)reiterateFromGivenTimestampTimestamp:(int64_t)timestamp __attribute__((swift_name("reiterateFromGivenTimestamp(timestamp:)")));
- (void)sendDriftAdditionFloat:(float)float_ __attribute__((swift_name("sendDriftAddition(float:)")));
- (void)sendMLDataData:(VSPKPersonalMLData *)data __attribute__((swift_name("sendMLData(data:)")));
- (void)sendMLJobJob:(id<VSPKMLJob>)job __attribute__((swift_name("sendMLJob(job:)")));
- (void)sendRotationAdditionFloat:(float)float_ override:(BOOL)override __attribute__((swift_name("sendRotationAddition(float:override:)")));
- (void)sendSpeedFactorFloat:(float)float_ override:(BOOL)override __attribute__((swift_name("sendSpeedFactor(float:override:)")));
- (void)setCurrentDirectionAngle:(float)angle __attribute__((swift_name("setCurrentDirection(angle:)")));
- (void)startDebugStartPos:(VSPKPointF * _Nullable)startPos startAngle:(VSPKDouble * _Nullable)startAngle uncertainAngle:(BOOL)uncertainAngle startSensors:(BOOL)startSensors __attribute__((swift_name("startDebug(startPos:startAngle:uncertainAngle:startSensors:)")));
- (void)startNavigationStartPos:(VSPKPointF *)startPos startAngle:(double)startAngle startSensors:(BOOL)startSensors uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("startNavigation(startPos:startAngle:startSensors:uncertainAngle:)")));
- (void)startRecording __attribute__((swift_name("startRecording()")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)moveEventData __attribute__((swift_name("stepEvent(step:)")));
- (void)stopNavigation __attribute__((swift_name("stopNavigation()")));
- (void)stopRecording __attribute__((swift_name("stopRecording()")));
- (void)tikTokOnTheClockCurrentTime:(int64_t)currentTime __attribute__((swift_name("tikTokOnTheClock(currentTime:)")));
- (void)updateDirectionAngle:(double)direction timestamp:(int64_t)timestamp __attribute__((swift_name("updateDirection(angle:timestamp:)")));
- (BOOL)validPositionX:(float)x y:(float)y __attribute__((swift_name("validPosition(x:y:)")));
- (BOOL)validPositionPointF:(VSPKPointF *)pointF __attribute__((swift_name("validPosition(pointF:)")));
@end;

__attribute__((swift_name("SensorInterpreter")))
@protocol VSPKSensorInterpreter
@required
- (void)onAcquiredPosition __attribute__((swift_name("onAcquiredPosition()")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)setGameVectorDirectionAngle:(float)angle directionOffset:(float)directionOffset __attribute__((swift_name("setGameVectorDirection(angle:directionOffset:)")));
- (void)setHandlerHandler:(id<VSPKPositioningHandler>)handler __attribute__((swift_name("setHandler(handler:)")));
- (void)start __attribute__((swift_name("start()")));
- (void)startRecording __attribute__((swift_name("startRecording()")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)stopRecording __attribute__((swift_name("stopRecording()")));
@property (readonly) id<VSPKPositioningHandler> handler __attribute__((swift_name("handler")));
@end;

__attribute__((swift_name("tt2Engine")))
@protocol VSPKtt2Engine
@required
- (void)configureOutput:(id<VSPKtt2EngineTt2EngineDelegate> _Nullable)output replayDataHandler:(VSPKReplayDataHandler * _Nullable)replayDataHandler __attribute__((swift_name("configure(output:replayDataHandler:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (double)getRealWorldOrientation __attribute__((swift_name("getRealWorldOrientation()")));
- (VSPKNavBundle * _Nullable)moveEventLength:(float)length direction:(double)direction duration:(int64_t)duration currentTime:(int64_t)currentTime orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("moveEvent(length:direction:duration:currentTime:orientation:)")));
- (void)setPositionX:(float)x y:(float)y angleStd:(VSPKDouble * _Nullable)angleStd numClusters:(VSPKInt * _Nullable)numClusters radius:(VSPKDouble * _Nullable)radius __attribute__((swift_name("setPosition(x:y:angleStd:numClusters:radius:)")));
- (void)setRealWorldOrientationAngle:(double)angle __attribute__((swift_name("setRealWorldOrientation(angle:)")));
- (void)start __attribute__((swift_name("start()")));
- (void)tickCurrentTime:(int64_t)currentTime __attribute__((swift_name("tick(currentTime:)")));
- (void)updateWayfindingPathPath:(NSArray<VSPKKotlinPair<VSPKFloat *, VSPKFloat *> *> *)path __attribute__((swift_name("updateWayfindingPath(path:)")));
@property (readonly) id<VSPKtt2EngineTt2EngineDelegate> output __attribute__((swift_name("output")));
@end;

__attribute__((swift_name("OutputSignal")))
@protocol VSPKOutputSignal
@required
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DirectionBundle")))
@interface VSPKDirectionBundle : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithDirection:(double)direction timestamp:(int64_t)timestamp __attribute__((swift_name("init(direction:timestamp:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKDirectionBundle *)doCopyDirection:(double)direction timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(direction:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double direction __attribute__((swift_name("direction")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLUpdate")))
@interface VSPKMLUpdate : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithData:(VSPKPersonalMLData * _Nullable)data job:(id<VSPKMLJob> _Nullable)job timestamp:(int64_t)timestamp __attribute__((swift_name("init(data:job:timestamp:)"))) __attribute__((objc_designated_initializer));
- (VSPKPersonalMLData * _Nullable)component1 __attribute__((swift_name("component1()")));
- (id<VSPKMLJob> _Nullable)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (VSPKMLUpdate *)doCopyData:(VSPKPersonalMLData * _Nullable)data job:(id<VSPKMLJob> _Nullable)job timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(data:job:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPersonalMLData * _Nullable data __attribute__((swift_name("data")));
@property (readonly) id<VSPKMLJob> _Nullable job __attribute__((swift_name("job")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NavBundle")))
@interface VSPKNavBundle : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithPosition:(VSPKPointF * _Nullable)position timestamp:(int64_t)timestamp std:(VSPKFloat * _Nullable)std __attribute__((swift_name("init(position:timestamp:std:)"))) __attribute__((objc_designated_initializer));
- (VSPKPointF * _Nullable)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKFloat * _Nullable)component3 __attribute__((swift_name("component3()")));
- (VSPKNavBundle *)doCopyPosition:(VSPKPointF * _Nullable)position timestamp:(int64_t)timestamp std:(VSPKFloat * _Nullable)std __attribute__((swift_name("doCopy(position:timestamp:std:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPointF * _Nullable position __attribute__((swift_name("position")));
@property (readonly) VSPKFloat * _Nullable std __attribute__((swift_name("std")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OutputSignalSignalType")))
@interface VSPKOutputSignalSignalType : VSPKKotlinEnum<VSPKOutputSignalSignalType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKOutputSignalSignalType *positionEvent __attribute__((swift_name("positionEvent")));
@property (class, readonly) VSPKOutputSignalSignalType *navBundle __attribute__((swift_name("navBundle")));
@property (class, readonly) VSPKOutputSignalSignalType *stepEvent __attribute__((swift_name("stepEvent")));
@property (class, readonly) VSPKOutputSignalSignalType *notification __attribute__((swift_name("notification")));
@property (class, readonly) VSPKOutputSignalSignalType *directionBundle __attribute__((swift_name("directionBundle")));
@property (class, readonly) VSPKOutputSignalSignalType *realWorldOffsetUpdate __attribute__((swift_name("realWorldOffsetUpdate")));
@property (class, readonly) VSPKOutputSignalSignalType *mlUpdate __attribute__((swift_name("mlUpdate")));
+ (VSPKKotlinArray<VSPKOutputSignalSignalType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PositionEvent")))
@interface VSPKPositionEvent : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithPosEventType:(VSPKPositionEventPosEventType *)posEventType timestamp:(int64_t)timestamp position:(VSPKPointF * _Nullable)position __attribute__((swift_name("init(posEventType:timestamp:position:)"))) __attribute__((objc_designated_initializer));
@property (readonly) VSPKPositionEventPosEventType *posEventType __attribute__((swift_name("posEventType")));
@property (readonly) VSPKPointF * _Nullable position __attribute__((swift_name("position")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PositionEvent.PosEventType")))
@interface VSPKPositionEventPosEventType : VSPKKotlinEnum<VSPKPositionEventPosEventType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKPositionEventPosEventType *position __attribute__((swift_name("position")));
@property (class, readonly) VSPKPositionEventPosEventType *sync __attribute__((swift_name("sync")));
@property (class, readonly) VSPKPositionEventPosEventType *trolleySkip __attribute__((swift_name("trolleySkip")));
@property (class, readonly) VSPKPositionEventPosEventType *clusterPrio __attribute__((swift_name("clusterPrio")));
@property (class, readonly) VSPKPositionEventPosEventType *rescue __attribute__((swift_name("rescue")));
+ (VSPKKotlinArray<VSPKPositionEventPosEventType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PrecisionCircle")))
@interface VSPKPrecisionCircle : VSPKBase
- (instancetype)initWithCenter:(VSPKPointF *)center radius:(double)radius __attribute__((swift_name("init(center:radius:)"))) __attribute__((objc_designated_initializer));
- (VSPKPointF *)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (VSPKPrecisionCircle *)doCopyCenter:(VSPKPointF *)center radius:(double)radius __attribute__((swift_name("doCopy(center:radius:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPointF *center __attribute__((swift_name("center")));
@property (readonly) double radius __attribute__((swift_name("radius")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RealWorldOffsetUpdate")))
@interface VSPKRealWorldOffsetUpdate : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithDirection:(double)direction timestamp:(int64_t)timestamp __attribute__((swift_name("init(direction:timestamp:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKRealWorldOffsetUpdate *)doCopyDirection:(double)direction timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(direction:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double direction __attribute__((swift_name("direction")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventSignal")))
@interface VSPKStepEventSignal : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithTimestamp:(int64_t)timestamp stepEventData:(VSPKStepEventData *)stepEventData __attribute__((swift_name("init(timestamp:stepEventData:)"))) __attribute__((objc_designated_initializer));
@property (readonly) VSPKStepEventData *stepEventData __attribute__((swift_name("stepEventData")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((swift_name("Notification")))
@interface VSPKNotification : VSPKBase <VSPKOutputSignal>
- (instancetype)initWithNotificationType:(VSPKNotificationType *)notificationType notificationSeverity:(VSPKNotificationSeverity *)notificationSeverity timestamp:(int64_t)timestamp message:(NSString *)message __attribute__((swift_name("init(notificationType:notificationSeverity:timestamp:message:)"))) __attribute__((objc_designated_initializer));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) VSPKNotificationSeverity *notificationSeverity __attribute__((swift_name("notificationSeverity")));
@property (readonly) VSPKNotificationType *notificationType __attribute__((swift_name("notificationType")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKOutputSignalSignalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloorChangeNotification")))
@interface VSPKFloorChangeNotification : VSPKNotification
- (instancetype)initWithFloorDifferential:(int32_t)floorDifferential timestamp:(int64_t)timestamp message:(NSString *)message __attribute__((swift_name("init(floorDifferential:timestamp:message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNotificationType:(VSPKNotificationType *)notificationType notificationSeverity:(VSPKNotificationSeverity *)notificationSeverity timestamp:(int64_t)timestamp message:(NSString *)message __attribute__((swift_name("init(notificationType:notificationSeverity:timestamp:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) int32_t floorDifferential __attribute__((swift_name("floorDifferential")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLCalibratedNotification")))
@interface VSPKMLCalibratedNotification : VSPKNotification
- (instancetype)initWithData:(VSPKUserAdjustments *)data mlAlgorithm:(VSPKIQPSPersonalMLAlgorithm *)mlAlgorithm __attribute__((swift_name("init(data:mlAlgorithm:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNotificationType:(VSPKNotificationType *)notificationType notificationSeverity:(VSPKNotificationSeverity *)notificationSeverity timestamp:(int64_t)timestamp message:(NSString *)message __attribute__((swift_name("init(notificationType:notificationSeverity:timestamp:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) VSPKUserAdjustments *data __attribute__((swift_name("data")));
@property (readonly) VSPKIQPSPersonalMLAlgorithm *mlAlgorithm __attribute__((swift_name("mlAlgorithm")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationSeverity")))
@interface VSPKNotificationSeverity : VSPKKotlinEnum<VSPKNotificationSeverity *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKNotificationSeverity *info __attribute__((swift_name("info")));
@property (class, readonly) VSPKNotificationSeverity *warning __attribute__((swift_name("warning")));
@property (class, readonly) VSPKNotificationSeverity *fatal __attribute__((swift_name("fatal")));
+ (VSPKKotlinArray<VSPKNotificationSeverity *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationType")))
@interface VSPKNotificationType : VSPKKotlinEnum<VSPKNotificationType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKNotificationType *other __attribute__((swift_name("other")));
@property (class, readonly) VSPKNotificationType *orientationRegular __attribute__((swift_name("orientationRegular")));
@property (class, readonly) VSPKNotificationType *orientationSwingSym __attribute__((swift_name("orientationSwingSym")));
@property (class, readonly) VSPKNotificationType *orientationSwingAntiSym __attribute__((swift_name("orientationSwingAntiSym")));
@property (class, readonly) VSPKNotificationType *orientationTrolley __attribute__((swift_name("orientationTrolley")));
@property (class, readonly) VSPKNotificationType *orientationPocket __attribute__((swift_name("orientationPocket")));
@property (class, readonly) VSPKNotificationType *orientationJacketPocket __attribute__((swift_name("orientationJacketPocket")));
@property (class, readonly) VSPKNotificationType *sensorsInitiated __attribute__((swift_name("sensorsInitiated")));
@property (class, readonly) VSPKNotificationType *badBehaviour __attribute__((swift_name("badBehaviour")));
@property (class, readonly) VSPKNotificationType *trolleyMovement __attribute__((swift_name("trolleyMovement")));
@property (class, readonly) VSPKNotificationType *rescue __attribute__((swift_name("rescue")));
@property (class, readonly) VSPKNotificationType *sync __attribute__((swift_name("sync")));
@property (class, readonly) VSPKNotificationType *floorChange __attribute__((swift_name("floorChange")));
@property (class, readonly) VSPKNotificationType *mlCalibrated __attribute__((swift_name("mlCalibrated")));
+ (VSPKKotlinArray<VSPKNotificationType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SyncNotification")))
@interface VSPKSyncNotification : VSPKNotification
- (instancetype)initWithSyncData:(id<VSPKIQPSSyncData>)syncData timestamp:(int64_t)timestamp __attribute__((swift_name("init(syncData:timestamp:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNotificationType:(VSPKNotificationType *)notificationType notificationSeverity:(VSPKNotificationSeverity *)notificationSeverity timestamp:(int64_t)timestamp message:(NSString *)message __attribute__((swift_name("init(notificationType:notificationSeverity:timestamp:message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) id<VSPKIQPSSyncData> syncData __attribute__((swift_name("syncData")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerHealthData")))
@interface VSPKQLayerHealthData : VSPKBase
- (instancetype)initWithMultipleClusters:(BOOL)multipleClusters truePrecisionCircle:(VSPKPrecisionCircle *)truePrecisionCircle std:(double)std __attribute__((swift_name("init(multipleClusters:truePrecisionCircle:std:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("In practice not used, should be replaced.")));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (VSPKPrecisionCircle *)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKQLayerHealthData *)doCopyMultipleClusters:(BOOL)multipleClusters truePrecisionCircle:(VSPKPrecisionCircle *)truePrecisionCircle std:(double)std __attribute__((swift_name("doCopy(multipleClusters:truePrecisionCircle:std:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL multipleClusters __attribute__((swift_name("multipleClusters")));
@property (readonly) double std __attribute__((swift_name("std")));
@property (readonly) VSPKPrecisionCircle *truePrecisionCircle __attribute__((swift_name("truePrecisionCircle")));
@end;

__attribute__((swift_name("IStepDetectorManager")))
@protocol VSPKIStepDetectorManager
@required
- (void)changeStateStateType:(VSPKIQPSDeviceOrientation *)stateType timestamp:(int64_t)timestamp __attribute__((swift_name("changeState(stateType:timestamp:)")));
@property (readonly) BOOL forcePocket __attribute__((swift_name("forcePocket")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LegacyStepDetectorFactory")))
@interface VSPKLegacyStepDetectorFactory : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)legacyStepDetectorFactory __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKLegacyStepDetectorFactory *shared __attribute__((swift_name("shared")));
- (NSMutableArray<id<VSPKStepDetector>> *)getStepDetectorListRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("getStepDetectorList(rawSensorManager:stepListener:externalDataManager:)")));
@end;

__attribute__((swift_name("SensorInterpreterStepListener")))
@protocol VSPKSensorInterpreterStepListener <VSPKStepListener>
@required
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LegacyStepDetectorManager")))
@interface VSPKLegacyStepDetectorManager : VSPKBase <VSPKSensorInterpreterStepListener, VSPKIStepDetectorManager>
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager stepDetectorCreatingFunction:(NSMutableArray<id<VSPKStepDetector>> *(^ _Nullable)(id<VSPKIQPSRawSensorManager>, id<VSPKSensorInterpreterStepListener>))stepDetectorCreatingFunction stateEvaluatorFunction:(VSPKStepStateEvaluator *(^ _Nullable)(id<VSPKIQPSRawSensorManager>, VSPKLegacyStepDetectorManager *))stateEvaluatorFunction __attribute__((swift_name("init(rawSensorManager:stepListener:externalDataManager:stepDetectorCreatingFunction:stateEvaluatorFunction:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKLegacyStepDetectorManagerCompanion *companion __attribute__((swift_name("companion")));
- (void)changeStateStateType:(VSPKIQPSDeviceOrientation *)stateType timestamp:(int64_t)timestamp __attribute__((swift_name("changeState(stateType:timestamp:)")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
- (void)stop __attribute__((swift_name("stop()")));
@property BOOL forcePocket __attribute__((swift_name("forcePocket")));
@property (readonly) id<VSPKSensorInterpreterStepListener> stepListener __attribute__((swift_name("stepListener")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LegacyStepDetectorManager.Companion")))
@interface VSPKLegacyStepDetectorManagerCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKLegacyStepDetectorManagerCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ModularStepDetectorFactory")))
@interface VSPKModularStepDetectorFactory : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)modularStepDetectorFactory __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKModularStepDetectorFactory *shared __attribute__((swift_name("shared")));
- (VSPKSpackListeningMLStepDetector *)createIOSModularStepDetectorOrientation:(VSPKIQPSDeviceOrientation *)orientation listener:(id<VSPKSensorInterpreterStepListener>)listener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("createIOSModularStepDetector(orientation:listener:externalDataManager:)")));
- (VSPKKotlinPair<NSMutableArray<id<VSPKStepDetector>> *, NSMutableArray<VSPKSpackExtractor *> *> *)loadStepDetectorsRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager parameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum deviceIsAndroid:(BOOL)deviceIsAndroid listener:(id<VSPKSensorInterpreterStepListener>)listener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("loadStepDetectors(rawSensorManager:parameterPackageEnum:deviceIsAndroid:listener:externalDataManager:)")));
@end;

__attribute__((swift_name("Observer")))
@protocol VSPKObserver
@required
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@end;

__attribute__((swift_name("SensorListener")))
@interface VSPKSensorListener : VSPKBase <VSPKObserver>
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList priority:(BOOL)priority __attribute__((swift_name("init(sensorList:priority:)"))) __attribute__((objc_designated_initializer));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@property (readonly) BOOL priority __attribute__((swift_name("priority")));
@end;

__attribute__((swift_name("StepEventFilter")))
@protocol VSPKStepEventFilter
@required
- (void)filterStepEventStep:(VSPKStepData *)step __attribute__((swift_name("filterStepEvent(step:)")));
- (void)handleLeniencyStep:(VSPKStepData *)step callback:(void (^)(VSPKStepEventFilterSetLeniency *))callback __attribute__((swift_name("handleLeniency(step:callback:)")));
@end;

__attribute__((swift_name("StateBasedStepFilter")))
@interface VSPKStateBasedStepFilter : VSPKBase <VSPKStepEventFilter>
- (instancetype)initWithCurrentState:(id<VSPKStepListener>)currentState __attribute__((swift_name("init(currentState:)"))) __attribute__((objc_designated_initializer));
- (void)updateStateInputState:(VSPKStepState *)inputState __attribute__((swift_name("updateState(inputState:)")));
@property id<VSPKStepListener> currentState __attribute__((swift_name("currentState")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepDetectorManager")))
@interface VSPKStepDetectorManager : VSPKBase <VSPKSensorInterpreterStepListener, VSPKIStepDetectorManager>
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager onOutputSignal:(void (^)(id<VSPKOutputSignal>))onOutputSignal __attribute__((swift_name("init(rawSensorManager:stepListener:externalDataManager:onOutputSignal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKStepDetectorManagerCompanion *companion __attribute__((swift_name("companion")));
- (void)changeStateStateType:(VSPKIQPSDeviceOrientation *)_stateType timestamp:(int64_t)timestamp __attribute__((swift_name("changeState(stateType:timestamp:)")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)_step __attribute__((swift_name("stepEvent(step:)")));
- (void)stop __attribute__((swift_name("stop()")));
@property BOOL forcePocket __attribute__((swift_name("forcePocket")));
@property (readonly) id<VSPKSensorInterpreterStepListener> stepListener __attribute__((swift_name("stepListener")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepDetectorManager.Companion")))
@interface VSPKStepDetectorManagerCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKStepDetectorManagerCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventFilterSetLeniency")))
@interface VSPKStepEventFilterSetLeniency : VSPKKotlinEnum<VSPKStepEventFilterSetLeniency *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKStepEventFilterSetLeniency *setLenient __attribute__((swift_name("setLenient")));
@property (class, readonly) VSPKStepEventFilterSetLeniency *setStrict __attribute__((swift_name("setStrict")));
+ (VSPKKotlinArray<VSPKStepEventFilterSetLeniency *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepFillEvaluator")))
@interface VSPKStepFillEvaluator : VSPKStateBasedStepFilter
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener regularState:(VSPKRegularState *)regularState isPS20:(BOOL)isPS20 __attribute__((swift_name("init(stepListener:regularState:isPS20:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCurrentState:(id<VSPKStepListener>)currentState __attribute__((swift_name("init(currentState:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKStepFillEvaluatorCompanion *companion __attribute__((swift_name("companion")));
- (void)filterStepEventStep:(VSPKStepData *)step __attribute__((swift_name("filterStepEvent(step:)")));
- (void)handleLeniencyStep:(VSPKStepData *)step callback:(void (^)(VSPKStepEventFilterSetLeniency *))callback __attribute__((swift_name("handleLeniency(step:callback:)")));
- (BOOL)validTimeStampStep:(VSPKStepData *)step __attribute__((swift_name("validTimeStamp(step:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepFillEvaluator.Companion")))
@interface VSPKStepFillEvaluatorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKStepFillEvaluatorCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingFilter")))
@interface VSPKSwingFilter : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKStepData * _Nullable)filterSwingStepStep:(VSPKStepData *)step __attribute__((swift_name("filterSwingStep(step:)")));
@end;

__attribute__((swift_name("StepData")))
@interface VSPKStepData : VSPKBase
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type timestamp:(int64_t)timestamp success:(BOOL)success stepDetector:(id<VSPKStepDetector> _Nullable)stepDetector duration:(int64_t)duration direction:(VSPKDouble * _Nullable)direction directionCertainty:(VSPKDouble * _Nullable)directionCertainty relativeDirection:(VSPKDouble * _Nullable)relativeDirection speed:(VSPKFloat * _Nullable)speed stepCertainty:(double)stepCertainty quaternion:(VSPKKotlinFloatArray *)quaternion __attribute__((swift_name("init(type:timestamp:success:stepDetector:duration:direction:directionCertainty:relativeDirection:speed:stepCertainty:quaternion:)"))) __attribute__((objc_designated_initializer));
- (void)reEvaluate __attribute__((swift_name("reEvaluate()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property VSPKDouble * _Nullable direction __attribute__((swift_name("direction")));
@property VSPKDouble * _Nullable directionCertainty __attribute__((swift_name("directionCertainty")));
@property int64_t duration __attribute__((swift_name("duration")));
@property VSPKKotlinFloatArray *quaternion __attribute__((swift_name("quaternion")));
@property (readonly) BOOL reEvaluateable __attribute__((swift_name("reEvaluateable")));
@property VSPKDouble * _Nullable relativeDirection __attribute__((swift_name("relativeDirection")));
@property VSPKFloat * _Nullable speed __attribute__((swift_name("speed")));
@property double stepCertainty __attribute__((swift_name("stepCertainty")));
@property id<VSPKStepDetector> _Nullable stepDetector __attribute__((swift_name("stepDetector")));
@property NSString *stringTag __attribute__((swift_name("stringTag")));
@property BOOL success __attribute__((swift_name("success")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKIQPSDeviceOrientation *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpackStepData")))
@interface VSPKSpackStepData : VSPKStepData
- (instancetype)initWithSpack:(VSPKSpack *)spack confidence:(double)confidence timestamp:(int64_t)timestamp success:(BOOL)success stepDetector:(id<VSPKStepDetector>)stepDetector duration:(int64_t)duration type:(VSPKIQPSDeviceOrientation *)type __attribute__((swift_name("init(spack:confidence:timestamp:success:stepDetector:duration:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type timestamp:(int64_t)timestamp success:(BOOL)success stepDetector:(id<VSPKStepDetector> _Nullable)stepDetector duration:(int64_t)duration direction:(VSPKDouble * _Nullable)direction directionCertainty:(VSPKDouble * _Nullable)directionCertainty relativeDirection:(VSPKDouble * _Nullable)relativeDirection speed:(VSPKFloat * _Nullable)speed stepCertainty:(double)stepCertainty quaternion:(VSPKKotlinFloatArray *)quaternion __attribute__((swift_name("init(type:timestamp:success:stepDetector:duration:direction:directionCertainty:relativeDirection:speed:stepCertainty:quaternion:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKSpack *spack __attribute__((swift_name("spack")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventData")))
@interface VSPKStepEventData : VSPKBase
- (instancetype)initWithStepData:(VSPKStepData *)stepData __attribute__((swift_name("init(stepData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type timestamp:(int64_t)timestamp success:(BOOL)success duration:(int64_t)duration direction:(VSPKDouble * _Nullable)direction directionCertainty:(VSPKDouble * _Nullable)directionCertainty relativeDirection:(VSPKDouble * _Nullable)relativeDirection speed:(VSPKFloat * _Nullable)speed stepCertainty:(double)stepCertainty quaternion:(VSPKKotlinFloatArray *)quaternion __attribute__((swift_name("init(type:timestamp:success:duration:direction:directionCertainty:relativeDirection:speed:stepCertainty:quaternion:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKStepEventDataCompanion *companion __attribute__((swift_name("companion")));
- (VSPKIQPSDeviceOrientation *)component1 __attribute__((swift_name("component1()")));
- (VSPKKotlinFloatArray *)component10 __attribute__((swift_name("component10()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (BOOL)component3 __attribute__((swift_name("component3()")));
- (int64_t)component4 __attribute__((swift_name("component4()")));
- (VSPKDouble * _Nullable)component5 __attribute__((swift_name("component5()")));
- (VSPKDouble * _Nullable)component6 __attribute__((swift_name("component6()")));
- (VSPKDouble * _Nullable)component7 __attribute__((swift_name("component7()")));
- (VSPKFloat * _Nullable)component8 __attribute__((swift_name("component8()")));
- (double)component9 __attribute__((swift_name("component9()")));
- (VSPKStepEventData *)doCopyType:(VSPKIQPSDeviceOrientation *)type timestamp:(int64_t)timestamp success:(BOOL)success duration:(int64_t)duration direction:(VSPKDouble * _Nullable)direction directionCertainty:(VSPKDouble * _Nullable)directionCertainty relativeDirection:(VSPKDouble * _Nullable)relativeDirection speed:(VSPKFloat * _Nullable)speed stepCertainty:(double)stepCertainty quaternion:(VSPKKotlinFloatArray *)quaternion __attribute__((swift_name("doCopy(type:timestamp:success:duration:direction:directionCertainty:relativeDirection:speed:stepCertainty:quaternion:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property VSPKDouble * _Nullable direction __attribute__((swift_name("direction")));
@property VSPKDouble * _Nullable directionCertainty __attribute__((swift_name("directionCertainty")));
@property int64_t duration __attribute__((swift_name("duration")));
@property VSPKKotlinFloatArray *quaternion __attribute__((swift_name("quaternion")));
@property VSPKDouble * _Nullable relativeDirection __attribute__((swift_name("relativeDirection")));
@property VSPKFloat * _Nullable speed __attribute__((swift_name("speed")));
@property double stepCertainty __attribute__((swift_name("stepCertainty")));
@property BOOL success __attribute__((swift_name("success")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKIQPSDeviceOrientation *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventData.Companion")))
@interface VSPKStepEventDataCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKStepEventDataCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ToyStepData")))
@interface VSPKToyStepData : VSPKStepData
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type timestamp:(int64_t)timestamp success:(BOOL)success stepDetector:(VSPKSensorListeningStepDetector * _Nullable)stepDetector duration:(int64_t)duration direction:(VSPKDouble * _Nullable)direction directionCertainty:(VSPKDouble * _Nullable)directionCertainty relativeDirection:(VSPKDouble * _Nullable)relativeDirection length:(VSPKFloat * _Nullable)length stepCertainty:(double)stepCertainty __attribute__((swift_name("init(type:timestamp:success:stepDetector:duration:direction:directionCertainty:relativeDirection:length:stepCertainty:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type timestamp:(int64_t)timestamp success:(BOOL)success stepDetector:(id<VSPKStepDetector> _Nullable)stepDetector duration:(int64_t)duration direction:(VSPKDouble * _Nullable)direction directionCertainty:(VSPKDouble * _Nullable)directionCertainty relativeDirection:(VSPKDouble * _Nullable)relativeDirection speed:(VSPKFloat * _Nullable)speed stepCertainty:(double)stepCertainty quaternion:(VSPKKotlinFloatArray *)quaternion __attribute__((swift_name("init(type:timestamp:success:stepDetector:duration:direction:directionCertainty:relativeDirection:speed:stepCertainty:quaternion:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("StepDetector")))
@protocol VSPKStepDetector
@required
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onExit __attribute__((swift_name("onExit()")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
- (BOOL)weakEvaluateStep:(VSPKStepData *)step __attribute__((swift_name("weakEvaluate(step:)")));
@property (readonly) VSPKIQPSDeviceOrientation *type __attribute__((swift_name("type")));
@end;

__attribute__((swift_name("SensorListeningStepDetector")))
@interface VSPKSensorListeningStepDetector : VSPKSensorListener <VSPKStepDetector>
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type sensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener> _Nullable)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(type:sensorList:stepListener:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList priority:(BOOL)priority __attribute__((swift_name("init(sensorList:priority:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onExit __attribute__((swift_name("onExit()")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)onSensorInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorInitiated(currentTime:)")));
- (void)onStepDetectedStep:(VSPKStepData *)step __attribute__((swift_name("onStepDetected(step:)")));
- (void)stop __attribute__((swift_name("stop()")));
@property (readonly) VSPKIQPSDeviceOrientation *type __attribute__((swift_name("type")));
@end;

__attribute__((swift_name("MLStepDetectorBase")))
@interface VSPKMLStepDetectorBase : VSPKSensorListeningStepDetector
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type sensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener> _Nullable)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(type:sensorList:stepListener:externalDataManager:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLStepDetectorBaseCompanion *companion __attribute__((swift_name("companion")));
- (void)compensateFilterDelay __attribute__((swift_name("compensateFilterDelay()")));
- (void)evalFeaturesSpack:(VSPKSpack *)spack __attribute__((swift_name("evalFeatures(spack:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (void)initialiseOtherFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseOtherFilters(sampleFrequency:)")));
- (BOOL)isDurationValidDuration:(int64_t)duration __attribute__((swift_name("isDurationValid(duration:)")));
- (void)lenientEvaluateSpack:(VSPKSpack *)spack __attribute__((swift_name("lenientEvaluate(spack:)")));
- (VSPKKotlinArray<VSPKFloat *> *)lenientFeaturiseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("lenientFeaturiseSpack(spack:fs:)")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
- (BOOL)weakEvaluateStep:(VSPKStepData *)step __attribute__((swift_name("weakEvaluate(step:)")));
@property (readonly) VSPKMLModel *classifier __attribute__((swift_name("classifier")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLStepDetectorBase.Companion")))
@interface VSPKMLStepDetectorBaseCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLStepDetectorBaseCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySVMStepDetector")))
@interface VSPKTrolleySVMStepDetector : VSPKSensorListeningStepDetector
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener svm:(VSPKSVM *)svm externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:svm:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type sensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener> _Nullable)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(type:sensorList:stepListener:externalDataManager:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKTrolleySVMStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
- (BOOL)weakEvaluateStep:(VSPKStepData *)step __attribute__((swift_name("weakEvaluate(step:)")));
@property (readonly) VSPKSVM *svm __attribute__((swift_name("svm")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySVMStepDetector.Companion")))
@interface VSPKTrolleySVMStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTrolleySVMStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleyStepDetector")))
@interface VSPKTrolleyStepDetector : VSPKSensorListeningStepDetector
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener movementClassifier:(VSPKMLModel *)movementClassifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:movementClassifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type sensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener> _Nullable)stepListener externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(type:sensorList:stepListener:externalDataManager:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKTrolleyStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
- (BOOL)weakEvaluateStep:(VSPKStepData *)step __attribute__((swift_name("weakEvaluate(step:)")));
@property (readonly) VSPKMLModel *movementClassifier __attribute__((swift_name("movementClassifier")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleyStepDetector.Companion")))
@interface VSPKTrolleyStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTrolleyStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartStep")))
@interface VSPKStartStep : VSPKBase
- (instancetype)initWithLen:(int32_t)len __attribute__((swift_name("init(len:)"))) __attribute__((objc_designated_initializer));
- (BOOL)addStepElement:(double)element __attribute__((swift_name("addStep(element:)")));
- (double)getFrequency __attribute__((swift_name("getFrequency()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (int32_t)size __attribute__((swift_name("size()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<VSPKDouble *> *x __attribute__((swift_name("x")));
@property NSMutableArray<VSPKDouble *> *y __attribute__((swift_name("y")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidMLJacketPocketStepDetector")))
@interface VSPKAndroidMLJacketPocketStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKAndroidMLJacketPocketStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (void)compensateFilterDelay __attribute__((swift_name("compensateFilterDelay()")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (void)initialiseOtherFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseOtherFilters(sampleFrequency:)")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidMLJacketPocketStepDetector.Companion")))
@interface VSPKAndroidMLJacketPocketStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidMLJacketPocketStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidMLPocketStepDetector")))
@interface VSPKAndroidMLPocketStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKAndroidMLPocketStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (void)compensateFilterDelay __attribute__((swift_name("compensateFilterDelay()")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (void)initialiseOtherFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseOtherFilters(sampleFrequency:)")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKNoPCAEllipseEvaluator *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidMLPocketStepDetector.Companion")))
@interface VSPKAndroidMLPocketStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidMLPocketStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidMLRegularStepDetector")))
@interface VSPKAndroidMLRegularStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKAndroidMLRegularStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (void)compensateFilterDelay __attribute__((swift_name("compensateFilterDelay()")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (void)initialiseOtherFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseOtherFilters(sampleFrequency:)")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKEllipseEvaluator *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKPCATransformer *reEvaluationPCA __attribute__((swift_name("reEvaluationPCA")));
@property (readonly) VSPKStandardScaler *reEvaluationStandardScaler __attribute__((swift_name("reEvaluationStandardScaler")));
@property (readonly) VSPKEllipseEvaluator *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidMLRegularStepDetector.Companion")))
@interface VSPKAndroidMLRegularStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidMLRegularStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLJacketPocketStepDetector")))
@interface VSPKMLJacketPocketStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLJacketPocketStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLJacketPocketStepDetector.Companion")))
@interface VSPKMLJacketPocketStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLJacketPocketStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLPocketStepDetector")))
@interface VSPKMLPocketStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLPocketStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLPocketStepDetector.Companion")))
@interface VSPKMLPocketStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLPocketStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLRegularStepDetector")))
@interface VSPKMLRegularStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLRegularStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKEllipseEvaluator *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKPCATransformer *reEvaluationPCA __attribute__((swift_name("reEvaluationPCA")));
@property (readonly) VSPKStandardScaler *reEvaluationStandardScaler __attribute__((swift_name("reEvaluationStandardScaler")));
@property (readonly) VSPKEllipseEvaluator *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLRegularStepDetector.Companion")))
@interface VSPKMLRegularStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLRegularStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLSwingAntiSymStepDetector")))
@interface VSPKMLSwingAntiSymStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLSwingAntiSymStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (BOOL)isDurationValidDuration:(int64_t)duration __attribute__((swift_name("isDurationValid(duration:)")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLSwingAntiSymStepDetector.Companion")))
@interface VSPKMLSwingAntiSymStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLSwingAntiSymStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLSwingStepDetector")))
@interface VSPKMLSwingStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLSwingStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (void)compensateFilterDelay __attribute__((swift_name("compensateFilterDelay()")));
- (void)evalFeaturesSpack:(VSPKSpack *)spack __attribute__((swift_name("evalFeatures(spack:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (void)initialiseOtherFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseOtherFilters(sampleFrequency:)")));
- (void)lenientEvaluateSpack:(VSPKSpack *)spack __attribute__((swift_name("lenientEvaluate(spack:)")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKPCATransformer *reEvaluationPCA __attribute__((swift_name("reEvaluationPCA")));
@property (readonly) VSPKStandardScaler *reEvaluationStandardScaler __attribute__((swift_name("reEvaluationStandardScaler")));
@property (readonly) VSPKSwingPCAEvaluator *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLSwingStepDetector.Companion")))
@interface VSPKMLSwingStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLSwingStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLSwingSymStepDetector")))
@interface VSPKMLSwingSymStepDetector : VSPKMLStepDetectorBase
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList stepListener:(id<VSPKSensorInterpreterStepListener>)stepListener classifier:(VSPKMLModel *)classifier externalDataManager:(VSPKExternalDataManager *)externalDataManager orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("init(sensorList:stepListener:classifier:externalDataManager:orientation:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKMLSwingSymStepDetectorCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack fs:(double)fs __attribute__((swift_name("featuriseSpack(spack:fs:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseButterFiltersSampleFrequency:(double)sampleFrequency __attribute__((swift_name("initialiseButterFilters(sampleFrequency:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
@property int32_t ghettoOffset __attribute__((swift_name("ghettoOffset")));
@property (readonly) VSPKMLModel *lenientEvaluator __attribute__((swift_name("lenientEvaluator")));
@property int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@property (readonly) VSPKMLModel *weakEvaluator __attribute__((swift_name("weakEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLSwingSymStepDetector.Companion")))
@interface VSPKMLSwingSymStepDetectorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLSwingSymStepDetectorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((swift_name("SpackExtractor")))
@interface VSPKSpackExtractor : VSPKSensorListener
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList spackListeners:(NSMutableArray<id<VSPKSpackListener>> *)spackListeners ghettoOffset:(int32_t)ghettoOffset lpCutoff:(VSPKDouble * _Nullable)lpCutoff priority:(BOOL)priority __attribute__((swift_name("init(sensorList:spackListeners:ghettoOffset:lpCutoff:priority:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList priority:(BOOL)priority __attribute__((swift_name("init(sensorList:priority:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addListenerListener:(id<VSPKSpackListener>)listener __attribute__((swift_name("addListener(listener:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (VSPKKotlinFloatArray *)filterOlivebergOlivebergVector:(VSPKKotlinFloatArray *)olivebergVector __attribute__((swift_name("filterOliveberg(olivebergVector:)")));
- (void)initialiseOffsets __attribute__((swift_name("initialiseOffsets()")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidSpackExtractor")))
@interface VSPKAndroidSpackExtractor : VSPKSpackExtractor
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList spackListeners:(NSMutableArray<id<VSPKSpackListener>> *)spackListeners ghettoOffset:(int32_t)ghettoOffset ngzOffset:(int32_t)ngzOffset lpCutoff:(VSPKDouble * _Nullable)lpCutoff priority:(BOOL)priority __attribute__((swift_name("init(sensorList:spackListeners:ghettoOffset:ngzOffset:lpCutoff:priority:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList spackListeners:(NSMutableArray<id<VSPKSpackListener>> *)spackListeners ghettoOffset:(int32_t)ghettoOffset lpCutoff:(VSPKDouble * _Nullable)lpCutoff priority:(BOOL)priority __attribute__((swift_name("init(sensorList:spackListeners:ghettoOffset:lpCutoff:priority:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)filterInputAcc:(VSPKKotlinFloatArray *)inputAcc inputGrav:(VSPKKotlinFloatArray *)inputGrav inputRot:(VSPKKotlinFloatArray *)inputRot __attribute__((swift_name("filter(inputAcc:inputGrav:inputRot:)")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
@property (readonly) int32_t ngzOffset __attribute__((swift_name("ngzOffset")));
@end;

__attribute__((swift_name("SpackFeaturisationModule")))
@protocol VSPKSpackFeaturisationModule
@required
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("featuriseSpack(spack:)")));
@end;

__attribute__((swift_name("SpackListener")))
@protocol VSPKSpackListener
@required
- (void)onNewSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("onNewSpack(spack:)")));
- (void)onSensorsInitiatedTimestamp:(int64_t)timestamp __attribute__((swift_name("onSensorsInitiated(timestamp:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpackListeningMLStepDetector")))
@interface VSPKSpackListeningMLStepDetector : VSPKBase <VSPKStepDetector, VSPKSpackListener>
- (instancetype)initWithType:(VSPKIQPSDeviceOrientation *)type delegate:(id<VSPKSensorInterpreterStepListener>)delegate evaluator:(id<VSPKSpackEvaluator>)evaluator lenientEvaluator:(id<VSPKSpackEvaluator> _Nullable)lenientEvaluator weakEvaluator:(id<VSPKSpackEvaluator> _Nullable)weakEvaluator __attribute__((swift_name("init(type:delegate:evaluator:lenientEvaluator:weakEvaluator:)"))) __attribute__((objc_designated_initializer));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onExit __attribute__((swift_name("onExit()")));
- (void)onNewSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("onNewSpack(spack:)")));
- (void)onSensorsInitiatedTimestamp:(int64_t)timestamp __attribute__((swift_name("onSensorsInitiated(timestamp:)")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
- (BOOL)weakEvaluateStep:(VSPKStepData *)step __attribute__((swift_name("weakEvaluate(step:)")));
@property (readonly) VSPKIQPSDeviceOrientation *type __attribute__((swift_name("type")));
@end;

__attribute__((swift_name("SpackEvaluator")))
@protocol VSPKSpackEvaluator
@required
- (void)dispose __attribute__((swift_name("dispose()")));
- (BOOL)evaluateSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("evaluateSpack(spack:)")));
- (VSPKFloat * _Nullable)predictProbaSpack:(VSPKSpack *)spack __attribute__((swift_name("predictProba(spack:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLModelSpackEvaluator")))
@interface VSPKMLModelSpackEvaluator : VSPKBase <VSPKSpackEvaluator>
- (instancetype)initWithClassifier:(VSPKMLModel *)classifier featuriser:(VSPKKotlinArray<VSPKFloat *> *(^)(VSPKSpack *))featuriser durationLimits:(VSPKKotlinPair<VSPKLong *, VSPKLong *> * _Nullable)durationLimits __attribute__((swift_name("init(classifier:featuriser:durationLimits:)"))) __attribute__((objc_designated_initializer));
- (void)dispose __attribute__((swift_name("dispose()")));
- (BOOL)evaluateSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("evaluateSpack(spack:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BasicSpackEvaluator")))
@interface VSPKBasicSpackEvaluator : VSPKBase <VSPKSpackEvaluator>
- (instancetype)initWithNN:(VSPKNeuralNetwork *)NN featuriser:(id<VSPKSpackFeaturisationModule>)featuriser __attribute__((swift_name("init(NN:featuriser:)"))) __attribute__((objc_designated_initializer));
- (BOOL)evaluateSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("evaluateSpack(spack:)")));
- (VSPKFloat * _Nullable)predictProbaSpack:(VSPKSpack *)spack __attribute__((swift_name("predictProba(spack:)")));
@property (readonly) id<VSPKSpackFeaturisationModule> featuriser __attribute__((swift_name("featuriser")));
@property float previous __attribute__((swift_name("previous")));
@end;

__attribute__((swift_name("ModularSpackUser")))
@interface VSPKModularSpackUser : VSPKBase <VSPKSpackListener>
- (instancetype)initWithExtractor:(VSPKSpackExtractor *)extractor evaluator:(id<VSPKSpackEvaluator>)evaluator __attribute__((swift_name("init(extractor:evaluator:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<VSPKSpackEvaluator> evaluator __attribute__((swift_name("evaluator")));
@property (readonly) VSPKSpackExtractor *extractor __attribute__((swift_name("extractor")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidJacketPocketDirectionNNParameters")))
@interface VSPKAndroidJacketPocketDirectionNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidJacketPocketDirectionNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidJacketPocketDirectionNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("coeff_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("intercepts_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_0_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_10_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_11_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_12_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_13_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_14_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_15_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_16_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_17_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_18_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_19_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_1_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_20_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_21_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_22_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_23_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_24_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_25_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_26_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_27_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_28_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_29_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_2_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_30_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_31_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_32_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_33_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_34_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_35_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_36_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_37_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_38_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_39_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_3_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_40_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_41_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_42_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_43_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_44_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_45_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_46_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_47_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_48_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_49_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_4_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_50_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_51_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_52_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_53_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_54_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_55_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_56_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_57_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_58_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_59_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_5_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_60_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_61_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_62_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_63_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_64_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_65_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_66_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_67_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_68_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_69_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_6_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_70_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_71_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_72_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_73_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_74_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_75_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_76_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_77_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_78_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_79_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_7_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_8_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_9_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_coeff_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_0_intercepts_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_0_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_10_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_11_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_12_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_13_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_14_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_15_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_16_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_17_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_18_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_19_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_1_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_20_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_21_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_22_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_23_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_24_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_2_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_3_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_4_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_5_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_6_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_7_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_8_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_9_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_coeff_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_1_intercepts_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_0_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_0_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_10_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_10_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_11_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_11_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_12_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_12_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_13_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_13_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_14_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_14_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_15_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_15_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_16_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_16_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_17_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_17_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_18_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_18_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_19_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_19_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_1_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_1_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_20_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_20_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_21_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_21_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_22_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_22_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_23_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_23_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_24_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_24_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_2_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_2_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_3_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_3_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_4_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_4_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_5_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_5_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_6_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_6_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_7_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_7_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_8_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_8_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_9_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_9_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_2_coeff_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_coeff_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_intercepts_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("layer_2_intercepts_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("means_dir_android_jacket_pocket20211014_100451")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_android_jacket_pocket20211014_100451 __attribute__((swift_name("scales_dir_android_jacket_pocket20211014_100451")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPocketDirectionNNParameters")))
@interface VSPKAndroidPocketDirectionNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidPocketDirectionNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidPocketDirectionNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_android_pocket20211013_101738 __attribute__((swift_name("coeff_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_android_pocket20211013_101738 __attribute__((swift_name("intercepts_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_0_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_10_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_11_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_12_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_13_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_14_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_15_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_16_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_17_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_18_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_19_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_1_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_20_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_21_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_22_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_23_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_24_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_25_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_26_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_27_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_28_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_29_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_2_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_30_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_31_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_32_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_33_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_34_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_35_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_36_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_37_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_38_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_39_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_3_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_40_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_41_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_42_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_43_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_44_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_45_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_46_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_47_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_48_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_49_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_4_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_50_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_51_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_52_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_53_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_54_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_55_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_56_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_57_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_58_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_59_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_5_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_60_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_61_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_62_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_63_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_64_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_65_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_66_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_67_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_68_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_69_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_6_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_70_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_71_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_72_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_73_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_74_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_75_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_76_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_77_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_78_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_79_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_7_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_8_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_9_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_coeff_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_0_intercepts_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_0_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_10_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_11_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_12_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_13_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_14_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_15_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_16_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_17_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_18_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_19_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_1_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_20_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_21_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_22_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_23_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_24_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_25_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_26_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_27_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_28_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_29_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_2_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_30_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_31_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_32_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_33_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_34_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_35_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_36_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_37_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_38_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_39_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_3_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_4_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_5_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_6_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_7_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_8_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_9_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_coeff_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_android_pocket20211013_101738 __attribute__((swift_name("layer_1_intercepts_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_android_pocket20211013_101738 __attribute__((swift_name("means_dir_android_pocket20211013_101738")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_android_pocket20211013_101738 __attribute__((swift_name("scales_dir_android_pocket20211013_101738")));
@end;

__attribute__((swift_name("DirectionModel")))
@protocol VSPKDirectionModel
@required
- (VSPKStepData *)getDirectionStepData:(VSPKStepData *)stepData __attribute__((swift_name("getDirection(stepData:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AverageDirectionModel")))
@interface VSPKAverageDirectionModel : VSPKBase <VSPKDirectionModel>
- (instancetype)initWithAxisParameters:(VSPKAxisParameters *)axisParameters __attribute__((swift_name("init(axisParameters:)"))) __attribute__((objc_designated_initializer));
- (VSPKStepData *)getDirectionStepData:(VSPKStepData *)stepData __attribute__((swift_name("getDirection(stepData:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DirectionNeuralNetworkParameters")))
@interface VSPKDirectionNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)directionNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDirectionNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_regular20220818_142057 __attribute__((swift_name("coeff_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_regular20220818_142057 __attribute__((swift_name("intercepts_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_0_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_10_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_11_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_12_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_13_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_14_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_15_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_16_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_17_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_18_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_19_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_1_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_20_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_21_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_22_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_23_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_24_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_25_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_26_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_27_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_28_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_29_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_2_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_30_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_31_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_32_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_33_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_34_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_35_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_36_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_37_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_38_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_39_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_3_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_40_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_41_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_42_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_43_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_44_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_45_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_46_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_47_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_48_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_49_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_4_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_50_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_51_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_52_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_53_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_54_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_55_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_56_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_57_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_58_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_59_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_5_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_60_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_61_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_62_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_63_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_64_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_65_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_66_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_67_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_68_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_69_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_6_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_70_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_71_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_72_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_73_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_74_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_75_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_76_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_77_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_78_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_79_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_7_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_8_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_9_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_regular20220818_142057 __attribute__((swift_name("layer_0_coeff_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_regular20220818_142057 __attribute__((swift_name("layer_0_intercepts_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_0_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_10_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_11_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_12_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_13_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_14_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_15_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_16_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_17_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_18_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_19_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_1_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_20_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_21_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_22_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_23_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_24_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_25_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_26_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_27_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_28_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_29_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_2_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_30_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_31_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_32_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_33_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_34_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_35_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_36_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_37_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_38_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_39_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_3_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_4_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_5_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_6_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_7_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_8_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_9_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_regular20220818_142057 __attribute__((swift_name("layer_1_coeff_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_regular20220818_142057 __attribute__((swift_name("layer_1_intercepts_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_0_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_0_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_10_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_10_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_11_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_11_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_12_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_12_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_13_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_13_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_14_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_14_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_15_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_15_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_16_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_16_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_17_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_17_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_18_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_18_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_19_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_19_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_1_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_1_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_20_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_20_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_21_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_21_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_22_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_22_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_23_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_23_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_24_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_24_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_25_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_25_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_26_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_26_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_27_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_27_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_28_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_28_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_29_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_29_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_2_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_2_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_30_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_30_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_31_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_31_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_32_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_32_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_33_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_33_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_34_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_34_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_35_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_35_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_36_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_36_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_37_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_37_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_38_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_38_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_39_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_39_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_3_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_3_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_4_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_4_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_5_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_5_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_6_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_6_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_7_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_7_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_8_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_8_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_9_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_9_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_2_coeff_dir_regular20220818_142057 __attribute__((swift_name("layer_2_coeff_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_intercepts_dir_regular20220818_142057 __attribute__((swift_name("layer_2_intercepts_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_regular20220818_142057 __attribute__((swift_name("means_dir_regular20220818_142057")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_regular20220818_142057 __attribute__((swift_name("scales_dir_regular20220818_142057")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JacketPocketDirectionNNParameters")))
@interface VSPKJacketPocketDirectionNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)jacketPocketDirectionNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKJacketPocketDirectionNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_jacket_dir_nn_20210914_145245 __attribute__((swift_name("coeff_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_jacket_dir_nn_20210914_145245 __attribute__((swift_name("intercepts_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_0_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_10_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_11_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_12_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_13_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_14_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_15_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_16_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_17_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_18_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_19_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_1_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_20_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_21_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_22_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_23_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_24_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_25_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_26_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_27_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_28_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_29_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_2_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_30_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_31_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_32_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_33_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_34_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_35_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_36_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_37_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_38_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_39_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_3_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_40_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_41_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_42_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_43_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_44_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_45_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_46_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_47_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_48_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_49_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_4_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_50_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_51_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_52_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_53_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_54_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_55_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_56_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_57_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_58_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_59_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_5_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_60_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_61_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_62_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_63_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_64_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_65_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_66_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_67_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_68_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_69_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_6_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_70_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_71_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_72_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_73_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_74_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_75_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_76_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_77_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_78_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_79_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_7_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_8_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_9_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_coeff_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_0_intercepts_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_0_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_10_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_11_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_12_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_13_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_14_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_15_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_16_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_17_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_18_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_19_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_1_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_20_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_21_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_22_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_23_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_24_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_25_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_26_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_27_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_28_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_29_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_2_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_30_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_31_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_32_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_33_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_34_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_35_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_36_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_37_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_38_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_39_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_3_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_4_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_5_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_6_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_7_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_8_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_9_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_coeff_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_jacket_dir_nn_20210914_145245 __attribute__((swift_name("layer_1_intercepts_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_jacket_dir_nn_20210914_145245 __attribute__((swift_name("means_jacket_dir_nn_20210914_145245")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_jacket_dir_nn_20210914_145245 __attribute__((swift_name("scales_jacket_dir_nn_20210914_145245")));
@end;

__attribute__((swift_name("RotatorDirection")))
@interface VSPKRotatorDirection : VSPKBase <VSPKDirectionModel>
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (VSPKStepData *)getDirectionStepData:(VSPKStepData *)stepData __attribute__((swift_name("getDirection(stepData:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property int64_t currentTime __attribute__((swift_name("currentTime")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JacketPocketRotatingNNDirection")))
@interface VSPKJacketPocketRotatingNNDirection : VSPKRotatorDirection
- (instancetype)initWithNumDirection:(int32_t)numDirection numSpacksInDirection:(int32_t)numSpacksInDirection __attribute__((swift_name("init(numDirection:numSpacksInDirection:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PocketDirectionNNParameters")))
@interface VSPKPocketDirectionNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pocketDirectionNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPocketDirectionNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_nn_20210909_081256 __attribute__((swift_name("coeff_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_nn_20210909_081256 __attribute__((swift_name("intercepts_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_0_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_10_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_11_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_12_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_13_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_14_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_15_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_16_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_17_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_18_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_19_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_1_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_20_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_21_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_22_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_23_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_24_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_25_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_26_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_27_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_28_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_29_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_2_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_30_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_31_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_32_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_33_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_34_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_35_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_36_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_37_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_38_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_39_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_3_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_40_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_41_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_42_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_43_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_44_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_45_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_46_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_47_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_48_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_49_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_4_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_50_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_51_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_52_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_53_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_54_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_55_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_56_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_57_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_58_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_59_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_5_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_60_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_61_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_62_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_63_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_64_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_65_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_66_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_67_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_68_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_69_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_6_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_70_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_71_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_72_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_73_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_74_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_75_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_76_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_77_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_78_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_79_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_7_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_8_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_9_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_coeff_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_nn_20210909_081256 __attribute__((swift_name("layer_0_intercepts_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_0_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_10_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_11_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_12_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_13_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_14_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_15_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_16_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_17_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_18_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_19_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_1_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_20_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_21_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_22_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_23_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_24_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_25_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_26_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_27_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_28_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_29_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_2_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_30_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_31_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_32_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_33_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_34_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_35_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_36_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_37_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_38_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_39_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_3_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_4_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_5_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_6_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_7_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_8_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_9_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_coeff_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_nn_20210909_081256 __attribute__((swift_name("layer_1_intercepts_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_nn_20210909_081256 __attribute__((swift_name("means_dir_nn_20210909_081256")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_nn_20210909_081256 __attribute__((swift_name("scales_dir_nn_20210909_081256")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PocketRotatingNNDirection")))
@interface VSPKPocketRotatingNNDirection : VSPKRotatorDirection
- (instancetype)initWithNumDirection:(int32_t)numDirection numSpacksInDirection:(int32_t)numSpacksInDirection __attribute__((swift_name("init(numDirection:numSpacksInDirection:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RotatingNNDirection")))
@interface VSPKRotatingNNDirection : VSPKRotatorDirection
- (instancetype)initWithNumDirection:(int32_t)numDirection externalDataManager:(VSPKExternalDataManager *)externalDataManager numSpacksInDirection:(int32_t)numSpacksInDirection useOrthogonalAxis:(BOOL)useOrthogonalAxis useRotation:(BOOL)useRotation __attribute__((swift_name("init(numDirection:externalDataManager:numSpacksInDirection:useOrthogonalAxis:useRotation:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RotatingRWRegularDirection")))
@interface VSPKRotatingRWRegularDirection : VSPKRotatorDirection
- (instancetype)initWithNumDirection:(int32_t)numDirection numSpacksInDirection:(int32_t)numSpacksInDirection __attribute__((swift_name("init(numDirection:numSpacksInDirection:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SanityCheckDirectionNeuralNetworkParameters")))
@interface VSPKSanityCheckDirectionNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sanityCheckDirectionNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSanityCheckDirectionNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_nn __attribute__((swift_name("coeff_dir_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_nn __attribute__((swift_name("intercepts_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_nn __attribute__((swift_name("layer_0_coeff_0_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_nn __attribute__((swift_name("layer_0_coeff_10_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_nn __attribute__((swift_name("layer_0_coeff_11_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_nn __attribute__((swift_name("layer_0_coeff_12_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_nn __attribute__((swift_name("layer_0_coeff_13_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_nn __attribute__((swift_name("layer_0_coeff_14_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_nn __attribute__((swift_name("layer_0_coeff_15_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_nn __attribute__((swift_name("layer_0_coeff_16_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_nn __attribute__((swift_name("layer_0_coeff_17_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_nn __attribute__((swift_name("layer_0_coeff_18_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_nn __attribute__((swift_name("layer_0_coeff_19_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_nn __attribute__((swift_name("layer_0_coeff_1_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_nn __attribute__((swift_name("layer_0_coeff_20_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_nn __attribute__((swift_name("layer_0_coeff_21_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_nn __attribute__((swift_name("layer_0_coeff_22_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_nn __attribute__((swift_name("layer_0_coeff_23_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_nn __attribute__((swift_name("layer_0_coeff_24_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_nn __attribute__((swift_name("layer_0_coeff_25_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_nn __attribute__((swift_name("layer_0_coeff_26_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_nn __attribute__((swift_name("layer_0_coeff_27_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_nn __attribute__((swift_name("layer_0_coeff_28_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_nn __attribute__((swift_name("layer_0_coeff_29_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_nn __attribute__((swift_name("layer_0_coeff_2_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_nn __attribute__((swift_name("layer_0_coeff_30_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_nn __attribute__((swift_name("layer_0_coeff_31_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_nn __attribute__((swift_name("layer_0_coeff_32_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_nn __attribute__((swift_name("layer_0_coeff_33_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_nn __attribute__((swift_name("layer_0_coeff_34_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_nn __attribute__((swift_name("layer_0_coeff_35_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_nn __attribute__((swift_name("layer_0_coeff_36_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_nn __attribute__((swift_name("layer_0_coeff_37_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_nn __attribute__((swift_name("layer_0_coeff_38_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_nn __attribute__((swift_name("layer_0_coeff_39_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_nn __attribute__((swift_name("layer_0_coeff_3_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_nn __attribute__((swift_name("layer_0_coeff_40_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_nn __attribute__((swift_name("layer_0_coeff_41_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_nn __attribute__((swift_name("layer_0_coeff_42_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_nn __attribute__((swift_name("layer_0_coeff_43_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_nn __attribute__((swift_name("layer_0_coeff_44_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_nn __attribute__((swift_name("layer_0_coeff_45_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_nn __attribute__((swift_name("layer_0_coeff_46_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_nn __attribute__((swift_name("layer_0_coeff_47_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_nn __attribute__((swift_name("layer_0_coeff_48_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_nn __attribute__((swift_name("layer_0_coeff_49_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_nn __attribute__((swift_name("layer_0_coeff_4_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_nn __attribute__((swift_name("layer_0_coeff_50_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_nn __attribute__((swift_name("layer_0_coeff_51_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_nn __attribute__((swift_name("layer_0_coeff_52_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_nn __attribute__((swift_name("layer_0_coeff_53_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_nn __attribute__((swift_name("layer_0_coeff_54_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_nn __attribute__((swift_name("layer_0_coeff_55_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_nn __attribute__((swift_name("layer_0_coeff_56_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_nn __attribute__((swift_name("layer_0_coeff_57_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_nn __attribute__((swift_name("layer_0_coeff_58_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_nn __attribute__((swift_name("layer_0_coeff_59_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_nn __attribute__((swift_name("layer_0_coeff_5_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_nn __attribute__((swift_name("layer_0_coeff_60_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_nn __attribute__((swift_name("layer_0_coeff_61_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_nn __attribute__((swift_name("layer_0_coeff_62_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_nn __attribute__((swift_name("layer_0_coeff_63_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_nn __attribute__((swift_name("layer_0_coeff_64_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_nn __attribute__((swift_name("layer_0_coeff_65_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_nn __attribute__((swift_name("layer_0_coeff_66_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_nn __attribute__((swift_name("layer_0_coeff_67_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_nn __attribute__((swift_name("layer_0_coeff_68_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_nn __attribute__((swift_name("layer_0_coeff_69_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_nn __attribute__((swift_name("layer_0_coeff_6_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_nn __attribute__((swift_name("layer_0_coeff_70_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_nn __attribute__((swift_name("layer_0_coeff_71_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_nn __attribute__((swift_name("layer_0_coeff_72_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_nn __attribute__((swift_name("layer_0_coeff_73_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_nn __attribute__((swift_name("layer_0_coeff_74_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_nn __attribute__((swift_name("layer_0_coeff_75_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_nn __attribute__((swift_name("layer_0_coeff_76_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_nn __attribute__((swift_name("layer_0_coeff_77_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_nn __attribute__((swift_name("layer_0_coeff_78_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_nn __attribute__((swift_name("layer_0_coeff_79_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_nn __attribute__((swift_name("layer_0_coeff_7_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_nn __attribute__((swift_name("layer_0_coeff_8_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_nn __attribute__((swift_name("layer_0_coeff_9_dir_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_nn __attribute__((swift_name("layer_0_coeff_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_nn __attribute__((swift_name("layer_0_intercepts_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_nn __attribute__((swift_name("layer_1_coeff_0_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_nn __attribute__((swift_name("layer_1_coeff_10_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_nn __attribute__((swift_name("layer_1_coeff_11_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_nn __attribute__((swift_name("layer_1_coeff_12_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_nn __attribute__((swift_name("layer_1_coeff_13_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_nn __attribute__((swift_name("layer_1_coeff_14_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_nn __attribute__((swift_name("layer_1_coeff_15_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_nn __attribute__((swift_name("layer_1_coeff_16_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_nn __attribute__((swift_name("layer_1_coeff_17_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_nn __attribute__((swift_name("layer_1_coeff_18_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_nn __attribute__((swift_name("layer_1_coeff_19_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_nn __attribute__((swift_name("layer_1_coeff_1_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_nn __attribute__((swift_name("layer_1_coeff_20_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_nn __attribute__((swift_name("layer_1_coeff_21_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_nn __attribute__((swift_name("layer_1_coeff_22_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_nn __attribute__((swift_name("layer_1_coeff_23_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_nn __attribute__((swift_name("layer_1_coeff_24_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_dir_nn __attribute__((swift_name("layer_1_coeff_25_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_dir_nn __attribute__((swift_name("layer_1_coeff_26_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_dir_nn __attribute__((swift_name("layer_1_coeff_27_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_dir_nn __attribute__((swift_name("layer_1_coeff_28_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_dir_nn __attribute__((swift_name("layer_1_coeff_29_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_nn __attribute__((swift_name("layer_1_coeff_2_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_dir_nn __attribute__((swift_name("layer_1_coeff_30_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_dir_nn __attribute__((swift_name("layer_1_coeff_31_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_dir_nn __attribute__((swift_name("layer_1_coeff_32_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_dir_nn __attribute__((swift_name("layer_1_coeff_33_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_dir_nn __attribute__((swift_name("layer_1_coeff_34_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_dir_nn __attribute__((swift_name("layer_1_coeff_35_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_dir_nn __attribute__((swift_name("layer_1_coeff_36_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_dir_nn __attribute__((swift_name("layer_1_coeff_37_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_dir_nn __attribute__((swift_name("layer_1_coeff_38_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_dir_nn __attribute__((swift_name("layer_1_coeff_39_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_nn __attribute__((swift_name("layer_1_coeff_3_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_40_dir_nn __attribute__((swift_name("layer_1_coeff_40_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_41_dir_nn __attribute__((swift_name("layer_1_coeff_41_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_42_dir_nn __attribute__((swift_name("layer_1_coeff_42_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_43_dir_nn __attribute__((swift_name("layer_1_coeff_43_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_44_dir_nn __attribute__((swift_name("layer_1_coeff_44_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_45_dir_nn __attribute__((swift_name("layer_1_coeff_45_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_46_dir_nn __attribute__((swift_name("layer_1_coeff_46_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_47_dir_nn __attribute__((swift_name("layer_1_coeff_47_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_48_dir_nn __attribute__((swift_name("layer_1_coeff_48_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_49_dir_nn __attribute__((swift_name("layer_1_coeff_49_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_nn __attribute__((swift_name("layer_1_coeff_4_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_nn __attribute__((swift_name("layer_1_coeff_5_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_nn __attribute__((swift_name("layer_1_coeff_6_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_nn __attribute__((swift_name("layer_1_coeff_7_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_nn __attribute__((swift_name("layer_1_coeff_8_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_nn __attribute__((swift_name("layer_1_coeff_9_dir_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_nn __attribute__((swift_name("layer_1_coeff_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_nn __attribute__((swift_name("layer_1_intercepts_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_nn __attribute__((swift_name("means_dir_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_nn __attribute__((swift_name("scales_dir_nn")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymDirectionNNParameters")))
@interface VSPKSwingAntiSymDirectionNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingAntiSymDirectionNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingAntiSymDirectionNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("coeff_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("intercepts_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_0_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_10_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_11_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_12_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_13_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_14_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_15_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_16_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_17_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_18_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_19_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_1_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_20_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_21_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_22_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_23_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_24_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_25_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_26_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_27_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_28_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_29_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_2_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_30_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_31_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_32_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_33_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_34_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_35_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_36_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_37_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_38_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_39_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_3_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_40_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_41_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_42_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_43_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_44_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_45_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_46_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_47_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_48_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_49_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_4_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_50_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_51_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_52_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_53_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_54_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_55_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_56_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_57_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_58_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_59_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_5_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_60_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_61_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_62_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_63_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_64_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_65_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_66_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_67_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_68_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_69_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_6_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_70_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_71_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_72_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_73_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_74_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_75_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_76_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_77_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_78_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_79_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_7_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_8_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_9_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_coeff_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_0_intercepts_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_0_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_10_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_11_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_12_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_13_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_14_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_15_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_16_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_17_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_18_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_19_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_1_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_20_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_21_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_22_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_23_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_24_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_25_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_26_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_27_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_28_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_29_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_2_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_30_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_31_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_32_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_33_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_34_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_35_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_36_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_37_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_38_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_39_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_3_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_4_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_5_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_6_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_7_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_8_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_9_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_coeff_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("layer_1_intercepts_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("means_dir_anti_sym_nn_20210919_163644")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_anti_sym_nn_20210919_163644 __attribute__((swift_name("scales_dir_anti_sym_nn_20210919_163644")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymRotatingNNDirection")))
@interface VSPKSwingAntiSymRotatingNNDirection : VSPKRotatorDirection
- (instancetype)initWithNumDirection:(int32_t)numDirection numSpacksInDirection:(int32_t)numSpacksInDirection __attribute__((swift_name("init(numDirection:numSpacksInDirection:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymDirectionNNParameters")))
@interface VSPKSwingSymDirectionNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingSymDirectionNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingSymDirectionNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_dir_sym_nn_20210919_161202 __attribute__((swift_name("coeff_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_dir_sym_nn_20210919_161202 __attribute__((swift_name("intercepts_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_0_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_10_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_11_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_12_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_13_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_14_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_15_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_16_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_17_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_18_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_19_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_1_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_20_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_21_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_22_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_22_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_23_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_23_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_24_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_24_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_25_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_25_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_26_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_26_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_27_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_27_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_28_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_28_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_29_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_29_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_2_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_30_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_30_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_31_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_31_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_32_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_32_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_33_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_33_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_34_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_34_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_35_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_35_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_36_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_36_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_37_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_37_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_38_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_38_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_39_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_39_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_3_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_40_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_40_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_41_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_41_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_42_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_42_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_43_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_43_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_44_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_44_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_45_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_45_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_46_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_46_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_47_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_47_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_48_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_48_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_49_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_49_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_4_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_50_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_50_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_51_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_51_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_52_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_52_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_53_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_53_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_54_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_54_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_55_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_55_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_56_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_56_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_57_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_57_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_58_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_58_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_59_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_59_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_5_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_60_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_60_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_61_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_61_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_62_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_62_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_63_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_63_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_64_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_64_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_65_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_65_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_66_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_66_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_67_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_67_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_68_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_68_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_69_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_69_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_6_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_70_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_70_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_71_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_71_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_72_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_72_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_73_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_73_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_74_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_74_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_75_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_75_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_76_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_76_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_77_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_77_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_78_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_78_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_79_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_79_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_7_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_8_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_9_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_coeff_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_0_intercepts_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_0_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_10_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_11_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_12_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_13_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_14_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_15_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_16_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_17_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_18_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_19_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_1_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_20_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_21_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_22_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_23_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_24_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_25_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_26_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_27_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_28_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_29_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_2_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_30_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_30_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_31_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_31_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_32_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_32_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_33_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_33_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_34_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_34_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_35_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_35_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_36_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_36_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_37_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_37_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_38_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_38_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_39_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_39_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_3_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_4_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_5_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_6_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_7_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_8_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_9_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_coeff_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_dir_sym_nn_20210919_161202 __attribute__((swift_name("layer_1_intercepts_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_dir_sym_nn_20210919_161202 __attribute__((swift_name("means_dir_sym_nn_20210919_161202")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_dir_sym_nn_20210919_161202 __attribute__((swift_name("scales_dir_sym_nn_20210919_161202")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymRotatingNNDirection")))
@interface VSPKSwingSymRotatingNNDirection : VSPKRotatorDirection
- (instancetype)initWithNumDirection:(int32_t)numDirection numSpacksInDirection:(int32_t)numSpacksInDirection __attribute__((swift_name("init(numDirection:numSpacksInDirection:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)addToSpackDataHistoryStepData:(VSPKStepData *)stepData __attribute__((swift_name("addToSpackDataHistory(stepData:)")));
- (NSMutableArray<VSPKFloat *> *)fetchRotatedSpacksAngle:(double)angle __attribute__((swift_name("fetchRotatedSpacks(angle:)")));
- (double)getDirectionCertaintyScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionCertainty(scoreArray:angles:)")));
- (double)getDirectionFromScoreArrayScoreArray:(VSPKKotlinDoubleArray *)scoreArray angles:(VSPKKotlinDoubleArray *)angles __attribute__((swift_name("getDirectionFromScoreArray(scoreArray:angles:)")));
- (double)targetFunctionDirectionalData:(NSMutableArray<VSPKFloat *> *)directionalData __attribute__((swift_name("targetFunction(directionalData:)")));
@property (readonly) VSPKHistoryHandler<VSPKSpackStepData *> *spackDataHistory __attribute__((swift_name("spackDataHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TestModel")))
@interface VSPKTestModel : VSPKBase <VSPKDirectionModel>
- (instancetype)initWithDirection:(double)direction __attribute__((swift_name("init(direction:)"))) __attribute__((objc_designated_initializer));
- (VSPKStepData *)getDirectionStepData:(VSPKStepData *)stepData __attribute__((swift_name("getDirection(stepData:)")));
@property (readonly) double direction __attribute__((swift_name("direction")));
@end;

__attribute__((swift_name("DirectionFilter")))
@protocol VSPKDirectionFilter
@required
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxDebugToyFilter")))
@interface VSPKMaxDebugToyFilter : VSPKBase <VSPKDirectionFilter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
@end;

__attribute__((swift_name("NDirectionsFilter")))
@interface VSPKNDirectionsFilter : VSPKBase <VSPKDirectionFilter>
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer));
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
- (NSMutableArray<VSPKStepData *> *)subFilterStepData:(VSPKStepData *)stepData __attribute__((swift_name("subFilter(stepData:)")));
@property (readonly) int32_t numDirections __attribute__((swift_name("numDirections")));
@property (readonly) NSMutableArray<VSPKDouble *> *possibleDirections __attribute__((swift_name("possibleDirections")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxNaiveNDirFilter")))
@interface VSPKMaxNaiveNDirFilter : VSPKNDirectionsFilter
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSMutableArray<VSPKStepData *> *)subFilterStepData:(VSPKStepData *)stepData __attribute__((swift_name("subFilter(stepData:)")));
@property (readonly) int64_t MOVEME_DIR_FILTER_TIME_THRESH __attribute__((swift_name("MOVEME_DIR_FILTER_TIME_THRESH")));
@property NSMutableArray<VSPKStepData *> *heldSteps __attribute__((swift_name("heldSteps")));
@property VSPKStepData * _Nullable latestStepData __attribute__((swift_name("latestStepData")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxRunningAverageFilter")))
@interface VSPKMaxRunningAverageFilter : VSPKBase <VSPKDirectionFilter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
@property (readonly) int32_t NUM_AVG __attribute__((swift_name("NUM_AVG")));
@property (readonly) int32_t NUM_HELD_STEPS __attribute__((swift_name("NUM_HELD_STEPS")));
@property (readonly) int64_t TIMEOUT __attribute__((swift_name("TIMEOUT")));
@property int32_t debugNumStepsEntered __attribute__((swift_name("debugNumStepsEntered")));
@property int32_t debugNumStepsSent __attribute__((swift_name("debugNumStepsSent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxRunningAverageFilterxJohanFilter")))
@interface VSPKMaxRunningAverageFilterxJohanFilter : VSPKBase <VSPKDirectionFilter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
@property (readonly) int32_t NUM_AVG __attribute__((swift_name("NUM_AVG")));
@property (readonly) int32_t NUM_HELD_STEPS __attribute__((swift_name("NUM_HELD_STEPS")));
@property (readonly) int64_t TIMEOUT __attribute__((swift_name("TIMEOUT")));
@property int32_t debugNumStepsEntered __attribute__((swift_name("debugNumStepsEntered")));
@property int32_t debugNumStepsSent __attribute__((swift_name("debugNumStepsSent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxStepCertaintyBasedHolderFilter")))
@interface VSPKMaxStepCertaintyBasedHolderFilter : VSPKBase <VSPKDirectionFilter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
@property (readonly) double CERTAINTY_THRESHOLD __attribute__((swift_name("CERTAINTY_THRESHOLD")));
@property (readonly) int64_t TIMEOUT __attribute__((swift_name("TIMEOUT")));
@property int32_t debugNumStepsEntered __attribute__((swift_name("debugNumStepsEntered")));
@property int32_t debugNumStepsSent __attribute__((swift_name("debugNumStepsSent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxStepHolderFilter")))
@interface VSPKMaxStepHolderFilter : VSPKBase <VSPKDirectionFilter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<VSPKStepData *> *)filterStepData:(VSPKStepData *)stepData __attribute__((swift_name("filter(stepData:)")));
@property (readonly) int32_t NUM_HELD_STEPS __attribute__((swift_name("NUM_HELD_STEPS")));
@property (readonly) int64_t TIMEOUT __attribute__((swift_name("TIMEOUT")));
@property int32_t debugNumStepsEntered __attribute__((swift_name("debugNumStepsEntered")));
@property int32_t debugNumStepsSent __attribute__((swift_name("debugNumStepsSent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NaiveNDirectionsFilter")))
@interface VSPKNaiveNDirectionsFilter : VSPKNDirectionsFilter
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithNumDirections:(int32_t)numDirections __attribute__((swift_name("init(numDirections:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (NSMutableArray<VSPKStepData *> *)subFilterStepData:(VSPKStepData *)stepData __attribute__((swift_name("subFilter(stepData:)")));
@end;

__attribute__((swift_name("StepState")))
@interface VSPKStepState : VSPKBase <VSPKSensorInterpreterStepListener>
- (instancetype)initWithStepListener:(id<VSPKStepListener> _Nullable)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKStepStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onExit __attribute__((swift_name("onExit()")));
- (void)setToLenient __attribute__((swift_name("setToLenient()")));
- (void)setToStrict __attribute__((swift_name("setToStrict()")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
- (void)stop __attribute__((swift_name("stop()")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> _Nullable directionModel __attribute__((swift_name("directionModel")));
@property (readonly) VSPKFusionSensorManagerParameters *parameters __attribute__((swift_name("parameters")));
@property (readonly) id<VSPKDiscreteSpeedFunction> _Nullable speedModel __attribute__((swift_name("speedModel")));
@property id<VSPKStepListener> _Nullable stepListener __attribute__((swift_name("stepListener")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JacketPocketState")))
@interface VSPKJacketPocketState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKJacketPocketStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> _Nullable directionModel __attribute__((swift_name("directionModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JacketPocketState.Companion")))
@interface VSPKJacketPocketStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKJacketPocketStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegularState")))
@interface VSPKRegularState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKRegularStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> _Nullable directionModel __attribute__((swift_name("directionModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegularState.Companion")))
@interface VSPKRegularStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRegularStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepState.Companion")))
@interface VSPKStepStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKStepStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymState")))
@interface VSPKSwingAntiSymState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSwingAntiSymStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> _Nullable directionModel __attribute__((swift_name("directionModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymState.Companion")))
@interface VSPKSwingAntiSymStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingAntiSymStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingState")))
@interface VSPKSwingState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSwingStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> directionModel __attribute__((swift_name("directionModel")));
@property (readonly) id<VSPKDiscreteSpeedFunction> _Nullable speedModel __attribute__((swift_name("speedModel")));
@property (readonly) id<VSPKDiscreteSpeedFunction> _Nullable swingAntiSymspeedModel __attribute__((swift_name("swingAntiSymspeedModel")));
@property (readonly) id<VSPKDiscreteSpeedFunction> _Nullable swingSymSpeedModel __attribute__((swift_name("swingSymSpeedModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingState.Companion")))
@interface VSPKSwingStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymState")))
@interface VSPKSwingSymState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSwingSymStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onEnter __attribute__((swift_name("onEnter()")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> _Nullable directionModel __attribute__((swift_name("directionModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymState.Companion")))
@interface VSPKSwingSymStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingSymStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleyState")))
@interface VSPKTrolleyState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTrolleyStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDiscreteSpeedFunction> _Nullable speedModel __attribute__((swift_name("speedModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleyState.Companion")))
@interface VSPKTrolleyStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTrolleyStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrouserPocketState")))
@interface VSPKTrouserPocketState : VSPKStepState
- (instancetype)initWithStepListener:(id<VSPKStepListener>)stepListener stepDetectorList:(NSArray<id<VSPKStepDetector>> *)stepDetectorList externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(stepListener:stepDetectorList:externalDataManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTrouserPocketStateCompanion *companion __attribute__((swift_name("companion")));
- (void)onSensorsInitiatedCurrentTime:(int64_t)currentTime __attribute__((swift_name("onSensorsInitiated(currentTime:)")));
- (VSPKKotlinUnit *)stepEventStep:(VSPKStepData *)step __attribute__((swift_name("stepEvent(step:)")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) id<VSPKDirectionFilter> _Nullable directionFilter __attribute__((swift_name("directionFilter")));
@property (readonly) id<VSPKDirectionModel> _Nullable directionModel __attribute__((swift_name("directionModel")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrouserPocketState.Companion")))
@interface VSPKTrouserPocketStateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTrouserPocketStateCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPocketOrSwingSpackFeaturiser")))
@interface VSPKAndroidPocketOrSwingSpackFeaturiser : VSPKBase <VSPKSpackFeaturisationModule>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("featuriseSpack(spack:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AverageGravityFeaturiser")))
@interface VSPKAverageGravityFeaturiser : VSPKBase <VSPKSpackFeaturisationModule>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("featuriseSpack(spack:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IOSPocketOrSwingSpackFeaturiser")))
@interface VSPKIOSPocketOrSwingSpackFeaturiser : VSPKBase <VSPKSpackFeaturisationModule>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("featuriseSpack(spack:)")));
@end;

__attribute__((swift_name("StepStateEvaluator")))
@interface VSPKStepStateEvaluator : VSPKSensorListener
- (instancetype)initWithRawSensorList:(NSArray<VSPKRawSensor *> *)rawSensorList stepDetectorManager:(id<VSPKIStepDetectorManager>)stepDetectorManager __attribute__((swift_name("init(rawSensorList:stepDetectorManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList priority:(BOOL)priority __attribute__((swift_name("init(sensorList:priority:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)feedStepStep:(VSPKStepData *)step __attribute__((swift_name("feedStep(step:)")));
@property (readonly) NSArray<VSPKRawSensor *> *rawSensorList __attribute__((swift_name("rawSensorList")));
@property (readonly) id<VSPKIStepDetectorManager> stepDetectorManager __attribute__((swift_name("stepDetectorManager")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LegacyStepStateEvaluator")))
@interface VSPKLegacyStepStateEvaluator : VSPKStepStateEvaluator
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager stepDetectorManager:(id<VSPKIStepDetectorManager>)stepDetectorManager externalDataManager:(VSPKExternalDataManager *)externalDataManager forcePocket:(BOOL)forcePocket __attribute__((swift_name("init(rawSensorManager:stepDetectorManager:externalDataManager:forcePocket:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithRawSensorList:(NSArray<VSPKRawSensor *> *)rawSensorList stepDetectorManager:(id<VSPKIStepDetectorManager>)stepDetectorManager __attribute__((swift_name("init(rawSensorList:stepDetectorManager:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseIt __attribute__((swift_name("featuriseIt()")));
- (void)feedStepStep:(VSPKStepData *)step __attribute__((swift_name("feedStep(step:)")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PocketOrSwingEvaluator")))
@interface VSPKPocketOrSwingEvaluator : VSPKBase <VSPKSpackEvaluator>
- (instancetype)initWithFeaturiser:(id<VSPKSpackFeaturisationModule>)featuriser classifier:(VSPKMLModel *)classifier __attribute__((swift_name("init(featuriser:classifier:)"))) __attribute__((objc_designated_initializer));
- (BOOL)evaluateSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("evaluateSpack(spack:)")));
@property (readonly) VSPKMLModel *classifier __attribute__((swift_name("classifier")));
@property (readonly) id<VSPKSpackFeaturisationModule> featuriser __attribute__((swift_name("featuriser")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegularModeSpackEvaluator")))
@interface VSPKRegularModeSpackEvaluator : VSPKBase <VSPKSpackEvaluator>
- (instancetype)initWithFeaturiser:(id<VSPKSpackFeaturisationModule>)featuriser __attribute__((swift_name("init(featuriser:)"))) __attribute__((objc_designated_initializer));
- (BOOL)evaluateSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("evaluateSpack(spack:)")));
@property (readonly) id<VSPKSpackFeaturisationModule> featuriser __attribute__((swift_name("featuriser")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpackBasedStateEvaluator")))
@interface VSPKSpackBasedStateEvaluator : VSPKBase <VSPKSpackListener>
- (instancetype)initWithExtractor:(VSPKSpackExtractor *)extractor regularModeEvaluator:(id<VSPKSpackEvaluator>)regularModeEvaluator pocketSwingEvaluator:(id<VSPKSpackEvaluator>)pocketSwingEvaluator __attribute__((swift_name("init(extractor:regularModeEvaluator:pocketSwingEvaluator:)"))) __attribute__((objc_designated_initializer));
- (void)onNewSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("onNewSpack(spack:)")));
- (void)onSensorsInitiatedTimestamp:(int64_t)timestamp __attribute__((swift_name("onSensorsInitiated(timestamp:)")));
@property (readonly) id<VSPKSpackEvaluator> pocketSwingEvaluator __attribute__((swift_name("pocketSwingEvaluator")));
@property (readonly) id<VSPKSpackEvaluator> regularModeEvaluator __attribute__((swift_name("regularModeEvaluator")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SymmetryFeaturiser")))
@interface VSPKSymmetryFeaturiser : VSPKSensorListener
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager __attribute__((swift_name("init(rawSensorManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithSensorList:(NSArray<VSPKRawSensor *> *)sensorList priority:(BOOL)priority __attribute__((swift_name("init(sensorList:priority:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)dispose __attribute__((swift_name("dispose()")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseIt __attribute__((swift_name("featuriseIt()")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)processTick __attribute__((swift_name("processTick()")));
- (void)setOutputOutput:(void (^ _Nullable)(NSArray<VSPKFloat *> *))output __attribute__((swift_name("setOutput(output:)")));
@end;

__attribute__((swift_name("ContinuousSpeedFunction")))
@protocol VSPKContinuousSpeedFunction
@required
- (NSMutableArray<VSPKFloat *> * _Nullable)calculateSpeedData:(id)data __attribute__((swift_name("calculateSpeed(data:)")));
@end;

__attribute__((swift_name("DiscreteSpeedFunction")))
@protocol VSPKDiscreteSpeedFunction
@required
- (float)calculateSpeedStepData:(VSPKStepData *)stepData __attribute__((swift_name("calculateSpeed(stepData:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegressionDoubleSpeedFunction")))
@interface VSPKRegressionDoubleSpeedFunction : VSPKBase <VSPKDiscreteSpeedFunction>
- (instancetype)initWithCoefficient:(float)coefficient intercept:(float)intercept __attribute__((swift_name("init(coefficient:intercept:)"))) __attribute__((objc_designated_initializer));
- (float)calculateSpeedStepData:(VSPKStepData *)stepData __attribute__((swift_name("calculateSpeed(stepData:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegressionSpeedFunction")))
@interface VSPKRegressionSpeedFunction : VSPKBase <VSPKDiscreteSpeedFunction>
- (instancetype)initWithCoefficient:(float)coefficient intercept:(float)intercept certaintylessScalar:(VSPKFloat * _Nullable)certaintylessScalar __attribute__((swift_name("init(coefficient:intercept:certaintylessScalar:)"))) __attribute__((objc_designated_initializer));
- (float)calculateSpeedStepData:(VSPKStepData *)stepData __attribute__((swift_name("calculateSpeed(stepData:)")));
@property (readonly) VSPKFloat * _Nullable certaintylessScalar __attribute__((swift_name("certaintylessScalar")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpeedSensorHelper")))
@interface VSPKSpeedSensorHelper : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)speedSensorHelper __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSpeedSensorHelper *shared __attribute__((swift_name("shared")));
- (id<VSPKDiscreteSpeedFunction>)loadSpeedFunctionMode:(VSPKIQPSDeviceOrientation *)mode userSettings:(id<VSPKIQPSUserSettings> _Nullable)userSettings userAdjustment:(VSPKUserAdjustments * _Nullable)userAdjustment externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("loadSpeedFunction(mode:userSettings:userAdjustment:externalDataManager:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySpeedBundle")))
@interface VSPKTrolleySpeedBundle : VSPKBase
- (instancetype)initWithStepData:(VSPKSpackStepData *)stepData num:(int32_t)num axis:(VSPKKotlinFloatArray *)axis step:(int32_t)step __attribute__((swift_name("init(stepData:num:axis:step:)"))) __attribute__((objc_designated_initializer));
- (VSPKSpackStepData *)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (VSPKKotlinFloatArray *)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (VSPKTrolleySpeedBundle *)doCopyStepData:(VSPKSpackStepData *)stepData num:(int32_t)num axis:(VSPKKotlinFloatArray *)axis step:(int32_t)step __attribute__((swift_name("doCopy(stepData:num:axis:step:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKKotlinFloatArray *axis __attribute__((swift_name("axis")));
@property (readonly) int32_t num __attribute__((swift_name("num")));
@property (readonly) int32_t step __attribute__((swift_name("step")));
@property (readonly) VSPKSpackStepData *stepData __attribute__((swift_name("stepData")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySpeedFunction")))
@interface VSPKTrolleySpeedFunction : VSPKBase <VSPKDiscreteSpeedFunction>
- (instancetype)initWithCoefficient:(float)coefficient intercept:(float)intercept certaintylessScalar:(VSPKFloat * _Nullable)certaintylessScalar __attribute__((swift_name("init(coefficient:intercept:certaintylessScalar:)"))) __attribute__((objc_designated_initializer));
- (float)calculateSpeedStepData:(VSPKStepData *)stepData __attribute__((swift_name("calculateSpeed(stepData:)")));
@property (readonly) float ALPHA __attribute__((swift_name("ALPHA")));
@property (readonly) VSPKFloat * _Nullable certaintylessScalar __attribute__((swift_name("certaintylessScalar")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySpeedManager")))
@interface VSPKTrolleySpeedManager : VSPKBase <VSPKContinuousSpeedFunction>
- (instancetype)initWithV0:(float)v0 vMax:(float)vMax alpha:(float)alpha beta:(float)beta __attribute__((swift_name("init(v0:vMax:alpha:beta:)"))) __attribute__((objc_designated_initializer));
- (NSMutableArray<VSPKFloat *> * _Nullable)calculateSpeedData:(id)data __attribute__((swift_name("calculateSpeed(data:)")));
@property (readonly) int64_t SPEED_TIMEOUT __attribute__((swift_name("SPEED_TIMEOUT")));
@property (readonly) float alpha __attribute__((swift_name("alpha")));
@property (readonly) float beta __attribute__((swift_name("beta")));
@property int64_t currentTime __attribute__((swift_name("currentTime")));
@property (readonly) float v0 __attribute__((swift_name("v0")));
@property (readonly) float vMax __attribute__((swift_name("vMax")));
@property float vc __attribute__((swift_name("vc")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapCoordinate")))
@interface VSPKMapCoordinate : VSPKBase
- (instancetype)initWithValidPosition:(BOOL)validPosition offset:(double)offset __attribute__((swift_name("init(validPosition:offset:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (VSPKMapCoordinate *)doCopyValidPosition:(BOOL)validPosition offset:(double)offset __attribute__((swift_name("doCopy(validPosition:offset:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double offset __attribute__((swift_name("offset")));
@property (readonly) BOOL validPosition __attribute__((swift_name("validPosition")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MapData")))
@interface VSPKMapData : VSPKBase
- (instancetype)initWithMapInformation:(id<VSPKIQPSMapInformation>)mapInformation debug:(BOOL)debug __attribute__((swift_name("init(mapInformation:debug:)"))) __attribute__((objc_designated_initializer));
- (id<VSPKIQPSMapInformation>)fecthMapInformation __attribute__((swift_name("fecthMapInformation()")));
- (VSPKMapCoordinate *)getPoint:(VSPKPointF *)point __attribute__((swift_name("get(point:)")));
- (BOOL)isValidPointPoint:(VSPKPointF *)point __attribute__((swift_name("isValidPoint(point:)")));
- (double)offsetZoneRadiansPoint:(VSPKPointF *)point __attribute__((swift_name("offsetZoneRadians(point:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuxSensorHelper")))
@interface VSPKAuxSensorHelper : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)auxSensorHelper __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAuxSensorHelper *shared __attribute__((swift_name("shared")));
- (NSMutableArray<id<VSPKAuxiliarySensor>> *)loadAuxSensorsRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager externalDataManager:(VSPKExternalDataManager *)externalDataManager mapData:(VSPKMapData *)mapData outputSignal:(void (^)(id<VSPKOutputSignal>))outputSignal __attribute__((swift_name("loadAuxSensors(rawSensorManager:externalDataManager:mapData:outputSignal:)")));
@end;

__attribute__((swift_name("AuxiliarySensor")))
@protocol VSPKAuxiliarySensor
@required
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
@end;

__attribute__((swift_name("AuxiliarySensorManager")))
@protocol VSPKAuxiliarySensorManager
@required
- (void)loadAuxSensors __attribute__((swift_name("loadAuxSensors()")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
@property NSMutableArray<id<VSPKAuxiliarySensor>> *auxSensors __attribute__((swift_name("auxSensors")));
@end;

__attribute__((swift_name("FrequencyUser")))
@interface VSPKFrequencyUser : VSPKBase <VSPKObserver>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorType __attribute__((swift_name("sensorType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerAuxSensorManager")))
@interface VSPKQLayerAuxSensorManager : VSPKBase <VSPKAuxiliarySensorManager>
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager externalDataManager:(VSPKExternalDataManager *)externalDataManager mapData:(VSPKMapData *)mapData onOutputSignal:(void (^)(id<VSPKOutputSignal>))onOutputSignal __attribute__((swift_name("init(rawSensorManager:externalDataManager:mapData:onOutputSignal:)"))) __attribute__((objc_designated_initializer));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)loadAuxSensors __attribute__((swift_name("loadAuxSensors()")));
@property NSMutableArray<id<VSPKAuxiliarySensor>> *auxSensors __attribute__((swift_name("auxSensors")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RawSensorManagerAdapter")))
@interface VSPKRawSensorManagerAdapter : VSPKBase <VSPKIQPSRawSensorManager>
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager> _Nullable)rawSensorManager __attribute__((swift_name("init(rawSensorManager:)"))) __attribute__((objc_designated_initializer));
- (void)clearAllObservers __attribute__((swift_name("clearAllObservers()")));
- (void)debugPrintInformation __attribute__((swift_name("debugPrintInformation()")));
- (void)shutDown __attribute__((swift_name("shutDown()")));
- (void)start __attribute__((swift_name("start()")));
- (void)stopAllSensors __attribute__((swift_name("stopAllSensors()")));
@property (readonly) VSPKRawSensor *accelerationSensor __attribute__((swift_name("accelerationSensor")));
@property (readonly) VSPKRawSensor * _Nullable accelerationSensorUncalibrated __attribute__((swift_name("accelerationSensorUncalibrated")));
@property (readonly) VSPKRawSensor * _Nullable altitudeSensor __attribute__((swift_name("altitudeSensor")));
@property (readonly) VSPKRawSensor * _Nullable barometerSensor __attribute__((swift_name("barometerSensor")));
@property (readonly) VSPKRawSensor *gravitySensor __attribute__((swift_name("gravitySensor")));
@property (readonly) VSPKRawSensor * _Nullable gyroscopeSensorUncalibrated __attribute__((swift_name("gyroscopeSensorUncalibrated")));
@property (readonly) VSPKRawSensor * _Nullable lockedSensor __attribute__((swift_name("lockedSensor")));
@property (readonly) VSPKRawSensor * _Nullable luxSensor __attribute__((swift_name("luxSensor")));
@property (readonly) VSPKRawSensor * _Nullable orientationSensor __attribute__((swift_name("orientationSensor")));
@property (readonly) VSPKRawSensor *rotationSensor __attribute__((swift_name("rotationSensor")));
@property (readonly) VSPKRawSensor * _Nullable screenBrightnessSensor __attribute__((swift_name("screenBrightnessSensor")));
@property (readonly) VSPKIQPSSystemType *systemType __attribute__((swift_name("systemType")));
@end;

__attribute__((swift_name("RawSensorData")))
@interface VSPKRawSensorData : VSPKBase
- (instancetype)initWithValues:(VSPKKotlinFloatArray *)values sensorDataType:(VSPKRawSensorDataSensorDataType *)sensorDataType timestamp:(int64_t)timestamp systemTimestamp:(int64_t)systemTimestamp sensorAccuracy:(VSPKFloat * _Nullable)sensorAccuracy __attribute__((swift_name("init(values:sensorDataType:timestamp:systemTimestamp:sensorAccuracy:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKRawSensorDataCompanion *companion __attribute__((swift_name("companion")));
- (VSPKRawSensorData *)doCopyOf __attribute__((swift_name("doCopyOf()")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property (readonly) VSPKFloat * _Nullable sensorAccuracy __attribute__((swift_name("sensorAccuracy")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@property (readonly) int64_t systemTimestamp __attribute__((swift_name("systemTimestamp")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKKotlinFloatArray *values __attribute__((swift_name("values")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RadiusSyncTrigger")))
@interface VSPKRadiusSyncTrigger : VSPKRawSensorData
- (instancetype)initWithCurrentTime:(int64_t)currentTime position:(VSPKPointF *)position radius:(float)radius __attribute__((swift_name("init(currentTime:position:radius:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithValues:(VSPKKotlinFloatArray *)values sensorDataType:(VSPKRawSensorDataSensorDataType *)sensorDataType timestamp:(int64_t)timestamp systemTimestamp:(int64_t)systemTimestamp sensorAccuracy:(VSPKFloat * _Nullable)sensorAccuracy __attribute__((swift_name("init(values:sensorDataType:timestamp:systemTimestamp:sensorAccuracy:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) float radius __attribute__((swift_name("radius")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SyncTrigger")))
@interface VSPKSyncTrigger : VSPKRawSensorData <VSPKIQPSSyncData>
- (instancetype)initWithCurrentTime:(int64_t)currentTime angle:(float)angle position:(VSPKPointF *)position syncPosition:(BOOL)syncPosition syncAngle:(BOOL)syncAngle uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("init(currentTime:angle:position:syncPosition:syncAngle:uncertainAngle:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithValues:(VSPKKotlinFloatArray *)values sensorDataType:(VSPKRawSensorDataSensorDataType *)sensorDataType timestamp:(int64_t)timestamp systemTimestamp:(int64_t)systemTimestamp sensorAccuracy:(VSPKFloat * _Nullable)sensorAccuracy __attribute__((swift_name("init(values:sensorDataType:timestamp:systemTimestamp:sensorAccuracy:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) float angle __attribute__((swift_name("angle")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property BOOL syncAngle __attribute__((swift_name("syncAngle")));
@property (readonly) BOOL syncPosition __attribute__((swift_name("syncPosition")));
@property (readonly) BOOL uncertainAngle __attribute__((swift_name("uncertainAngle")));
@end;

__attribute__((swift_name("Observable")))
@interface VSPKObservable : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addObserverObserver:(id<VSPKObserver> _Nullable)observer __attribute__((swift_name("addObserver(observer:)")));
- (void)addPriorityObserverObserver:(id<VSPKObserver>)observer __attribute__((swift_name("addPriorityObserver(observer:)")));
- (void)clearChanged __attribute__((swift_name("clearChanged()")));
- (void)deleteObserverObserver:(id<VSPKObserver>)observer __attribute__((swift_name("deleteObserver(observer:)")));
- (void)deleteObservers __attribute__((swift_name("deleteObservers()")));
- (NSArray<NSString *> *)getObserverStrings __attribute__((swift_name("getObserverStrings()")));
- (BOOL)hasChanged __attribute__((swift_name("hasChanged()")));
- (void)notifyObserversObj:(id)obj __attribute__((swift_name("notifyObservers(obj:)")));
- (void)setChanged __attribute__((swift_name("setChanged()")));
- (void)tellMeAboutYourself __attribute__((swift_name("tellMeAboutYourself()")));
@property NSMutableArray<id<VSPKObserver>> *prioObservers __attribute__((swift_name("prioObservers")));
@end;

__attribute__((swift_name("RawSensor")))
@interface VSPKRawSensor : VSPKObservable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addObserverObserver:(id<VSPKObserver> _Nullable)observer __attribute__((swift_name("addObserver(observer:)")));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
- (void)notifyChangedData:(VSPKRawSensorData *)data __attribute__((swift_name("notifyChanged(data:)")));
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)tellMeAboutYourself __attribute__((swift_name("tellMeAboutYourself()")));
@property int64_t currentTime __attribute__((swift_name("currentTime")));
@property VSPKRawSensorData * _Nullable lastValue __attribute__((swift_name("lastValue")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((swift_name("ReplaySensor")))
@interface VSPKReplaySensor : VSPKRawSensor <VSPKObserver>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKReplaySensorCompanion *companion __attribute__((swift_name("companion")));
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayAcceleration")))
@interface VSPKReplayAcceleration : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayAltitude")))
@interface VSPKReplayAltitude : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayBarometer")))
@interface VSPKReplayBarometer : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataCoordinator")))
@interface VSPKReplayDataCoordinator : VSPKObservable
- (instancetype)initWithDataHandler:(id<VSPKIReplayDataHandler>)dataHandler replayDataVersion:(VSPKReplayDataVersion *)replayDataVersion onComplete:(void (^)(void))onComplete __attribute__((swift_name("init(dataHandler:replayDataVersion:onComplete:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)setCallbackCallback:(void (^)(void))callback __attribute__((swift_name("setCallback(callback:)")));
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
@property int64_t currentTime __attribute__((swift_name("currentTime")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayGameRotation")))
@interface VSPKReplayGameRotation : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayGeoMagneticSensor")))
@interface VSPKReplayGeoMagneticSensor : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayGravity")))
@interface VSPKReplayGravity : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayLocked")))
@interface VSPKReplayLocked : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayLux")))
@interface VSPKReplayLux : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayScreenBrightness")))
@interface VSPKReplayScreenBrightness : VSPKReplaySensor
- (instancetype)initWithDataCoordinator:(VSPKReplayDataCoordinator *)dataCoordinator vendor:(NSString * _Nullable)vendor __attribute__((swift_name("init(dataCoordinator:vendor:)"))) __attribute__((objc_designated_initializer));
- (NSString *)getVendorName __attribute__((swift_name("getVendorName()")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorDataType __attribute__((swift_name("sensorDataType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplaySensor.Companion")))
@interface VSPKReplaySensorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplaySensorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((swift_name("PocketSensor")))
@protocol VSPKPocketSensor
@required
- (BOOL)inPocketTimestamp:(int64_t)timestamp __attribute__((swift_name("inPocket(timestamp:)")));
- (void)stop __attribute__((swift_name("stop()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LockedPocketSensor")))
@interface VSPKLockedPocketSensor : VSPKBase <VSPKPocketSensor, VSPKObserver>
- (instancetype)initWithScreenLockedSensor:(VSPKRawSensor * _Nullable)screenLockedSensor __attribute__((swift_name("init(screenLockedSensor:)"))) __attribute__((objc_designated_initializer));
- (BOOL)inPocketTimestamp:(int64_t)timestamp __attribute__((swift_name("inPocket(timestamp:)")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@property BOOL screenLocked __attribute__((swift_name("screenLocked")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmilsPocketSensor")))
@interface VSPKEmilsPocketSensor : VSPKFrequencyUser <VSPKPocketSensor>
- (instancetype)initWithLuxSensor:(VSPKRawSensor *)luxSensor screenLockedSensor:(VSPKRawSensor * _Nullable)screenLockedSensor screenBrightnessSensor:(VSPKRawSensor * _Nullable)screenBrightnessSensor __attribute__((swift_name("init(luxSensor:screenLockedSensor:screenBrightnessSensor:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKEmilsPocketSensorCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)inPocketTimestamp:(int64_t)timestamp __attribute__((swift_name("inPocket(timestamp:)")));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorType __attribute__((swift_name("sensorType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EmilsPocketSensor.Companion")))
@interface VSPKEmilsPocketSensorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKEmilsPocketSensorCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t SCREEN_BRIGHTNESS_LOWER_THRESH __attribute__((swift_name("SCREEN_BRIGHTNESS_LOWER_THRESH")));
@property (readonly) int32_t SCREEN_BRIGHTNESS_UPPER_THRESH __attribute__((swift_name("SCREEN_BRIGHTNESS_UPPER_THRESH")));
@property (readonly) float SECOND_LUX_POCKED_THRESH __attribute__((swift_name("SECOND_LUX_POCKED_THRESH")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaxRetardNN")))
@interface VSPKMaxRetardNN : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)maxRetardNN __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMaxRetardNN *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_max_retard_nn_no_whiten __attribute__((swift_name("PCA_components_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *PCA_means_max_retard_nn_no_whiten __attribute__((swift_name("PCA_means_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c0_max_retard_nn_no_whiten __attribute__((swift_name("c0_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c10_max_retard_nn_no_whiten __attribute__((swift_name("c10_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c11_max_retard_nn_no_whiten __attribute__((swift_name("c11_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c12_max_retard_nn_no_whiten __attribute__((swift_name("c12_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c13_max_retard_nn_no_whiten __attribute__((swift_name("c13_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c14_max_retard_nn_no_whiten __attribute__((swift_name("c14_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c15_max_retard_nn_no_whiten __attribute__((swift_name("c15_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c16_max_retard_nn_no_whiten __attribute__((swift_name("c16_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c17_max_retard_nn_no_whiten __attribute__((swift_name("c17_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c18_max_retard_nn_no_whiten __attribute__((swift_name("c18_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c19_max_retard_nn_no_whiten __attribute__((swift_name("c19_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c1_max_retard_nn_no_whiten __attribute__((swift_name("c1_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c20_max_retard_nn_no_whiten __attribute__((swift_name("c20_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c21_max_retard_nn_no_whiten __attribute__((swift_name("c21_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c2_max_retard_nn_no_whiten __attribute__((swift_name("c2_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c3_max_retard_nn_no_whiten __attribute__((swift_name("c3_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c4_max_retard_nn_no_whiten __attribute__((swift_name("c4_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c5_max_retard_nn_no_whiten __attribute__((swift_name("c5_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c6_max_retard_nn_no_whiten __attribute__((swift_name("c6_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c7_max_retard_nn_no_whiten __attribute__((swift_name("c7_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c8_max_retard_nn_no_whiten __attribute__((swift_name("c8_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *c9_max_retard_nn_no_whiten __attribute__((swift_name("c9_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_max_retard_nn_no_whiten __attribute__((swift_name("coeff_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_max_retard_nn_no_whiten __attribute__((swift_name("intercepts_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_0_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_10_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_11_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_12_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_13_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_14_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_15_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_16_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_17_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_18_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_19_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_1_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_20_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_20_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_21_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_21_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_2_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_3_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_4_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_5_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_6_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_7_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_8_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_9_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_coeff_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_max_retard_nn_no_whiten __attribute__((swift_name("layer_0_intercepts_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_0_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_1_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_2_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_3_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_4_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_5_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_6_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_7_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_8_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_9_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_coeff_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_max_retard_nn_no_whiten __attribute__((swift_name("layer_1_intercepts_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_0_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_0_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_1_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_1_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_2_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_2_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_3_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_3_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_4_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_4_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_5_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_5_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_6_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_6_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_7_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_7_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_8_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_8_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_9_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_9_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_2_coeff_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_coeff_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_intercepts_max_retard_nn_no_whiten __attribute__((swift_name("layer_2_intercepts_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_max_retard_nn_no_whiten __attribute__((swift_name("means_max_retard_nn_no_whiten")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_max_retard_nn_no_whiten __attribute__((swift_name("scales_max_retard_nn_no_whiten")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PocketModeFeaturiser")))
@interface VSPKPocketModeFeaturiser : VSPKBase <VSPKSpackFeaturisationModule>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("featuriseSpack(spack:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpackBasedPocketModeClassifier")))
@interface VSPKSpackBasedPocketModeClassifier : VSPKModularSpackUser <VSPKPocketSensor>
- (instancetype)initWithExtractor:(VSPKSpackExtractor *)extractor evaluator:(id<VSPKSpackEvaluator>)evaluator __attribute__((swift_name("init(extractor:evaluator:)"))) __attribute__((objc_designated_initializer));
- (BOOL)inPocketTimestamp:(int64_t)timestamp __attribute__((swift_name("inPocket(timestamp:)")));
- (void)onNewSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("onNewSpack(spack:)")));
- (void)onSensorsInitiatedTimestamp:(int64_t)timestamp __attribute__((swift_name("onSensorsInitiated(timestamp:)")));
- (void)stop __attribute__((swift_name("stop()")));
@property (readonly) int32_t numAvg __attribute__((swift_name("numAvg")));
@property VSPKHistoryHandler<VSPKFloat *> *scoreHistory __attribute__((swift_name("scoreHistory")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GeoMagneticOrientation")))
@interface VSPKGeoMagneticOrientation : VSPKObservable <VSPKObserver>
- (instancetype)initWithGeoMagneticRotation:(VSPKRawSensor *)geoMagneticRotation observer:(id<VSPKObserver> _Nullable)observer __attribute__((swift_name("init(geoMagneticRotation:observer:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@property id<VSPKObserver> _Nullable observer __attribute__((swift_name("observer")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RotationSensor")))
@interface VSPKRotationSensor : VSPKBase <VSPKAuxiliarySensor, VSPKObserver>
- (instancetype)initWithRotation:(VSPKRawSensor *)rotation gravity:(VSPKRawSensor *)gravity externalDataManager:(VSPKExternalDataManager *)externalDataManager outputSignal:(void (^)(id<VSPKOutputSignal>))outputSignal __attribute__((swift_name("init(rotation:gravity:externalDataManager:outputSignal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKRotationSensorCompanion *companion __attribute__((swift_name("companion")));
- (float)getRotation __attribute__((swift_name("getRotation()")));
- (void)start __attribute__((swift_name("start()")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RotationSensor.Companion")))
@interface VSPKRotationSensorCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRotationSensorCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("IReplayDataHandler")))
@protocol VSPKIReplayDataHandler
@required
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp rescuePositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)rescuePositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:rescuePositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSArray<VSPKRawSensorData *> *)getSensorDataDataType:(VSPKRawSensorDataSensorDataType *)dataType __attribute__((swift_name("getSensorData(dataType:)")));
- (VSPKStartPosition *)getStartPosition __attribute__((swift_name("getStartPosition()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayDataDataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes dataVersion:(VSPKReplayDataVersion *)dataVersion __attribute__((swift_name("loadReplayData(dataTypes:dataVersion:)")));
- (void)setStartPositionTimestamp:(VSPKLong * _Nullable)timestamp startPos:(VSPKPointF * _Nullable)startPos startAngle:(VSPKDouble * _Nullable)startAngle uncertainAngle:(VSPKBoolean * _Nullable)uncertainAngle __attribute__((swift_name("setStartPosition(timestamp:startPos:startAngle:uncertainAngle:)")));
- (void)startRecording __attribute__((swift_name("startRecording()")));
- (void)stopRecording __attribute__((swift_name("stopRecording()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IReplayDataHandlerCompanion")))
@interface VSPKIReplayDataHandlerCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIReplayDataHandlerCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IReplayDataHandlerIReplayConfig")))
@interface VSPKIReplayDataHandlerIReplayConfig : VSPKBase
- (instancetype)initWithTestNumber:(NSString * _Nullable)testNumber printMissingFileException:(BOOL)printMissingFileException __attribute__((swift_name("init(testNumber:printMissingFileException:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (VSPKIReplayDataHandlerIReplayConfig *)doCopyTestNumber:(NSString * _Nullable)testNumber printMissingFileException:(BOOL)printMissingFileException __attribute__((swift_name("doCopy(testNumber:printMissingFileException:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property BOOL printMissingFileException __attribute__((swift_name("printMissingFileException")));
@property (readonly) NSString * _Nullable testNumber __attribute__((swift_name("testNumber")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IReplayDataHandlerLegacySyncPositionData")))
@interface VSPKIReplayDataHandlerLegacySyncPositionData : VSPKBase
- (instancetype)initWithPointWithOffset:(VSPKPointWithOffset *)pointWithOffset isValidSyncRotation:(BOOL)isValidSyncRotation delayedAngle:(float)delayedAngle __attribute__((swift_name("init(pointWithOffset:isValidSyncRotation:delayedAngle:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("USE SyncPosition")));
- (VSPKPointWithOffset *)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (VSPKIReplayDataHandlerLegacySyncPositionData *)doCopyPointWithOffset:(VSPKPointWithOffset *)pointWithOffset isValidSyncRotation:(BOOL)isValidSyncRotation delayedAngle:(float)delayedAngle __attribute__((swift_name("doCopy(pointWithOffset:isValidSyncRotation:delayedAngle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (VSPKIReplayDataHandlerSyncPositionData *)toSyncPositionData __attribute__((swift_name("toSyncPositionData()")));
@property (readonly) float delayedAngle __attribute__((swift_name("delayedAngle")));
@property (readonly) BOOL isValidSyncRotation __attribute__((swift_name("isValidSyncRotation")));
@property (readonly) VSPKPointWithOffset *pointWithOffset __attribute__((swift_name("pointWithOffset")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IReplayDataHandlerRadiusSyncPositionData")))
@interface VSPKIReplayDataHandlerRadiusSyncPositionData : VSPKBase
- (instancetype)initWithPosition:(VSPKPointF *)position radius:(float)radius __attribute__((swift_name("init(position:radius:)"))) __attribute__((objc_designated_initializer));
- (VSPKPointF *)component1 __attribute__((swift_name("component1()")));
- (float)component2 __attribute__((swift_name("component2()")));
- (VSPKIReplayDataHandlerRadiusSyncPositionData *)doCopyPosition:(VSPKPointF *)position radius:(float)radius __attribute__((swift_name("doCopy(position:radius:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) float radius __attribute__((swift_name("radius")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IReplayDataHandlerSyncPositionData")))
@interface VSPKIReplayDataHandlerSyncPositionData : VSPKBase
- (instancetype)initWithPosition:(VSPKPointF *)position angle:(float)angle syncPosition:(BOOL)syncPosition syncAngle:(BOOL)syncAngle uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("init(position:angle:syncPosition:syncAngle:uncertainAngle:)"))) __attribute__((objc_designated_initializer));
- (VSPKPointF *)component1 __attribute__((swift_name("component1()")));
- (float)component2 __attribute__((swift_name("component2()")));
- (BOOL)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (BOOL)component5 __attribute__((swift_name("component5()")));
- (VSPKIReplayDataHandlerSyncPositionData *)doCopyPosition:(VSPKPointF *)position angle:(float)angle syncPosition:(BOOL)syncPosition syncAngle:(BOOL)syncAngle uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("doCopy(position:angle:syncPosition:syncAngle:uncertainAngle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float angle __attribute__((swift_name("angle")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) BOOL syncAngle __attribute__((swift_name("syncAngle")));
@property (readonly) BOOL syncPosition __attribute__((swift_name("syncPosition")));
@property (readonly) BOOL uncertainAngle __attribute__((swift_name("uncertainAngle")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataHandler")))
@interface VSPKReplayDataHandler : VSPKBase <VSPKIReplayDataHandler>
- (instancetype)initWithInteractor:(id<VSPKIQPSReplayInteractor>)interactor config:(VSPKIReplayDataHandlerIReplayConfig *)config systemType:(VSPKIQPSSystemType *)systemType userSettings:(id<VSPKIQPSUserSettings> _Nullable)userSettings qpsValues:(VSPKGlobalQPSValues *)qpsValues mapInformation:(id<VSPKIQPSMapInformation> _Nullable)mapInformation versionOfVPS:(NSString *)versionOfVPS replayDataVersion:(VSPKReplayDataVersion *)replayDataVersion __attribute__((swift_name("init(interactor:config:systemType:userSettings:qpsValues:mapInformation:versionOfVPS:replayDataVersion:)"))) __attribute__((objc_designated_initializer));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp rescuePositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)rescuePositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:rescuePositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSArray<VSPKRawSensorData *> *)getSensorDataDataType:(VSPKRawSensorDataSensorDataType *)dataType __attribute__((swift_name("getSensorData(dataType:)")));
- (VSPKStartPosition *)getStartPosition __attribute__((swift_name("getStartPosition()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayDataDataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes dataVersion:(VSPKReplayDataVersion *)dataVersion __attribute__((swift_name("loadReplayData(dataTypes:dataVersion:)")));
- (void)setStartPositionTimestamp:(VSPKLong * _Nullable)timestamp startPos:(VSPKPointF * _Nullable)startPos startAngle:(VSPKDouble * _Nullable)startAngle uncertainAngle:(VSPKBoolean * _Nullable)uncertainAngle __attribute__((swift_name("setStartPosition(timestamp:startPos:startAngle:uncertainAngle:)")));
- (void)startRecording __attribute__((swift_name("startRecording()")));
- (void)stopRecording __attribute__((swift_name("stopRecording()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SensorRecorder")))
@interface VSPKSensorRecorder : VSPKBase <VSPKObserver>
- (instancetype)initWithSensors:(NSSet<id> *)sensors additionalSensors:(id)additionalSensors recordDataHelper:(id<VSPKIReplayDataHandler>)recordDataHelper __attribute__((swift_name("init(sensors:additionalSensors:recordDataHelper:)"))) __attribute__((objc_designated_initializer));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@end;

__attribute__((swift_name("IReplayData")))
@protocol VSPKIReplayData
@required
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuggedSyncReplayDataV5")))
@interface VSPKBuggedSyncReplayDataV5 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKBuggedSyncReplayDataV5Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKBuggedSyncReplayDataV5 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BuggedSyncReplayDataV5.Companion")))
@interface VSPKBuggedSyncReplayDataV5Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKBuggedSyncReplayDataV5Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV2")))
@interface VSPKReplayDataV2 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV2Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV2 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV2.Companion")))
@interface VSPKReplayDataV2Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV2Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV3")))
@interface VSPKReplayDataV3 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV3Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV3 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV3.Companion")))
@interface VSPKReplayDataV3Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV3Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV4")))
@interface VSPKReplayDataV4 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV4Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV4 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV4.Companion")))
@interface VSPKReplayDataV4Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV4Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV5")))
@interface VSPKReplayDataV5 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV5Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV5 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV5.Companion")))
@interface VSPKReplayDataV5Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV5Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV6")))
@interface VSPKReplayDataV6 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV6Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV6 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV6.Companion")))
@interface VSPKReplayDataV6Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV6Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV7")))
@interface VSPKReplayDataV7 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV7Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV7 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV7.Companion")))
@interface VSPKReplayDataV7Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV7Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV8")))
@interface VSPKReplayDataV8 : VSPKBase <VSPKIReplayData>
- (instancetype)initWithQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("init(qpsValues:versionOfVPS:systemType:ecsuValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplayDataV8Companion *companion __attribute__((swift_name("companion")));
- (void)addPathUpdateTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("addPathUpdate(timestamp:path:)")));
- (void)addRadiusSyncPositionTimestamp:(int64_t)timestamp radiusSyncPositionData:(VSPKIReplayDataHandlerRadiusSyncPositionData *)radiusSyncPositionData __attribute__((swift_name("addRadiusSyncPosition(timestamp:radiusSyncPositionData:)")));
- (void)addSensorDataData:(VSPKRawSensorData *)data __attribute__((swift_name("addSensorData(data:)")));
- (void)addSyncPositionTimestamp:(int64_t)timestamp syncPositionData:(VSPKIReplayDataHandlerSyncPositionData *)syncPositionData __attribute__((swift_name("addSyncPosition(timestamp:syncPositionData:)")));
- (void)addTickDataNavBundle:(VSPKNavBundle *)navBundle currentTime:(int64_t)currentTime azimuth:(double)azimuth magnitude:(double)magnitude qPositions:(NSArray<VSPKQPosition *> *)qPositions __attribute__((swift_name("addTickData(navBundle:currentTime:azimuth:magnitude:qPositions:)")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (NSString *)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplayDataV8 *)doCopyQpsValues:(NSString *)qpsValues versionOfVPS:(NSString *)versionOfVPS systemType:(NSString *)systemType ecsuValue:(VSPKDouble * _Nullable)ecsuValue __attribute__((swift_name("doCopy(qpsValues:versionOfVPS:systemType:ecsuValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSArray<VSPKRawSensorData *> *)loadReplayJsonData:(NSMutableArray<id> *)jsonData dataTypes:(NSArray<VSPKRawSensorDataSensorDataType *> *)dataTypes __attribute__((swift_name("loadReplay(jsonData:dataTypes:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable ecsuValue __attribute__((swift_name("ecsuValue")));
@property (readonly) NSString *qpsValues __attribute__((swift_name("qpsValues")));
@property VSPKStartPosition *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) NSString *systemType __attribute__((swift_name("systemType")));
@property (readonly) NSString *versionOfVPS __attribute__((swift_name("versionOfVPS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataV8.Companion")))
@interface VSPKReplayDataV8Companion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplayDataV8Companion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LegacySyncPosition")))
@interface VSPKLegacySyncPosition : VSPKBase
- (instancetype)initWithTimestamp:(int64_t)timestamp position:(VSPKKotlinPair<VSPKPointF *, VSPKPointF *> *)position isValidSyncRotation:(BOOL)isValidSyncRotation delayAngle:(float)delayAngle __attribute__((swift_name("init(timestamp:position:isValidSyncRotation:delayAngle:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("USE SyncPosition")));
@property (class, readonly, getter=companion) VSPKLegacySyncPositionCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (VSPKKotlinPair<VSPKPointF *, VSPKPointF *> *)component2 __attribute__((swift_name("component2()")));
- (BOOL)component3 __attribute__((swift_name("component3()")));
- (float)component4 __attribute__((swift_name("component4()")));
- (VSPKLegacySyncPosition *)doCopyTimestamp:(int64_t)timestamp position:(VSPKKotlinPair<VSPKPointF *, VSPKPointF *> *)position isValidSyncRotation:(BOOL)isValidSyncRotation delayAngle:(float)delayAngle __attribute__((swift_name("doCopy(timestamp:position:isValidSyncRotation:delayAngle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float delayAngle __attribute__((swift_name("delayAngle")));
@property (readonly) BOOL isValidSyncRotation __attribute__((swift_name("isValidSyncRotation")));
@property (readonly) VSPKKotlinPair<VSPKPointF *, VSPKPointF *> *position __attribute__((swift_name("position")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LegacySyncPosition.Companion")))
@interface VSPKLegacySyncPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKLegacySyncPositionCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PathUpdate")))
@interface VSPKPathUpdate : VSPKBase
- (instancetype)initWithTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("init(timestamp:path:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKPathUpdateCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (NSArray<VSPKPointF *> *)component2 __attribute__((swift_name("component2()")));
- (VSPKPathUpdate *)doCopyTimestamp:(int64_t)timestamp path:(NSArray<VSPKPointF *> *)path __attribute__((swift_name("doCopy(timestamp:path:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<VSPKPointF *> *path __attribute__((swift_name("path")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PathUpdate.Companion")))
@interface VSPKPathUpdateCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPathUpdateCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RadiusSyncPosition")))
@interface VSPKRadiusSyncPosition : VSPKBase
- (instancetype)initWithTimestamp:(int64_t)timestamp position:(VSPKPointF *)position radius:(float)radius __attribute__((swift_name("init(timestamp:position:radius:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKRadiusSyncPositionCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (VSPKPointF *)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (VSPKRadiusSyncPosition *)doCopyTimestamp:(int64_t)timestamp position:(VSPKPointF *)position radius:(float)radius __attribute__((swift_name("doCopy(timestamp:position:radius:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) float radius __attribute__((swift_name("radius")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RadiusSyncPosition.Companion")))
@interface VSPKRadiusSyncPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRadiusSyncPositionCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplayDataVersion")))
@interface VSPKReplayDataVersion : VSPKKotlinEnum<VSPKReplayDataVersion *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKReplayDataVersion *v1 __attribute__((swift_name("v1")));
@property (class, readonly) VSPKReplayDataVersion *v2 __attribute__((swift_name("v2")));
@property (class, readonly) VSPKReplayDataVersion *v3 __attribute__((swift_name("v3")));
@property (class, readonly) VSPKReplayDataVersion *v4 __attribute__((swift_name("v4")));
@property (class, readonly) VSPKReplayDataVersion *v5 __attribute__((swift_name("v5")));
@property (class, readonly) VSPKReplayDataVersion *v6 __attribute__((swift_name("v6")));
@property (class, readonly) VSPKReplayDataVersion *v5bug __attribute__((swift_name("v5bug")));
@property (class, readonly) VSPKReplayDataVersion *v7 __attribute__((swift_name("v7")));
@property (class, readonly) VSPKReplayDataVersion *v8 __attribute__((swift_name("v8")));
+ (VSPKKotlinArray<VSPKReplayDataVersion *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplaySensorData")))
@interface VSPKReplaySensorData : VSPKBase
- (instancetype)initWithSensorTimestamp:(int64_t)sensorTimestamp systemTimestamp:(int64_t)systemTimestamp values:(VSPKKotlinFloatArray *)values sensorAccuracy:(VSPKFloat * _Nullable)sensorAccuracy __attribute__((swift_name("init(sensorTimestamp:systemTimestamp:values:sensorAccuracy:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKReplaySensorDataCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKKotlinFloatArray *)component3 __attribute__((swift_name("component3()")));
- (VSPKFloat * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKReplaySensorData *)doCopySensorTimestamp:(int64_t)sensorTimestamp systemTimestamp:(int64_t)systemTimestamp values:(VSPKKotlinFloatArray *)values sensorAccuracy:(VSPKFloat * _Nullable)sensorAccuracy __attribute__((swift_name("doCopy(sensorTimestamp:systemTimestamp:values:sensorAccuracy:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKFloat * _Nullable sensorAccuracy __attribute__((swift_name("sensorAccuracy")));
@property (readonly) int64_t sensorTimestamp __attribute__((swift_name("sensorTimestamp")));
@property (readonly) int64_t systemTimestamp __attribute__((swift_name("systemTimestamp")));
@property (readonly) VSPKKotlinFloatArray *values __attribute__((swift_name("values")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReplaySensorData.Companion")))
@interface VSPKReplaySensorDataCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKReplaySensorDataCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartPosition")))
@interface VSPKStartPosition : VSPKBase
- (instancetype)initWithTimestamp:(VSPKLong * _Nullable)timestamp position:(VSPKPointF * _Nullable)position angle:(VSPKDouble * _Nullable)angle uncertainAngle:(VSPKBoolean * _Nullable)uncertainAngle __attribute__((swift_name("init(timestamp:position:angle:uncertainAngle:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKStartPositionCompanion *companion __attribute__((swift_name("companion")));
- (VSPKLong * _Nullable)component1 __attribute__((swift_name("component1()")));
- (VSPKPointF * _Nullable)component2 __attribute__((swift_name("component2()")));
- (VSPKDouble * _Nullable)component3 __attribute__((swift_name("component3()")));
- (VSPKBoolean * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKStartPosition *)doCopyTimestamp:(VSPKLong * _Nullable)timestamp position:(VSPKPointF * _Nullable)position angle:(VSPKDouble * _Nullable)angle uncertainAngle:(VSPKBoolean * _Nullable)uncertainAngle __attribute__((swift_name("doCopy(timestamp:position:angle:uncertainAngle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKDouble * _Nullable angle __attribute__((swift_name("angle")));
@property (readonly) VSPKPointF * _Nullable position __attribute__((swift_name("position")));
@property (readonly) VSPKLong * _Nullable timestamp __attribute__((swift_name("timestamp")));
@property (readonly) VSPKBoolean * _Nullable uncertainAngle __attribute__((swift_name("uncertainAngle")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StartPosition.Companion")))
@interface VSPKStartPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKStartPositionCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SyncPosition")))
@interface VSPKSyncPosition : VSPKBase
- (instancetype)initWithTimestamp:(int64_t)timestamp position:(VSPKPointF *)position angle:(float)angle syncPosition:(BOOL)syncPosition syncAngle:(BOOL)syncAngle uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("init(timestamp:position:angle:syncPosition:syncAngle:uncertainAngle:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSyncPositionCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (VSPKPointF *)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (BOOL)component4 __attribute__((swift_name("component4()")));
- (BOOL)component5 __attribute__((swift_name("component5()")));
- (BOOL)component6 __attribute__((swift_name("component6()")));
- (VSPKSyncPosition *)doCopyTimestamp:(int64_t)timestamp position:(VSPKPointF *)position angle:(float)angle syncPosition:(BOOL)syncPosition syncAngle:(BOOL)syncAngle uncertainAngle:(BOOL)uncertainAngle __attribute__((swift_name("doCopy(timestamp:position:angle:syncPosition:syncAngle:uncertainAngle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float angle __attribute__((swift_name("angle")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) BOOL syncAngle __attribute__((swift_name("syncAngle")));
@property (readonly) BOOL syncPosition __attribute__((swift_name("syncPosition")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) BOOL uncertainAngle __attribute__((swift_name("uncertainAngle")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SyncPosition.Companion")))
@interface VSPKSyncPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSyncPositionCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Tick")))
@interface VSPKTick : VSPKBase
- (instancetype)initWithCurrentTime:(int64_t)currentTime stableDirection:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)stableDirection centerPoint:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> * _Nullable)centerPoint radius:(double)radius qPosition:(NSArray<VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *> *)qPosition __attribute__((swift_name("init(currentTime:stableDirection:centerPoint:radius:qPosition:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTickCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)component2 __attribute__((swift_name("component2()")));
- (VSPKKotlinPair<VSPKDouble *, VSPKDouble *> * _Nullable)component3 __attribute__((swift_name("component3()")));
- (double)component4 __attribute__((swift_name("component4()")));
- (NSArray<VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *> *)component5 __attribute__((swift_name("component5()")));
- (VSPKTick *)doCopyCurrentTime:(int64_t)currentTime stableDirection:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)stableDirection centerPoint:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> * _Nullable)centerPoint radius:(double)radius qPosition:(NSArray<VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *> *)qPosition __attribute__((swift_name("doCopy(currentTime:stableDirection:centerPoint:radius:qPosition:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKKotlinPair<VSPKDouble *, VSPKDouble *> * _Nullable centerPoint __attribute__((swift_name("centerPoint")));
@property (readonly) int64_t currentTime __attribute__((swift_name("currentTime")));
@property (readonly) NSArray<VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *> *qPosition __attribute__((swift_name("qPosition")));
@property (readonly) double radius __attribute__((swift_name("radius")));
@property (readonly) VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *stableDirection __attribute__((swift_name("stableDirection")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Tick.Companion")))
@interface VSPKTickCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTickCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AngularRate")))
@interface VSPKAngularRate : VSPKBase
- (instancetype)initWithFs:(double)fs __attribute__((swift_name("init(fs:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinFloatArray *)calcQ:(VSPKKotlinFloatArray *)q __attribute__((swift_name("calc(q:)")));
- (VSPKKotlinFloatArray *)secondOrderBackwardDerivationQ:(VSPKKotlinFloatArray *)q __attribute__((swift_name("secondOrderBackwardDerivation(q:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContinuousMoveVectorQueue")))
@interface VSPKContinuousMoveVectorQueue : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) VSPKContinuousMoveVectorQueueCompanion *companion __attribute__((swift_name("companion")));
- (void)addVectorList:(NSMutableArray<VSPKTimedMoveVector *> *)vectorList __attribute__((swift_name("add(vectorList:)")));
- (void)addVector:(VSPKTimedMoveVector *)vector __attribute__((swift_name("add(vector:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (VSPKMoveVector *)getByMillisTimeMillis:(int32_t)timeMillis __attribute__((swift_name("getByMillis(timeMillis:)")));
- (VSPKMoveVector *)getByRatioRatio:(double)ratio __attribute__((swift_name("getByRatio(ratio:)")));
- (VSPKMoveVector *)getOne __attribute__((swift_name("getOne()")));
- (VSPKMoveVector *)getTwo __attribute__((swift_name("getTwo()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double duration __attribute__((swift_name("duration")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContinuousMoveVectorQueue.Companion")))
@interface VSPKContinuousMoveVectorQueueCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKContinuousMoveVectorQueueCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) BOOL PRINT_MISC __attribute__((swift_name("PRINT_MISC")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IDNameGenerator")))
@interface VSPKIDNameGenerator : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)iDNameGenerator __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIDNameGenerator *shared __attribute__((swift_name("shared")));
- (NSString *)getIDName __attribute__((swift_name("getIDName()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLParametersFactory")))
@interface VSPKMLParametersFactory : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)mLParametersFactory __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLParametersFactory *shared __attribute__((swift_name("shared")));
- (id<VSPKIQPSMLParameters>)getMLParametersMlAlgorithm:(NSMutableArray<VSPKIQPSPersonalMLAlgorithm *> * _Nullable)mlAlgorithm mlParameterSetter:(VSPKKotlinPair<VSPKIQPSPersonalMLAlgorithm *, NSMutableArray<VSPKPersonalMLData *> *> * _Nullable)mlParameterSetter __attribute__((swift_name("getMLParameters(mlAlgorithm:mlParameterSetter:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MatrixF")))
@interface VSPKMatrixF : VSPKBase
- (instancetype)initWithM:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)m __attribute__((swift_name("init(m:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinFloatArray *)fusedMatrixVecMultiplyAddXTimes:(VSPKKotlinFloatArray *)xTimes xAdd:(VSPKKotlinFloatArray *)xAdd __attribute__((swift_name("fusedMatrixVecMultiplyAdd(xTimes:xAdd:)")));
- (VSPKKotlinFloatArray *)timesX:(VSPKKotlinFloatArray *)x __attribute__((swift_name("times(x:)")));
@end;

__attribute__((swift_name("NNLoader")))
@protocol VSPKNNLoader
@required
- (VSPKNeuralNetwork *)loadNNPath:(NSString *)path __attribute__((swift_name("loadNN(path:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OptimizationUtils")))
@interface VSPKOptimizationUtils : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)optimizationUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKOptimizationUtils *shared __attribute__((swift_name("shared")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)BFGSF:(VSPKDouble *(^)(VSPKKotlinArray<VSPKKotlinDoubleArray *> *))f x0:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)x0 max_iter:(int32_t)max_iter tol:(double)tol __attribute__((swift_name("BFGS(f:x0:max_iter:tol:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)gradientF:(VSPKDouble *(^)(VSPKKotlinArray<VSPKKotlinDoubleArray *> *))f x:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)x h:(double)h __attribute__((swift_name("gradient(f:x:h:)")));
- (double)gssF:(VSPKDouble *(^)(VSPKDouble *))f a:(double)a b:(double)b tol:(double)tol __attribute__((swift_name("gss(f:a:b:tol:)")));
- (VSPKKotlinDoubleArray *)linspaceStart:(double)start end:(double)end size:(int32_t)size __attribute__((swift_name("linspace(start:end:size:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)monteCarloMinimizationF:(VSPKDouble *(^)(VSPKKotlinArray<VSPKKotlinDoubleArray *> *))f x0:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)x0 bounds:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)bounds niter:(int32_t)niter max_iter:(int32_t)max_iter tol:(double)tol __attribute__((swift_name("monteCarloMinimization(f:x0:bounds:niter:max_iter:tol:)")));
- (NSMutableArray<VSPKKotlinDoubleArray *> *)optimalLatinHypercubeNbrSamples:(int32_t)nbrSamples bounds:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)bounds __attribute__((swift_name("optimalLatinHypercube(nbrSamples:bounds:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OptimizationUtilsExperimental")))
@interface VSPKOptimizationUtilsExperimental : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)optimizationUtilsExperimental __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKOptimizationUtilsExperimental *shared __attribute__((swift_name("shared")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)BFGSF:(VSPKDouble *(^)(VSPKKotlinArray<VSPKKotlinDoubleArray *> *))f x0:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)x0 max_iter:(int32_t)max_iter tol:(double)tol __attribute__((swift_name("BFGS(f:x0:max_iter:tol:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)gradientF:(VSPKDouble *(^)(VSPKKotlinArray<VSPKKotlinDoubleArray *> *))f x:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)x h:(double)h __attribute__((swift_name("gradient(f:x:h:)")));
- (double)gssF:(VSPKDouble *(^)(VSPKDouble *))f a:(double)a b:(double)b tol:(double)tol __attribute__((swift_name("gss(f:a:b:tol:)")));
- (VSPKKotlinDoubleArray *)linspaceStart:(double)start end:(double)end size:(int32_t)size __attribute__((swift_name("linspace(start:end:size:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)monteCarloMinimizationF:(VSPKDouble *(^)(VSPKKotlinArray<VSPKKotlinDoubleArray *> *))f x0:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)x0 bounds:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)bounds niter:(int32_t)niter max_iter:(int32_t)max_iter tol:(double)tol __attribute__((swift_name("monteCarloMinimization(f:x0:bounds:niter:max_iter:tol:)")));
- (NSMutableArray<VSPKKotlinDoubleArray *> *)optimalLatinHypercubeNbrSamples:(int32_t)nbrSamples bounds:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)bounds __attribute__((swift_name("optimalLatinHypercube(nbrSamples:bounds:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QuaternionUtils")))
@interface VSPKQuaternionUtils : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)quaternionUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQuaternionUtils *shared __attribute__((swift_name("shared")));
- (VSPKKotlinFloatArray *)multiplyQuaternionQ:(VSPKKotlinFloatArray *)q p:(VSPKKotlinFloatArray *)p __attribute__((swift_name("multiplyQuaternion(q:p:)")));
- (VSPKKotlinFloatArray *)quaternionExtractPitchQ:(VSPKKotlinFloatArray *)q __attribute__((swift_name("quaternionExtractPitch(q:)")));
- (VSPKKotlinFloatArray *)quaternionExtractYawQ:(VSPKKotlinFloatArray *)q __attribute__((swift_name("quaternionExtractYaw(q:)")));
- (VSPKKotlinFloatArray *)quaternionInverseQ:(VSPKKotlinFloatArray *)q __attribute__((swift_name("quaternionInverse(q:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SensorDataProvider")))
@interface VSPKSensorDataProvider : VSPKBase <VSPKIQPSReplayInteractor>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString * _Nullable)getDataIdentifier:(NSString *)identifier printMissingFileException:(BOOL)printMissingFileException __attribute__((swift_name("getData(identifier:printMissingFileException:)")));
- (void)postEndDataData:(NSString *)data identifier:(NSString *)identifier __attribute__((swift_name("postEndData(data:identifier:)")));
- (void)postPartialDataData:(NSString *)data identifier:(NSString *)identifier __attribute__((swift_name("postPartialData(data:identifier:)")));
@property (readonly) int64_t maxRecordingTimePerPartInMillis __attribute__((swift_name("maxRecordingTimePerPartInMillis")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VectorUtils")))
@interface VSPKVectorUtils : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)vectorUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKVectorUtils *shared __attribute__((swift_name("shared")));
- (double)L2DistanceV1:(VSPKKotlinDoubleArray *)v1 v2:(VSPKKotlinDoubleArray *)v2 __attribute__((swift_name("L2Distance(v1:v2:)")));
- (float)angleBetweenVectorsV1:(VSPKKotlinFloatArray *)v1 v2:(VSPKKotlinFloatArray *)v2 __attribute__((swift_name("angleBetweenVectors(v1:v2:)")));
- (float)calculateDifferenceRatioBetweenVectorsDifferenceVector:(VSPKKotlinFloatArray * _Nullable)differenceVector movementSumVector:(VSPKKotlinFloatArray *)movementSumVector __attribute__((swift_name("calculateDifferenceRatioBetweenVectors(differenceVector:movementSumVector:)")));
- (VSPKKotlinFloatArray *)createFloatVectorFromVectorVector:(VSPKVector *)vector __attribute__((swift_name("createFloatVectorFromVector(vector:)")));
- (VSPKKotlinFloatArray * _Nullable)createVectorFromPointsPointTo:(VSPKPointF * _Nullable)pointTo pointFrom:(VSPKPointF * _Nullable)pointFrom __attribute__((swift_name("createVectorFromPoints(pointTo:pointFrom:)")));
- (VSPKKotlinFloatArray *)crossProductV1:(VSPKKotlinFloatArray *)v1 v2:(VSPKKotlinFloatArray *)v2 normed:(BOOL)normed __attribute__((swift_name("crossProduct(v1:v2:normed:)")));
- (double)degreesToRadiansAngDeg:(double)angDeg __attribute__((swift_name("degreesToRadians(angDeg:)")));
- (float)degreesToRadiansAngDeg_:(float)angDeg __attribute__((swift_name("degreesToRadians(angDeg_:)")));
- (float)distanceBetweenPointsP1:(VSPKPointF *)p1 p2:(VSPKPointF *)p2 __attribute__((swift_name("distanceBetweenPoints(p1:p2:)")));
- (float)dotProductV1:(VSPKKotlinFloatArray *)v1 v2:(VSPKKotlinFloatArray *)v2 __attribute__((swift_name("dotProduct(v1:v2:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)generalMatrixMultiplicationMatrix1:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix1 matrix2:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix2 __attribute__((swift_name("generalMatrixMultiplication(matrix1:matrix2:)")));
- (VSPKKotlinFloatArray *)getProjectionOnPlaneVector:(VSPKKotlinFloatArray *)vector normal:(VSPKKotlinFloatArray *)normal __attribute__((swift_name("getProjectionOnPlane(vector:normal:)")));
- (void)getRotationMatrixFromVectorR:(VSPKKotlinFloatArray *)R rotationVector:(VSPKKotlinFloatArray *)rotationVector __attribute__((swift_name("getRotationMatrixFromVector(R:rotationVector:)")));
- (VSPKKotlinFloatArray *)gramSchmidtV1:(VSPKKotlinFloatArray *)v1 v2:(VSPKKotlinFloatArray *)v2 __attribute__((swift_name("gramSchmidt(v1:v2:)")));
- (NSMutableArray<VSPKKotlinFloatArray *> *)integrateVector:(NSMutableArray<VSPKKotlinFloatArray *> *)vector timeStamps:(VSPKKotlinArray<VSPKLong *> *)timeStamps __attribute__((swift_name("integrate(vector:timeStamps:)")));
- (NSMutableArray<VSPKFloat *> *)integrateVector:(NSArray<VSPKFloat *> *)vector timeStamps_:(NSArray<VSPKLong *> *)timeStamps __attribute__((swift_name("integrate(vector:timeStamps_:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrixAdditionMatrix1:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix1 matrix2:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix2 __attribute__((swift_name("matrixAddition(matrix1:matrix2:)")));
- (VSPKKotlinArray<VSPKKotlinFloatArray *> *)matrixFromLongArrayArray:(VSPKKotlinFloatArray *)array __attribute__((swift_name("matrixFromLongArray(array:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrixTransposeMatrix:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix __attribute__((swift_name("matrixTranspose(matrix:)")));
- (VSPKKotlinFloatArray *)minusV1:(VSPKKotlinFloatArray *)v1 v2:(VSPKKotlinFloatArray *)v2 __attribute__((swift_name("minus(v1:v2:)")));
- (VSPKKotlinFloatArray *)multiplyMV2Matrix:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)matrix vector:(VSPKKotlinFloatArray *)vector __attribute__((swift_name("multiplyMV2(matrix:vector:)")));
- (VSPKKotlinFloatArray *)multiplyWithScalarVector:(VSPKKotlinFloatArray *)vector scalar:(float)scalar __attribute__((swift_name("multiplyWithScalar(vector:scalar:)")));
- (VSPKKotlinFloatArray *)normalizeVectorV:(VSPKKotlinFloatArray *)v __attribute__((swift_name("normalizeVector(v:)")));
- (double)radiansToDegreesAngRad:(double)angRad __attribute__((swift_name("radiansToDegrees(angRad:)")));
- (float)radiansToDegreesAngRad_:(float)angRad __attribute__((swift_name("radiansToDegrees(angRad_:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)scalarDoubleAdditionMatrix:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix a:(double)a __attribute__((swift_name("scalarDoubleAddition(matrix:a:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)scalarDoubleMultiplicationMatrix:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)matrix a:(double)a __attribute__((swift_name("scalarDoubleMultiplication(matrix:a:)")));
- (VSPKKotlinFloatArray *)vectorAbsVector:(VSPKKotlinFloatArray *)vector __attribute__((swift_name("vectorAbs(vector:)")));
- (VSPKKotlinFloatArray *)vectorAdditionVector1:(VSPKKotlinFloatArray *)vector1 vector2:(VSPKKotlinFloatArray *)vector2 __attribute__((swift_name("vectorAddition(vector1:vector2:)")));
- (NSMutableArray<VSPKFloat *> *)vectorAdditionVector1:(NSMutableArray<VSPKFloat *> *)vector1 vector2_:(NSMutableArray<VSPKFloat *> *)vector2 __attribute__((swift_name("vectorAddition(vector1:vector2_:)")));
- (float)vectorMagnitudeV:(VSPKKotlinFloatArray *)v __attribute__((swift_name("vectorMagnitude(v:)")));
- (float)vectorMagnitudeV_:(NSMutableArray<VSPKFloat *> *)v __attribute__((swift_name("vectorMagnitude(v_:)")));
- (NSMutableArray<VSPKFloat *> *)vectorSubtractionVector1:(VSPKKotlinArray<VSPKFloat *> *)vector1 vector2:(NSMutableArray<VSPKFloat *> *)vector2 __attribute__((swift_name("vectorSubtraction(vector1:vector2:)")));
- (VSPKKotlinFloatArray *)vectorSubtractionVector1:(VSPKKotlinFloatArray *)vector1 vector2_:(VSPKKotlinFloatArray *)vector2 __attribute__((swift_name("vectorSubtraction(vector1:vector2_:)")));
- (NSMutableArray<VSPKFloat *> *)vectorSubtractionVector1:(NSMutableArray<VSPKFloat *> *)vector1 vector2__:(NSMutableArray<VSPKFloat *> *)vector2 __attribute__((swift_name("vectorSubtraction(vector1:vector2__:)")));
- (double)L2Norm:(VSPKKotlinDoubleArray *)receiver __attribute__((swift_name("L2Norm(_:)")));
- (VSPKKotlinDoubleArray *)abs:(VSPKKotlinDoubleArray *)receiver __attribute__((swift_name("abs(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Clock")))
@interface VSPKClock : VSPKBase <VSPKObserver>
- (instancetype)initWithRotationSensor:(VSPKRawSensor *)rotationSensor listeners:(id _Nullable)listeners mode:(VSPKClockClockType *)mode __attribute__((swift_name("init(rotationSensor:listeners:mode:)"))) __attribute__((objc_designated_initializer));
- (void)addListenerListener:(id<VSPKClockListener>)listener __attribute__((swift_name("addListener(listener:)")));
- (void)addListenersListeners:(id)listeners __attribute__((swift_name("addListeners(listeners:)")));
- (void)stop __attribute__((swift_name("stop()")));
- (void)updateObservable:(VSPKObservable *)observable arg:(id)arg __attribute__((swift_name("update(observable:arg:)")));
@property (readonly) NSMutableArray<id<VSPKClockListener>> *listeners __attribute__((swift_name("listeners")));
@property (readonly) VSPKClockClockType *mode __attribute__((swift_name("mode")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Clock.ClockType")))
@interface VSPKClockClockType : VSPKKotlinEnum<VSPKClockClockType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKClockClockType *internalClock __attribute__((swift_name("internalClock")));
@property (class, readonly) VSPKClockClockType *sensorClock __attribute__((swift_name("sensorClock")));
+ (VSPKKotlinArray<VSPKClockClockType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AverageVariance")))
@interface VSPKAverageVariance : VSPKBase
- (instancetype)initWithN:(int32_t)N __attribute__((swift_name("init(N:)"))) __attribute__((objc_designated_initializer));
- (VSPKAverageVarianceDoublePack *)calculateData:(double)data __attribute__((swift_name("calculate(data:)")));
- (VSPKAverageVarianceFloatPack *)calculateData_:(float)data __attribute__((swift_name("calculate(data_:)")));
- (double)max __attribute__((swift_name("max()")));
- (double)min __attribute__((swift_name("min()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AverageVariance.DoublePack")))
@interface VSPKAverageVarianceDoublePack : VSPKBase
- (instancetype)initWithAverage:(double)average variance:(double)variance totalVariation:(double)totalVariation __attribute__((swift_name("init(average:variance:totalVariation:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKAverageVarianceDoublePack *)doCopyAverage:(double)average variance:(double)variance totalVariation:(double)totalVariation __attribute__((swift_name("doCopy(average:variance:totalVariation:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double average __attribute__((swift_name("average")));
@property (readonly) double totalVariation __attribute__((swift_name("totalVariation")));
@property (readonly) double variance __attribute__((swift_name("variance")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AverageVariance.FloatPack")))
@interface VSPKAverageVarianceFloatPack : VSPKBase
- (instancetype)initWithAverage:(float)average variance:(float)variance totalVariation:(float)totalVariation __attribute__((swift_name("init(average:variance:totalVariation:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()")));
- (float)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (VSPKAverageVarianceFloatPack *)doCopyAverage:(float)average variance:(float)variance totalVariation:(float)totalVariation __attribute__((swift_name("doCopy(average:variance:totalVariation:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float average __attribute__((swift_name("average")));
@property (readonly) float totalVariation __attribute__((swift_name("totalVariation")));
@property (readonly) float variance __attribute__((swift_name("variance")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RollingAverage")))
@interface VSPKRollingAverage : VSPKBase
- (instancetype)initWithN:(int32_t)N __attribute__((swift_name("init(N:)"))) __attribute__((objc_designated_initializer));
- (double)calculateData:(double)data __attribute__((swift_name("calculate(data:)")));
- (float)calculateData_:(float)data __attribute__((swift_name("calculate(data_:)")));
@end;

__attribute__((swift_name("ModifierManager")))
@interface VSPKModifierManager<T> : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addModifierData:(T _Nullable)data identifier:(id)identifier __attribute__((swift_name("addModifier(data:identifier:)")));
@property (readonly) T _Nullable modifier __attribute__((swift_name("modifier")));
@property (readonly) NSMutableArray<VSPKKotlinPair<T, id> *> *pairList __attribute__((swift_name("pairList")));
@end;

__attribute__((swift_name("NumericalModifier")))
@interface VSPKNumericalModifier<T> : VSPKModifierManager<T>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (T _Nullable)calcModifier __attribute__((swift_name("calcModifier()")));
@property (readonly) T _Nullable modifier __attribute__((swift_name("modifier")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AdditiveModifier")))
@interface VSPKAdditiveModifier : VSPKNumericalModifier<VSPKDouble *>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKDouble *)calcModifier __attribute__((swift_name("calcModifier()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiplicativeModifier")))
@interface VSPKMultiplicativeModifier : VSPKNumericalModifier<VSPKDouble *>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKDouble *)calcModifier __attribute__((swift_name("calcModifier()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OffsetHelper")))
@interface VSPKOffsetHelper : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)offsetHelper __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKOffsetHelper *shared __attribute__((swift_name("shared")));
- (NSMutableArray<VSPKVector *> *)generateDirectionVectorsOffset:(double)offset num:(int32_t)num __attribute__((swift_name("generateDirectionVectors(offset:num:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Spack")))
@interface VSPKSpack : VSPKBase
- (instancetype)initWithRawAcc:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rawAcc rawGrav:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rawGrav rawRot:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rawRot gravityProjectedData:(VSPKKotlinArray<VSPKFloat *> *)gravityProjectedData planarData:(VSPKKotlinArray<VSPKFloat *> *)planarData timestamps:(VSPKKotlinArray<VSPKLong *> *)timestamps fs:(double)fs lpOliveberg:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)lpOliveberg rwAcc:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rwAcc __attribute__((swift_name("init(rawAcc:rawGrav:rawRot:gravityProjectedData:planarData:timestamps:fs:lpOliveberg:rwAcc:)"))) __attribute__((objc_designated_initializer));
- (BOOL)equalToOtherSpack:(VSPKSpack *)spack __attribute__((swift_name("equalToOther(spack:)")));
@property (readonly) int64_t duration __attribute__((swift_name("duration")));
@property (readonly) double fs __attribute__((swift_name("fs")));
@property (readonly) VSPKKotlinArray<VSPKFloat *> *gravityProjectedData __attribute__((swift_name("gravityProjectedData")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *lpOliveberg __attribute__((swift_name("lpOliveberg")));
@property (readonly) VSPKKotlinArray<VSPKFloat *> *planarData __attribute__((swift_name("planarData")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *rawAcc __attribute__((swift_name("rawAcc")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *rawGrav __attribute__((swift_name("rawGrav")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *rawRot __attribute__((swift_name("rawRot")));
@property (readonly) VSPKKotlinArray<VSPKKotlinFloatArray *> *rwAcc __attribute__((swift_name("rwAcc")));
@property (readonly) VSPKKotlinArray<VSPKLong *> *timestamps __attribute__((swift_name("timestamps")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpackFeaturisationHelpers")))
@interface VSPKSpackFeaturisationHelpers : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)spackFeaturisationHelpers __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSpackFeaturisationHelpers *shared __attribute__((swift_name("shared")));
- (VSPKKotlinArray<VSPKKotlinFloatArray *> *)continuousDirectionDirection:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)direction __attribute__((swift_name("continuousDirection(direction:)")));
- (VSPKKotlinArray<VSPKFloat *> *)continuousDirectionXOnlyDirection:(VSPKKotlinArray<VSPKFloat *> *)direction __attribute__((swift_name("continuousDirectionXOnly(direction:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseAndroidPocketOrSwingSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featuriseAndroidPocketOrSwingSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseAndroidRegularSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featuriseAndroidRegularSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featurisePocketModeEvalSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featurisePocketModeEvalSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featurisePocketOrSwingSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featurisePocketOrSwingSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featurisePocketSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featurisePocketSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseRegularSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featuriseRegularSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSwingAntiSymSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featuriseSwingAntiSymSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSwingSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featuriseSwingSpack(spack:freq:)")));
- (VSPKKotlinArray<VSPKFloat *> *)featuriseSwingSymSpackSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("featuriseSwingSymSpack(spack:freq:)")));
- (NSMutableArray<VSPKKotlinFloatArray *> *)getAccelerationInRealWorldFrameAcceleration:(NSMutableArray<VSPKKotlinFloatArray *> *)acceleration rotation:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rotation __attribute__((swift_name("getAccelerationInRealWorldFrame(acceleration:rotation:)")));
- (VSPKKotlinArray<VSPKKotlinFloatArray *> *)getDirectionRotation:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rotation __attribute__((swift_name("getDirection(rotation:)")));
- (VSPKKotlinArray<VSPKFloat *> *)getDirectionXOnlyRotation:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rotation __attribute__((swift_name("getDirectionXOnly(rotation:)")));
- (VSPKKotlinFloatArray *)getDisplacementSpack:(VSPKSpack *)spack __attribute__((swift_name("getDisplacement(spack:)")));
- (VSPKKotlinFloatArray *)getOlivebergAcc:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)acc rot:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rot __attribute__((swift_name("getOliveberg(acc:rot:)")));
- (float)getStraightComponentAcc:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)acc rot:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rot __attribute__((swift_name("getStraightComponent(acc:rot:)")));
- (float)getStraightComponentAcc:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)acc rot:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)rot axis:(VSPKKotlinFloatArray *)axis __attribute__((swift_name("getStraightComponent(acc:rot:axis:)")));
- (VSPKKotlinDoubleArray *)leastSquarePolynomialCoefficientsX:(VSPKKotlinDoubleArray *)x y:(VSPKKotlinDoubleArray *)y freq:(double)freq d:(int32_t)d __attribute__((swift_name("leastSquarePolynomialCoefficients(x:y:freq:d:)")));
- (void)printAndroidRegularSpackFeaturesSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("printAndroidRegularSpackFeatures(spack:freq:)")));
- (void)printPocketSpackFeaturesSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("printPocketSpackFeatures(spack:freq:)")));
- (void)printRegularSpackFeaturesSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("printRegularSpackFeatures(spack:freq:)")));
- (void)printSwingAntiSymSpackFeaturesSpack:(VSPKSpack *)spack freq:(double)freq __attribute__((swift_name("printSwingAntiSymSpackFeatures(spack:freq:)")));
- (NSMutableArray<VSPKKotlinFloatArray *> *)rotateToStraightVectors:(NSMutableArray<VSPKKotlinFloatArray *> *)vectors angles:(VSPKKotlinArray<VSPKFloat *> *)angles __attribute__((swift_name("rotateToStraight(vectors:angles:)")));
- (NSMutableArray<VSPKKotlinFloatArray *> *)rotateToStraightVectors:(NSMutableArray<VSPKKotlinFloatArray *> *)vectors angles_:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)angles __attribute__((swift_name("rotateToStraight(vectors:angles_:)")));
@end;

__attribute__((swift_name("AdjustmentManager")))
@protocol VSPKAdjustmentManager
@required
- (void)clear __attribute__((swift_name("clear()")));
- (double)getMode:(VSPKIQPSDeviceOrientation *)mode __attribute__((swift_name("get(mode:)")));
- (void)setAdjustment:(double)adjustment mode:(VSPKIQPSDeviceOrientation * _Nullable)mode __attribute__((swift_name("set(adjustment:mode:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("OffsetManager")))
@interface VSPKOffsetManager : VSPKBase <VSPKAdjustmentManager>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clear __attribute__((swift_name("clear()")));
- (double)getMode:(VSPKIQPSDeviceOrientation *)mode __attribute__((swift_name("get(mode:)")));
- (void)setAdjustment:(double)offset mode:(VSPKIQPSDeviceOrientation * _Nullable)mode __attribute__((swift_name("set(adjustment:mode:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpeedManager")))
@interface VSPKSpeedManager : VSPKBase <VSPKAdjustmentManager>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clear __attribute__((swift_name("clear()")));
- (double)getMode:(VSPKIQPSDeviceOrientation *)mode __attribute__((swift_name("get(mode:)")));
- (void)setAdjustment:(double)adjustment mode:(VSPKIQPSDeviceOrientation * _Nullable)mode __attribute__((swift_name("set(adjustment:mode:)")));
- (void)setBoundariesMinValue:(double)minValue maxValue:(double)maxValue __attribute__((swift_name("setBoundaries(minValue:maxValue:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClusterSpawnAlgos")))
@interface VSPKClusterSpawnAlgos : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)clusterSpawnAlgos __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKClusterSpawnAlgos *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("HistoryHandler")))
@interface VSPKHistoryHandler<T> : VSPKBase
- (instancetype)initWithMaxSize:(int32_t)maxSize fillValue:(T _Nullable)fillValue fillTime:(VSPKLong * _Nullable)fillTime __attribute__((swift_name("init(maxSize:fillValue:fillTime:)"))) __attribute__((objc_designated_initializer));
- (void)addDataData:(T _Nullable)data currentTime:(int64_t)currentTime __attribute__((swift_name("addData(data:currentTime:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (T _Nullable)getDelayedValueTime:(int64_t)time reversed:(BOOL)reversed __attribute__((swift_name("getDelayedValue(time:reversed:)")));
- (NSArray<id> *)getHistory __attribute__((swift_name("getHistory()")));
- (T _Nullable)getLatest __attribute__((swift_name("getLatest()")));
- (T _Nullable)getLatestOrNull __attribute__((swift_name("getLatestOrNull()")));
- (NSArray<VSPKLong *> *)getTimestampHistory __attribute__((swift_name("getTimestampHistory()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
@property (readonly) NSMutableArray<VSPKHistoryHandlerTimedData<T, T> *> *innerHistory __attribute__((swift_name("innerHistory")));
@property (readonly) int32_t lastIndex __attribute__((swift_name("lastIndex")));
@property (readonly) int32_t maxSize __attribute__((swift_name("maxSize")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@property (readonly) NSArray<VSPKHistoryHandlerTimedData<T, T> *> *timedHistory __attribute__((swift_name("timedHistory")));
@end;

__attribute__((swift_name("HistoryHandlerTimedData")))
@interface VSPKHistoryHandlerTimedData<T, T_> : VSPKBase
- (instancetype)initWith:(VSPKHistoryHandler<T_> *)receiver data:(T _Nullable)data timestamp:(int64_t)timestamp __attribute__((swift_name("init(_:data:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MedFilter")))
@interface VSPKMedFilter : VSPKBase
- (instancetype)initWithKernel:(int32_t)kernel __attribute__((swift_name("init(kernel:)"))) __attribute__((objc_designated_initializer));
- (float)filterX:(float)x __attribute__((swift_name("filter(x:)")));
@end;

__attribute__((swift_name("RollingFeaturiser")))
@protocol VSPKRollingFeaturiser
@required
- (void)addValuesAcc:(VSPKKotlinFloatArray *)acc grav:(VSPKKotlinFloatArray *)grav rot:(VSPKKotlinFloatArray *)rot currentTime:(int64_t)currentTime __attribute__((swift_name("addValues(acc:grav:rot:currentTime:)")));
- (NSMutableArray<VSPKFloat *> *)getFeatures __attribute__((swift_name("getFeatures()")));
@end;

__attribute__((swift_name("TrolleyRollingFeaturiser")))
@interface VSPKTrolleyRollingFeaturiser : VSPKBase <VSPKRollingFeaturiser>
- (instancetype)initWithSampleFrequency:(int64_t)sampleFrequency dT:(int64_t)dT __attribute__((swift_name("init(sampleFrequency:dT:)"))) __attribute__((objc_designated_initializer));
- (void)addValuesAcc:(VSPKKotlinFloatArray *)acc grav:(VSPKKotlinFloatArray *)grav rot:(VSPKKotlinFloatArray *)rot currentTime:(int64_t)currentTime __attribute__((swift_name("addValues(acc:grav:rot:currentTime:)")));
- (void)calculateFeaturesAcc:(VSPKKotlinFloatArray *)acc grav:(VSPKKotlinFloatArray *)grav rot:(VSPKKotlinFloatArray *)rot gravProj:(float)gravProj currentTime:(int64_t)currentTime __attribute__((swift_name("calculateFeatures(acc:grav:rot:gravProj:currentTime:)")));
- (VSPKSpack *)getSpackDataPackSize:(int64_t)dataPackSize __attribute__((swift_name("getSpack(dataPackSize:)")));
- (void)lowerFeatures __attribute__((swift_name("lowerFeatures()")));
@property (readonly) int32_t N __attribute__((swift_name("N")));
@property (readonly) int64_t dT __attribute__((swift_name("dT")));
@property BOOL featuresReady __attribute__((swift_name("featuresReady")));
@property (readonly) NSMutableArray<VSPKFloat *> *gProjHistory __attribute__((swift_name("gProjHistory")));
@property (readonly) int64_t sampleFrequency __attribute__((swift_name("sampleFrequency")));
@end;

__attribute__((swift_name("Allpass")))
@interface VSPKAllpass : VSPKBase
- (instancetype)initWithOrder:(int32_t)order __attribute__((swift_name("init(order:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithA:(VSPKPolynomial *)A __attribute__((swift_name("init(A:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithK:(VSPKKotlinDoubleArray *)k __attribute__((swift_name("init(k:)"))) __attribute__((objc_designated_initializer));
- (void)constructRationalRepresentation __attribute__((swift_name("constructRationalRepresentation()")));
- (VSPKComplex *)evaluateOmega:(double)omega __attribute__((swift_name("evaluate(omega:)")));
- (float)filterX:(float)x __attribute__((swift_name("filter(x:)")));
- (void)filterX_:(VSPKKotlinFloatArray *)x __attribute__((swift_name("filter(x_:)")));
- (double)groupDelayOmega:(double)Omega __attribute__((swift_name("groupDelay(Omega:)")));
- (void)initialize __attribute__((swift_name("initialize()")));
- (VSPKRational *)rationalRepresentation __attribute__((swift_name("rationalRepresentation()")));
@property VSPKRational * _Nullable T __attribute__((swift_name("T")));
@property VSPKKotlinDoubleArray *k __attribute__((swift_name("k")));
@property int32_t order __attribute__((swift_name("order")));
@property VSPKKotlinDoubleArray *state __attribute__((swift_name("state")));
@end;

__attribute__((swift_name("AnalogPrototype")))
@interface VSPKAnalogPrototype : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) VSPKAnalogPrototypeCompanion *companion __attribute__((swift_name("companion")));
- (void)addSectionR:(VSPKRational *)R __attribute__((swift_name("addSection(R:)")));
- (void)computeTransferFunction __attribute__((swift_name("computeTransferFunction()")));
- (VSPKComplex *)evaluateOmega:(double)omega __attribute__((swift_name("evaluate(omega:)")));
- (VSPKRational *)getSectionIndex:(int32_t)index __attribute__((swift_name("getSection(index:)")));
- (double)groupDelayOmega:(double)omega __attribute__((swift_name("groupDelay(omega:)")));
- (VSPKAnalogPrototype *)lptobpOmega1:(double)omega1 omega2:(double)omega2 __attribute__((swift_name("lptobp(omega1:omega2:)")));
- (VSPKAnalogPrototype *)lptohpOmega0:(double)omega0 __attribute__((swift_name("lptohp(omega0:)")));
- (VSPKAnalogPrototype *)lptolpOmega0:(double)omega0 __attribute__((swift_name("lptolp(omega0:)")));
- (int32_t)nSections __attribute__((swift_name("nSections()")));
@property VSPKRational * _Nullable T __attribute__((swift_name("T")));
@property NSMutableArray<VSPKRational *> *sections __attribute__((swift_name("sections")));
@property (readonly) VSPKRational *transferFunction __attribute__((swift_name("transferFunction")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnalogButterworth")))
@interface VSPKAnalogButterworth : VSPKAnalogPrototype
- (instancetype)initWithOrder:(int32_t)order __attribute__((swift_name("init(order:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnalogChebyshevI")))
@interface VSPKAnalogChebyshevI : VSPKAnalogPrototype
- (instancetype)initWithOrder:(int32_t)order epsilon:(double)epsilon __attribute__((swift_name("init(order:epsilon:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnalogChebyshevII")))
@interface VSPKAnalogChebyshevII : VSPKAnalogPrototype
- (instancetype)initWithOrder:(int32_t)order epsilon:(double)epsilon __attribute__((swift_name("init(order:epsilon:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnalogPrototype.Companion")))
@interface VSPKAnalogPrototypeCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAnalogPrototypeCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("IIRFilter")))
@interface VSPKIIRFilter : VSPKBase
- (instancetype)initWithBaseFilter:(VSPKAnalogPrototype *)baseFilter type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(baseFilter:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer));
- (VSPKComplex *)evaluateOmega:(double)Omega __attribute__((swift_name("evaluate(Omega:)")));
- (float)filterX:(float)x __attribute__((swift_name("filter(x:)")));
- (void)filterX_:(VSPKKotlinFloatArray *)x __attribute__((swift_name("filter(x_:)")));
- (void)filterX:(VSPKKotlinFloatArray *)x y:(VSPKKotlinFloatArray *)y __attribute__((swift_name("filter(x:y:)")));
- (double)groupDelayOmega:(double)Omega __attribute__((swift_name("groupDelay(Omega:)")));
- (void)initialize __attribute__((swift_name("initialize()")));
@property VSPKRational *T __attribute__((swift_name("T")));
@property NSMutableArray<VSPKSecondOrderSection *> *sections __attribute__((swift_name("sections")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Butterworth")))
@interface VSPKButterworth : VSPKIIRFilter
- (instancetype)initWithOrder:(int32_t)order type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(order:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithBaseFilter:(VSPKAnalogPrototype *)baseFilter type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(baseFilter:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChebyshevI")))
@interface VSPKChebyshevI : VSPKIIRFilter
- (instancetype)initWithOrder:(int32_t)order epsilon:(double)epsilon type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(order:epsilon:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithBaseFilter:(VSPKAnalogPrototype *)baseFilter type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(baseFilter:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ChebyshevII")))
@interface VSPKChebyshevII : VSPKIIRFilter
- (instancetype)initWithOrder:(int32_t)order epsilon:(double)epsilon type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(order:epsilon:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithBaseFilter:(VSPKAnalogPrototype *)baseFilter type:(VSPKPassbandType * _Nullable)type f1:(double)f1 f2:(double)f2 delta:(double)delta __attribute__((swift_name("init(baseFilter:type:f1:f2:delta:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Complex")))
@interface VSPKComplex : VSPKBase
- (instancetype)initWithReal:(double)real imag:(double)imag __attribute__((swift_name("init(real:imag:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithReal:(double)real __attribute__((swift_name("init(real:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKComplexCompanion *companion __attribute__((swift_name("companion")));
- (void)divideEqualsA:(double)a __attribute__((swift_name("divideEquals(a:)")));
- (void)divideEqualsC:(VSPKComplex *)c __attribute__((swift_name("divideEquals(c:)")));
- (double)imag __attribute__((swift_name("imag()")));
- (VSPKComplex *)minusA:(double)a __attribute__((swift_name("minus(a:)")));
- (VSPKComplex *)minusC:(VSPKComplex *)c __attribute__((swift_name("minus(c:)")));
- (void)minusEqualsA:(double)a __attribute__((swift_name("minusEquals(a:)")));
- (void)minusEqualsC:(VSPKComplex *)c __attribute__((swift_name("minusEquals(c:)")));
- (VSPKComplex *)overA:(double)a __attribute__((swift_name("over(a:)")));
- (VSPKComplex *)overC:(VSPKComplex *)c __attribute__((swift_name("over(c:)")));
- (VSPKComplex *)plusA:(double)a __attribute__((swift_name("plus(a:)")));
- (VSPKComplex *)plusC:(VSPKComplex *)c __attribute__((swift_name("plus(c:)")));
- (void)plusEqualsA:(double)a __attribute__((swift_name("plusEquals(a:)")));
- (void)plusEqualsC:(VSPKComplex *)c __attribute__((swift_name("plusEquals(c:)")));
- (double)real __attribute__((swift_name("real()")));
- (VSPKComplex *)timesA:(double)a __attribute__((swift_name("times(a:)")));
- (VSPKComplex *)timesC:(VSPKComplex *)c __attribute__((swift_name("times(c:)")));
- (void)timesEqualsA:(double)a __attribute__((swift_name("timesEquals(a:)")));
- (void)timesEqualsC:(VSPKComplex *)c __attribute__((swift_name("timesEquals(c:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Complex.Companion")))
@interface VSPKComplexCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKComplexCompanion *shared __attribute__((swift_name("shared")));
- (VSPKComplex *)ComplexFromPolarR:(double)r phi:(double)phi __attribute__((swift_name("ComplexFromPolar(r:phi:)")));
- (VSPKComplex *)addA:(double)a c:(VSPKComplex *)c __attribute__((swift_name("add(a:c:)")));
- (VSPKComplex *)addC:(VSPKComplex *)c a:(double)a __attribute__((swift_name("add(c:a:)")));
- (VSPKComplex *)addC1:(VSPKComplex *)c1 c2:(VSPKComplex *)c2 __attribute__((swift_name("add(c1:c2:)")));
- (double)cAbsC:(VSPKComplex *)c __attribute__((swift_name("cAbs(c:)")));
- (double)cAngleC:(VSPKComplex *)c __attribute__((swift_name("cAngle(c:)")));
- (VSPKComplex *)cConjugateC:(VSPKComplex *)c __attribute__((swift_name("cConjugate(c:)")));
- (VSPKComplex *)cExpC:(VSPKComplex *)c __attribute__((swift_name("cExp(c:)")));
- (VSPKComplex *)cSqrtC:(VSPKComplex *)c __attribute__((swift_name("cSqrt(c:)")));
- (VSPKComplex *)divideA:(double)a c:(VSPKComplex *)c __attribute__((swift_name("divide(a:c:)")));
- (VSPKComplex *)divideC:(VSPKComplex *)c a:(double)a __attribute__((swift_name("divide(c:a:)")));
- (VSPKComplex *)divideC1:(VSPKComplex *)c1 c2:(VSPKComplex *)c2 __attribute__((swift_name("divide(c1:c2:)")));
- (VSPKComplex *)multiplyA:(double)a c:(VSPKComplex *)c __attribute__((swift_name("multiply(a:c:)")));
- (VSPKComplex *)multiplyC:(VSPKComplex *)c a:(double)a __attribute__((swift_name("multiply(c:a:)")));
- (VSPKComplex *)multiplyC1:(VSPKComplex *)c1 c2:(VSPKComplex *)c2 __attribute__((swift_name("multiply(c1:c2:)")));
- (VSPKComplex *)subtractA:(double)a c:(VSPKComplex *)c __attribute__((swift_name("subtract(a:c:)")));
- (VSPKComplex *)subtractC:(VSPKComplex *)c a:(double)a __attribute__((swift_name("subtract(c:a:)")));
- (VSPKComplex *)subtractC1:(VSPKComplex *)c1 c2:(VSPKComplex *)c2 __attribute__((swift_name("subtract(c1:c2:)")));
- (VSPKComplex *)unaryMinusC:(VSPKComplex *)c __attribute__((swift_name("unaryMinus(c:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataFilterAndroid")))
@interface VSPKDataFilterAndroid : VSPKBase
- (instancetype)initWithCutoff:(double)cutoff fs:(double)fs order:(int32_t)order medKernel:(int32_t)medKernel __attribute__((swift_name("init(cutoff:fs:order:medKernel:)"))) __attribute__((objc_designated_initializer));
- (float)filterX:(float)x __attribute__((swift_name("filter(x:)")));
@property (readonly) double cutoff __attribute__((swift_name("cutoff")));
@property (readonly) double fs __attribute__((swift_name("fs")));
@property (readonly) int32_t medKernel __attribute__((swift_name("medKernel")));
@property (readonly) int32_t order __attribute__((swift_name("order")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LagrangePolynomial")))
@interface VSPKLagrangePolynomial : VSPKBase
- (instancetype)initWithX:(VSPKKotlinDoubleArray *)x y:(VSPKKotlinDoubleArray *)y __attribute__((swift_name("init(x:y:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKLagrangePolynomialCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinDoubleArray *)ChebyshevNodesA:(double)a b:(double)b n:(int32_t)n __attribute__((swift_name("ChebyshevNodes(a:b:n:)")));
- (double)evaluateXp:(double)xp __attribute__((swift_name("evaluate(xp:)")));
- (int32_t)order __attribute__((swift_name("order()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LagrangePolynomial.Companion")))
@interface VSPKLagrangePolynomialCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKLagrangePolynomialCompanion *shared __attribute__((swift_name("shared")));
- (VSPKKotlinDoubleArray *)BarycentricWeightsZ:(VSPKKotlinDoubleArray *)z __attribute__((swift_name("BarycentricWeights(z:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiDimBP")))
@interface VSPKMultiDimBP : VSPKBase
- (instancetype)initWithCutoffLow:(double)cutoffLow cutoffHigh:(double)cutoffHigh fs:(double)fs order:(int32_t)order __attribute__((swift_name("init(cutoffLow:cutoffHigh:fs:order:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinFloatArray *)filterArray:(VSPKKotlinFloatArray *)array __attribute__((swift_name("filter(array:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MultiDimLP")))
@interface VSPKMultiDimLP : VSPKBase
- (instancetype)initWithCutoff:(double)cutoff fs:(double)fs order:(int32_t)order __attribute__((swift_name("init(cutoff:fs:order:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinFloatArray *)filterArray:(VSPKKotlinFloatArray *)array __attribute__((swift_name("filter(array:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PassbandType")))
@interface VSPKPassbandType : VSPKKotlinEnum<VSPKPassbandType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKPassbandType *lowpass __attribute__((swift_name("lowpass")));
@property (class, readonly) VSPKPassbandType *bandpass __attribute__((swift_name("bandpass")));
@property (class, readonly) VSPKPassbandType *highpass __attribute__((swift_name("highpass")));
+ (VSPKKotlinArray<VSPKPassbandType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Polynomial")))
@interface VSPKPolynomial : VSPKBase
- (instancetype)initWithA:(VSPKKotlinDoubleArray *)a __attribute__((swift_name("init(a:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithB:(VSPKPolynomial *)B __attribute__((swift_name("init(B:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithOrder:(int32_t)order __attribute__((swift_name("init(order:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithC:(double)c __attribute__((swift_name("init(c:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinDoubleArray *)coefficients __attribute__((swift_name("coefficients()")));
- (VSPKPolynomial *)derivative __attribute__((swift_name("derivative()")));
- (double)discreteTimeGroupDelayOmega:(double)Omega __attribute__((swift_name("discreteTimeGroupDelay(Omega:)")));
- (double)evaluateX:(double)x __attribute__((swift_name("evaluate(x:)")));
- (VSPKComplex *)evaluateC:(VSPKComplex * _Nullable)c __attribute__((swift_name("evaluate(c:)")));
- (double)groupDelayOmega:(double)omega __attribute__((swift_name("groupDelay(omega:)")));
- (VSPKPolynomial *)minusC:(double)c __attribute__((swift_name("minus(c:)")));
- (VSPKPolynomial *)minusB:(VSPKPolynomial *)B __attribute__((swift_name("minus(B:)")));
- (void)minusEqualsC:(double)c __attribute__((swift_name("minusEquals(c:)")));
- (void)minusEqualsB:(VSPKPolynomial *)B __attribute__((swift_name("minusEquals(B:)")));
- (int32_t)order __attribute__((swift_name("order()")));
- (VSPKPolynomial *)overC:(double)c __attribute__((swift_name("over(c:)")));
- (VSPKRational *)overB:(VSPKPolynomial *)B __attribute__((swift_name("over(B:)")));
- (void)overEqualsC:(double)c __attribute__((swift_name("overEquals(c:)")));
- (VSPKPolynomial *)plusC:(double)c __attribute__((swift_name("plus(c:)")));
- (VSPKPolynomial *)plusB:(VSPKPolynomial *)B __attribute__((swift_name("plus(B:)")));
- (void)plusEqualsC:(double)c __attribute__((swift_name("plusEquals(c:)")));
- (void)plusEqualsB:(VSPKPolynomial *)B __attribute__((swift_name("plusEquals(B:)")));
- (VSPKKotlinDoubleArray *)reflectionCoefficients __attribute__((swift_name("reflectionCoefficients()")));
- (VSPKPolynomial *)timesC:(double)c __attribute__((swift_name("times(c:)")));
- (VSPKPolynomial *)timesB:(VSPKPolynomial *)B __attribute__((swift_name("times(B:)")));
- (void)timesEqualsC:(double)c __attribute__((swift_name("timesEquals(c:)")));
- (void)timesEqualsB:(VSPKPolynomial *)B __attribute__((swift_name("timesEquals(B:)")));
- (void)trim __attribute__((swift_name("trim()")));
@property VSPKKotlinDoubleArray *a __attribute__((swift_name("a")));
@property (getter=order_) int32_t order __attribute__((swift_name("order")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Rational")))
@interface VSPKRational : VSPKBase
- (instancetype)initWithNum:(VSPKKotlinDoubleArray *)num denom:(VSPKKotlinDoubleArray *)denom __attribute__((swift_name("init(num:denom:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithN:(VSPKPolynomial *)N D:(VSPKPolynomial *)D __attribute__((swift_name("init(N:D:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithR:(VSPKRational *)R __attribute__((swift_name("init(R:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithC:(double)c __attribute__((swift_name("init(c:)"))) __attribute__((objc_designated_initializer));
- (double)canonicalForm __attribute__((swift_name("canonicalForm()")));
- (VSPKPolynomial *)denominator __attribute__((swift_name("denominator()")));
- (double)discreteTimeGroupDelayOmega:(double)Omega __attribute__((swift_name("discreteTimeGroupDelay(Omega:)")));
- (double)evaluateX:(double)x __attribute__((swift_name("evaluate(x:)")));
- (VSPKComplex *)evaluateC:(VSPKComplex * _Nullable)c __attribute__((swift_name("evaluate(c:)")));
- (double)groupDelayOmega:(double)omega __attribute__((swift_name("groupDelay(omega:)")));
- (VSPKRational *)mapS:(VSPKRational *)S __attribute__((swift_name("map(S:)")));
- (VSPKPolynomial *)numerator __attribute__((swift_name("numerator()")));
- (VSPKKotlinIntArray *)order __attribute__((swift_name("order()")));
- (double)residuePole:(double)pole __attribute__((swift_name("residue(pole:)")));
- (VSPKComplex *)residuePole_:(VSPKComplex * _Nullable)pole __attribute__((swift_name("residue(pole_:)")));
- (void)timesEqualsA:(double)A __attribute__((swift_name("timesEquals(A:)")));
- (void)timesEqualsP:(VSPKPolynomial *)P __attribute__((swift_name("timesEquals(P:)")));
- (void)timesEqualsR:(VSPKRational *)R __attribute__((swift_name("timesEquals(R:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SecondOrderSection")))
@interface VSPKSecondOrderSection : VSPKBase
- (instancetype)initWithB0:(double)b0 b1:(double)b1 b2:(double)b2 a1:(double)a1 a2:(double)a2 __attribute__((swift_name("init(b0:b1:b2:a1:a2:)"))) __attribute__((objc_designated_initializer));
- (float)filterX:(float)x __attribute__((swift_name("filter(x:)")));
- (void)filterX:(VSPKKotlinFloatArray *)x y:(VSPKKotlinFloatArray *)y __attribute__((swift_name("filter(x:y:)")));
- (void)initialize __attribute__((swift_name("initialize()")));
@property double a1 __attribute__((swift_name("a1")));
@property double a2 __attribute__((swift_name("a2")));
@property double b0 __attribute__((swift_name("b0")));
@property double b1 __attribute__((swift_name("b1")));
@property double b2 __attribute__((swift_name("b2")));
@property double s1 __attribute__((swift_name("s1")));
@property double s2 __attribute__((swift_name("s2")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ThiranAllpass")))
@interface VSPKThiranAllpass : VSPKAllpass
- (instancetype)initWithN:(int32_t)N D:(double)D __attribute__((swift_name("init(N:D:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithOrder:(int32_t)order __attribute__((swift_name("init(order:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithA:(VSPKPolynomial *)A __attribute__((swift_name("init(A:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithK:(VSPKKotlinDoubleArray *)k __attribute__((swift_name("init(k:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugCluster")))
@interface VSPKDebugCluster : VSPKBase
- (instancetype)initWithPositions:(NSMutableArray<VSPKTimedDebugPositions *> *)positions clusterCenter:(NSMutableArray<VSPKTimedDebugPositions *> *)clusterCenter precisionRadius:(NSMutableArray<VSPKTimedDebugRadius *> *)precisionRadius id:(int32_t)id isMain:(BOOL)isMain __attribute__((swift_name("init(positions:clusterCenter:precisionRadius:id:isMain:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDebugClusterCompanion *companion __attribute__((swift_name("companion")));
- (NSMutableArray<VSPKTimedDebugPositions *> *)component1 __attribute__((swift_name("component1()")));
- (NSMutableArray<VSPKTimedDebugPositions *> *)component2 __attribute__((swift_name("component2()")));
- (NSMutableArray<VSPKTimedDebugRadius *> *)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (BOOL)component5 __attribute__((swift_name("component5()")));
- (VSPKDebugCluster *)doCopyPositions:(NSMutableArray<VSPKTimedDebugPositions *> *)positions clusterCenter:(NSMutableArray<VSPKTimedDebugPositions *> *)clusterCenter precisionRadius:(NSMutableArray<VSPKTimedDebugRadius *> *)precisionRadius id:(int32_t)id isMain:(BOOL)isMain __attribute__((swift_name("doCopy(positions:clusterCenter:precisionRadius:id:isMain:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<VSPKTimedDebugPositions *> *clusterCenter __attribute__((swift_name("clusterCenter")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isMain __attribute__((swift_name("isMain")));
@property (readonly) NSMutableArray<VSPKTimedDebugPositions *> *positions __attribute__((swift_name("positions")));
@property (readonly) NSMutableArray<VSPKTimedDebugRadius *> *precisionRadius __attribute__((swift_name("precisionRadius")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugCluster.Companion")))
@interface VSPKDebugClusterCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDebugClusterCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugClusterAngle")))
@interface VSPKDebugClusterAngle : VSPKBase
- (instancetype)initWithCenter:(VSPKPointF * _Nullable)center angle:(double)angle offset:(double)offset __attribute__((swift_name("init(center:angle:offset:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDebugClusterAngleCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPointF * _Nullable)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKDebugClusterAngle *)doCopyCenter:(VSPKPointF * _Nullable)center angle:(double)angle offset:(double)offset __attribute__((swift_name("doCopy(center:angle:offset:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double angle __attribute__((swift_name("angle")));
@property (readonly) VSPKPointF * _Nullable center __attribute__((swift_name("center")));
@property (readonly) double offset __attribute__((swift_name("offset")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugClusterAngle.Companion")))
@interface VSPKDebugClusterAngleCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDebugClusterAngleCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugPosition")))
@interface VSPKDebugPosition : VSPKBase
- (instancetype)initWithPosition:(VSPKPointF *)position age:(int32_t)age speed:(double)speed precisionRadius:(VSPKDouble * _Nullable)precisionRadius __attribute__((swift_name("init(position:age:speed:precisionRadius:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDebugPositionCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPointF *)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKDouble * _Nullable)component4 __attribute__((swift_name("component4()")));
- (VSPKDebugPosition *)doCopyPosition:(VSPKPointF *)position age:(int32_t)age speed:(double)speed precisionRadius:(VSPKDouble * _Nullable)precisionRadius __attribute__((swift_name("doCopy(position:age:speed:precisionRadius:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t age __attribute__((swift_name("age")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) VSPKDouble * _Nullable precisionRadius __attribute__((swift_name("precisionRadius")));
@property (readonly) double speed __attribute__((swift_name("speed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugPosition.Companion")))
@interface VSPKDebugPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDebugPositionCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugPrinter")))
@interface VSPKDebugPrinter : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)debugPrinter __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDebugPrinter *shared __attribute__((swift_name("shared")));
- (NSString *)arrayOfFloatArrayToPythonStringIterableOfFloats:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)iterableOfFloats __attribute__((swift_name("arrayOfFloatArrayToPythonString(iterableOfFloats:)")));
- (void)debugPrintScoreArrayScoreArray:(VSPKKotlinFloatArray *)scoreArray timestamp:(int64_t)timestamp __attribute__((swift_name("debugPrintScoreArray(scoreArray:timestamp:)")));
- (void)debugPrintSpackSpack:(VSPKSpack *)spack __attribute__((swift_name("debugPrintSpack(spack:)")));
- (NSString *)floatArrayToPythonStringIterableOfFloats:(NSArray<VSPKFloat *> *)iterableOfFloats __attribute__((swift_name("floatArrayToPythonString(iterableOfFloats:)")));
- (void)printDebugTAG:(NSString *)TAG output:(float)output shouldPrint:(BOOL)shouldPrint __attribute__((swift_name("printDebug(TAG:output:shouldPrint:)")));
- (void)printDebugTAG:(NSString *)TAG output:(NSString *)output shouldPrint_:(BOOL)shouldPrint __attribute__((swift_name("printDebug(TAG:output:shouldPrint_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugQPositionSpeed")))
@interface VSPKDebugQPositionSpeed : VSPKBase
- (instancetype)initWithCurrentTime:(int64_t)currentTime average:(double)average std:(double)std percentile:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)percentile clusterSize:(int32_t)clusterSize extremas:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)extremas __attribute__((swift_name("init(currentTime:average:std:percentile:clusterSize:extremas:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDebugQPositionSpeedCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)component6 __attribute__((swift_name("component6()")));
- (VSPKDebugQPositionSpeed *)doCopyCurrentTime:(int64_t)currentTime average:(double)average std:(double)std percentile:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)percentile clusterSize:(int32_t)clusterSize extremas:(VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *)extremas __attribute__((swift_name("doCopy(currentTime:average:std:percentile:clusterSize:extremas:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double average __attribute__((swift_name("average")));
@property (readonly) int32_t clusterSize __attribute__((swift_name("clusterSize")));
@property (readonly) int64_t currentTime __attribute__((swift_name("currentTime")));
@property (readonly) VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *extremas __attribute__((swift_name("extremas")));
@property (readonly) VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *percentile __attribute__((swift_name("percentile")));
@property (readonly) double std __attribute__((swift_name("std")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DebugQPositionSpeed.Companion")))
@interface VSPKDebugQPositionSpeedCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDebugQPositionSpeedCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugClusterAngles")))
@interface VSPKTimedDebugClusterAngles : VSPKBase
- (instancetype)initWithPositions:(NSArray<VSPKDebugClusterAngle *> *)positions timestamp:(int64_t)timestamp __attribute__((swift_name("init(positions:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTimedDebugClusterAnglesCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<VSPKDebugClusterAngle *> *)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKTimedDebugClusterAngles *)doCopyPositions:(NSArray<VSPKDebugClusterAngle *> *)positions timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(positions:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<VSPKDebugClusterAngle *> *positions __attribute__((swift_name("positions")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugClusterAngles.Companion")))
@interface VSPKTimedDebugClusterAnglesCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTimedDebugClusterAnglesCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugClusters")))
@interface VSPKTimedDebugClusters : VSPKBase
- (instancetype)initWithClusters:(NSMutableArray<VSPKDebugCluster *> *)clusters __attribute__((swift_name("init(clusters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTimedDebugClustersCompanion *companion __attribute__((swift_name("companion")));
- (NSMutableArray<VSPKDebugCluster *> *)component1 __attribute__((swift_name("component1()")));
- (VSPKTimedDebugClusters *)doCopyClusters:(NSMutableArray<VSPKDebugCluster *> *)clusters __attribute__((swift_name("doCopy(clusters:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<VSPKDebugCluster *> *clusters __attribute__((swift_name("clusters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugClusters.Companion")))
@interface VSPKTimedDebugClustersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTimedDebugClustersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugPosition")))
@interface VSPKTimedDebugPosition : VSPKBase
- (instancetype)initWithPosition:(VSPKPointF * _Nullable)position timestamp:(int64_t)timestamp __attribute__((swift_name("init(position:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTimedDebugPositionCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPointF * _Nullable)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKTimedDebugPosition *)doCopyPosition:(VSPKPointF * _Nullable)position timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(position:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPointF * _Nullable position __attribute__((swift_name("position")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugPosition.Companion")))
@interface VSPKTimedDebugPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTimedDebugPositionCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugPositions")))
@interface VSPKTimedDebugPositions : VSPKBase
- (instancetype)initWithPositions:(NSArray<VSPKDebugPosition *> *)positions timestamp:(int64_t)timestamp __attribute__((swift_name("init(positions:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTimedDebugPositionsCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<VSPKDebugPosition *> *)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKTimedDebugPositions *)doCopyPositions:(NSArray<VSPKDebugPosition *> *)positions timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(positions:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<VSPKDebugPosition *> *positions __attribute__((swift_name("positions")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugPositions.Companion")))
@interface VSPKTimedDebugPositionsCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTimedDebugPositionsCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugRadius")))
@interface VSPKTimedDebugRadius : VSPKBase
- (instancetype)initWithRadius:(double)radius timestamp:(int64_t)timestamp __attribute__((swift_name("init(radius:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTimedDebugRadiusCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (VSPKTimedDebugRadius *)doCopyRadius:(double)radius timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(radius:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double radius __attribute__((swift_name("radius")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedDebugRadius.Companion")))
@interface VSPKTimedDebugRadiusCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTimedDebugRadiusCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((swift_name("tt2EngineParameterManager")))
@protocol VSPKtt2EngineParameterManager
@required
- (NSString * _Nullable)getParametersClassParameters:(VSPKtt2EngineParameterManagerClassParameters *)classParameters __attribute__((swift_name("getParameters(classParameters:)")));
@property (readonly) VSPKIQPSParameterPackageEnum *parameterPackageEnum __attribute__((swift_name("parameterPackageEnum")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExternalDataManagerPassThru")))
@interface VSPKExternalDataManagerPassThru : VSPKBase <VSPKtt2EngineParameterManager>
- (instancetype)initWithParameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum isDebug:(BOOL)isDebug externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(parameterPackageEnum:isDebug:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)getParametersClassParameters:(VSPKtt2EngineParameterManagerClassParameters *)classParameters __attribute__((swift_name("getParameters(classParameters:)")));
@property (readonly) VSPKIQPSParameterPackageEnum *parameterPackageEnum __attribute__((swift_name("parameterPackageEnum")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NaivePositionFilter")))
@interface VSPKNaivePositionFilter : VSPKBase <VSPKtt2Engine>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)configureOutput:(id<VSPKtt2EngineTt2EngineDelegate> _Nullable)output replayDataHandler:(VSPKReplayDataHandler * _Nullable)replayDataHandler __attribute__((swift_name("configure(output:replayDataHandler:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (double)getRealWorldOrientation __attribute__((swift_name("getRealWorldOrientation()")));
- (VSPKNavBundle * _Nullable)moveEventLength:(float)length direction:(double)direction duration:(int64_t)duration currentTime:(int64_t)currentTime orientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("moveEvent(length:direction:duration:currentTime:orientation:)")));
- (void)setPositionX:(float)x y:(float)y angleStd:(VSPKDouble * _Nullable)angleStd numClusters:(VSPKInt * _Nullable)numClusters radius:(VSPKDouble * _Nullable)radius __attribute__((swift_name("setPosition(x:y:angleStd:numClusters:radius:)")));
- (void)setRealWorldOrientationAngle:(double)angle __attribute__((swift_name("setRealWorldOrientation(angle:)")));
- (void)start __attribute__((swift_name("start()")));
- (void)tickCurrentTime:(int64_t)currentTime __attribute__((swift_name("tick(currentTime:)")));
- (void)updateWayfindingPathPath:(NSArray<VSPKKotlinPair<VSPKFloat *, VSPKFloat *> *> *)path __attribute__((swift_name("updateWayfindingPath(path:)")));
@property (readonly) id<VSPKtt2EngineTt2EngineDelegate> output __attribute__((swift_name("output")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("tt2EngineParameterManagerClassParameters")))
@interface VSPKtt2EngineParameterManagerClassParameters : VSPKKotlinEnum<VSPKtt2EngineParameterManagerClassParameters *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *qpos __attribute__((swift_name("qpos")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *qlayerQueue __attribute__((swift_name("qlayerQueue")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *qlayer __attribute__((swift_name("qlayer")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *cluster __attribute__((swift_name("cluster")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *trolleySkip __attribute__((swift_name("trolleySkip")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *smallClusterSpreadIncreaser __attribute__((swift_name("smallClusterSpreadIncreaser")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *speedSpreadHandler __attribute__((swift_name("speedSpreadHandler")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *directionPrio __attribute__((swift_name("directionPrio")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *tspPrio __attribute__((swift_name("tspPrio")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *movementStateManagerParameters __attribute__((swift_name("movementStateManagerParameters")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *directionTracker __attribute__((swift_name("directionTracker")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *misc __attribute__((swift_name("misc")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *anglePid __attribute__((swift_name("anglePid")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *slidingRatio __attribute__((swift_name("slidingRatio")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *getNewPositions __attribute__((swift_name("getNewPositions")));
@property (class, readonly) VSPKtt2EngineParameterManagerClassParameters *split __attribute__((swift_name("split")));
+ (VSPKKotlinArray<VSPKtt2EngineParameterManagerClassParameters *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerMapDataWrapper")))
@interface VSPKQLayerMapDataWrapper : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)configureMapData:(VSPKMapData *)mapData __attribute__((swift_name("configure(mapData:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (double)getMapOffsetPoint:(VSPKPointF *)point __attribute__((swift_name("getMapOffset(point:)")));
- (BOOL)isPointOnNavMeshPointF:(VSPKPointF *)pointF __attribute__((swift_name("isPointOnNavMesh(pointF:)")));
- (BOOL)isPointOnNavMeshPoint:(VSPKPointF *)point vector:(VSPKVector *)vector __attribute__((swift_name("isPointOnNavMesh(point:vector:)")));
@property (readonly) VSPKMapData *mapData __attribute__((swift_name("mapData")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerParameterManager")))
@interface VSPKQLayerParameterManager : VSPKBase
- (instancetype)initWithParameterManager:(id<VSPKtt2EngineParameterManager>)parameterManager __attribute__((swift_name("init(parameterManager:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKQLayerParameterManagerCompanion *companion __attribute__((swift_name("companion")));
@property VSPKDirectionPrioParameters * _Nullable directionPrioParameters __attribute__((swift_name("directionPrioParameters")));
@property VSPKDirectionTrackerParameters *directionTrackerParameters __attribute__((swift_name("directionTrackerParameters")));
@property VSPKGetNewPositionsAmountParameters *getNewPositionsAmountParameters __attribute__((swift_name("getNewPositionsAmountParameters")));
@property VSPKMiscParameters *miscParameters __attribute__((swift_name("miscParameters")));
@property VSPKMovementStateManagerParameters *movementStateManagerParameters __attribute__((swift_name("movementStateManagerParameters")));
@property VSPKAnglePIDParameters *pidParameters __attribute__((swift_name("pidParameters")));
@property VSPKQClusterParameters *qClusterParameters __attribute__((swift_name("qClusterParameters")));
@property VSPKQLayerParameters *qLayerParameters __attribute__((swift_name("qLayerParameters")));
@property VSPKQLayerQueueParameters *qLayerQueueParameters __attribute__((swift_name("qLayerQueueParameters")));
@property VSPKQPosParameters *qPosParameters __attribute__((swift_name("qPosParameters")));
@property VSPKSlidingRatioParameters *slidingRatioParameters __attribute__((swift_name("slidingRatioParameters")));
@property VSPKSmallClusterSpreadIncreaserParameters * _Nullable smallClusterSpreadIncreaserParameters __attribute__((swift_name("smallClusterSpreadIncreaserParameters")));
@property VSPKSpeedSpreadHandlerParameters *speedSpreadHandlerParameters __attribute__((swift_name("speedSpreadHandlerParameters")));
@property VSPKSplitPositionsParameters *splitPositionsParameters __attribute__((swift_name("splitPositionsParameters")));
@property VSPKTrolleySkipParameters * _Nullable trolleySkipParameters __attribute__((swift_name("trolleySkipParameters")));
@property VSPKTSPPrioParameters * _Nullable tspPrioParameters __attribute__((swift_name("tspPrioParameters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerParameterManager.Companion")))
@interface VSPKQLayerParameterManagerCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQLayerParameterManagerCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *missingParamString __attribute__((swift_name("missingParamString")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerVectorQueueHandler")))
@interface VSPKQLayerVectorQueueHandler : VSPKBase
- (instancetype)initWithParameters:(VSPKQLayerQueueParameters *)parameters __attribute__((swift_name("init(parameters:)"))) __attribute__((objc_designated_initializer));
- (void)clearQueue __attribute__((swift_name("clearQueue()")));
- (VSPKFloat * _Nullable)getCompassOffset __attribute__((swift_name("getCompassOffset()")));
- (NSString *)getMoveVectorString __attribute__((swift_name("getMoveVectorString()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (VSPKMoveVector *)nextMovement __attribute__((swift_name("nextMovement()")));
- (void)setCompassOffsetOffset:(float)offset __attribute__((swift_name("setCompassOffset(offset:)")));
- (void)setGameVectorDirectionAngle:(float)angle __attribute__((swift_name("setGameVectorDirection(angle:)")));
@end;

__attribute__((swift_name("PointF")))
@interface VSPKPointF : VSPKBase
- (instancetype)initWithPoint:(VSPKPointF *)point vector:(VSPKVector *)vector __attribute__((swift_name("init(point:vector:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(double)x y:(double)y __attribute__((swift_name("init(x:y:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(float)x y_:(float)y __attribute__((swift_name("init(x:y_:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKPointFCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPointF *)doCopy __attribute__((swift_name("doCopy()")));
- (double)distanceToPoint:(VSPKPointF *)point __attribute__((swift_name("distanceTo(point:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (BOOL)isInvalid __attribute__((swift_name("isInvalid()")));
- (BOOL)isPointWithinDistancePosition:(VSPKPointF *)position distance:(double)distance __attribute__((swift_name("isPointWithinDistance(position:distance:)")));
- (BOOL)isValid __attribute__((swift_name("isValid()")));
- (VSPKVector *)minusPoint:(VSPKPointF *)point __attribute__((swift_name("minus(point:)")));
- (VSPKPointF *)plusVec:(VSPKVector *)vec __attribute__((swift_name("plus(vec:)")));
- (void)setX:(float)x y:(float)y __attribute__((swift_name("set(x:y:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property float x __attribute__((swift_name("x")));
@property float y __attribute__((swift_name("y")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QPosition")))
@interface VSPKQPosition : VSPKPointF
- (instancetype)initWithPosition:(VSPKPointF *)position birthTime:(int64_t)birthTime parameters:(VSPKQPosParameters *)parameters __attribute__((swift_name("init(position:birthTime:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(float)x y:(float)y birthTime:(int64_t)birthTime parameters:(VSPKQPosParameters *)parameters __attribute__((swift_name("init(x:y:birthTime:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(float)x y:(float)y birthTime:(int64_t)birthTime speed:(double)speed parameters:(VSPKQPosParameters *)parameters __attribute__((swift_name("init(x:y:birthTime:speed:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(float)x y:(float)y birthTime:(int64_t)birthTime angleOffset:(double)angleOffset initialDirection:(double)initialDirection parameters:(VSPKQPosParameters *)parameters __attribute__((swift_name("init(x:y:birthTime:angleOffset:initialDirection:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPoint:(VSPKPointF *)point vector:(VSPKVector *)vector __attribute__((swift_name("init(point:vector:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithX:(double)x y:(double)y __attribute__((swift_name("init(x:y:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithX:(float)x y_:(float)y __attribute__((swift_name("init(x:y_:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) VSPKQPositionCompanion *companion __attribute__((swift_name("companion")));
- (void)lockSpread __attribute__((swift_name("lockSpread()")));
- (void)moveMoveVector:(VSPKMoveVector *)moveVector closestFixedDirection:(VSPKVector * _Nullable)closestFixedDirection __attribute__((swift_name("move(moveVector:closestFixedDirection:)")));
- (VSPKPointF *)toPointF __attribute__((swift_name("toPointF()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (void)unlockSpread __attribute__((swift_name("unlockSpread()")));
- (void)updateSpeedPidSpeedMultiplier:(double)pidSpeedMultiplier __attribute__((swift_name("updateSpeed(pidSpeedMultiplier:)")));
- (void)updateSpeedMapZoneOffset:(double)offset __attribute__((swift_name("updateSpeedMapZone(offset:)")));
@property int32_t age __attribute__((swift_name("age")));
@property (readonly) double angleOffset __attribute__((swift_name("angleOffset")));
@property int32_t clusterId __attribute__((swift_name("clusterId")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property BOOL lockedSpreadMod __attribute__((swift_name("lockedSpreadMod")));
@property VSPKQPosParameters *parameters __attribute__((swift_name("parameters")));
@property double pidSpeedMultiplier __attribute__((swift_name("pidSpeedMultiplier")));
@property NSMutableArray<VSPKVector *> *possibleDirections __attribute__((swift_name("possibleDirections")));
@property VSPKMutableDictionary<VSPKFloat *, VSPKDouble *> *possibleDirectionsSpeedMap __attribute__((swift_name("possibleDirectionsSpeedMap")));
@property double speedMultiplier __attribute__((swift_name("speedMultiplier")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QPosition.Companion")))
@interface VSPKQPositionCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQPositionCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *TAG __attribute__((swift_name("TAG")));
@end;

__attribute__((swift_name("ContextReturnData")))
@protocol VSPKContextReturnData
@required
- (void)updateReturnSignal:(id _Nullable)signal __attribute__((swift_name("updateReturn(signal:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerContextReturnData")))
@interface VSPKQLayerContextReturnData : VSPKBase <VSPKContextReturnData>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)updateReturnSignal:(id _Nullable)signal __attribute__((swift_name("updateReturn(signal:)")));
@property (readonly) NSMutableArray<id> *lambdaFunctions __attribute__((swift_name("lambdaFunctions")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExternalDataManager")))
@interface VSPKExternalDataManager : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addDebugMessageString:(NSString *)string __attribute__((swift_name("addDebugMessage(string:)")));
- (NSArray<NSString *> *)getDebugMessages __attribute__((swift_name("getDebugMessages()")));
- (void)purge __attribute__((swift_name("purge()")));
- (void)setAndroidRegularMLStepDetectorParametersNew:(VSPKAndroidRegularMLStepDetectorParameters * _Nullable)new_ __attribute__((swift_name("setAndroidRegularMLStepDetectorParameters(new:)")));
- (void)setAnglePIDParametersNew:(VSPKAnglePIDParameters * _Nullable)new_ __attribute__((swift_name("setAnglePIDParameters(new:)")));
- (void)setClusterBootParametersNew:(VSPKClusterBootParameters * _Nullable)new_ __attribute__((swift_name("setClusterBootParameters(new:)")));
- (void)setDirectionPrioParametersNew:(VSPKDirectionPrioParameters * _Nullable)new_ __attribute__((swift_name("setDirectionPrioParameters(new:)")));
- (void)setDirectionTrackerParametersNew:(VSPKDirectionTrackerParameters * _Nullable)new_ __attribute__((swift_name("setDirectionTrackerParameters(new:)")));
- (void)setFloorSensorParametersNew:(VSPKFloorSensorParameters * _Nullable)new_ __attribute__((swift_name("setFloorSensorParameters(new:)")));
- (void)setFusionSensorManagerParametersNew:(VSPKFusionSensorManagerParameters * _Nullable)new_ __attribute__((swift_name("setFusionSensorManagerParameters(new:)")));
- (void)setGetNewPositionsAmountParametersNew:(VSPKGetNewPositionsAmountParameters * _Nullable)new_ __attribute__((swift_name("setGetNewPositionsAmountParameters(new:)")));
- (void)setMovementStateManagerParametersNew:(VSPKMovementStateManagerParameters * _Nullable)new_ __attribute__((swift_name("setMovementStateManagerParameters(new:)")));
- (void)setParamaterPackageEnumParameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum __attribute__((swift_name("setParamaterPackageEnum(parameterPackageEnum:)")));
- (void)setQClusterParametersNew:(VSPKQClusterParameters * _Nullable)new_ __attribute__((swift_name("setQClusterParameters(new:)")));
- (void)setQClusterParametersNew_:(VSPKQPosParameters * _Nullable)new_ __attribute__((swift_name("setQClusterParameters(new_:)")));
- (void)setQClusterParametersNew__:(VSPKSmallClusterSpreadIncreaserParameters * _Nullable)new_ __attribute__((swift_name("setQClusterParameters(new__:)")));
- (void)setQLayerParametersNew:(VSPKQLayerParameters * _Nullable)new_ __attribute__((swift_name("setQLayerParameters(new:)")));
- (void)setQPSHandlerParametersNew:(VSPKQPSHandlerParameters * _Nullable)new_ __attribute__((swift_name("setQPSHandlerParameters(new:)")));
- (void)setRegularMLStepDetectorParametersNew:(VSPKRegularMLStepDetectorParameters * _Nullable)new_ __attribute__((swift_name("setRegularMLStepDetectorParameters(new:)")));
- (void)setSlidingRatioParametersNew:(VSPKSlidingRatioParameters * _Nullable)new_ __attribute__((swift_name("setSlidingRatioParameters(new:)")));
- (void)setSplitPositionsParametersNew:(VSPKSplitPositionsParameters * _Nullable)new_ __attribute__((swift_name("setSplitPositionsParameters(new:)")));
- (void)setSwingMLStepDetectorParameterNew:(VSPKSwingMLStepDetectorParameters * _Nullable)new_ __attribute__((swift_name("setSwingMLStepDetectorParameter(new:)")));
- (void)setTSPPrioParametersNew:(VSPKTSPPrioParameters * _Nullable)new_ __attribute__((swift_name("setTSPPrioParameters(new:)")));
- (void)setTrolleySkipParametersNew:(VSPKTrolleySkipParameters * _Nullable)new_ __attribute__((swift_name("setTrolleySkipParameters(new:)")));
- (void)setTrolleyStepDetectorParametersNew:(VSPKTrolleyStepDetectorParameters * _Nullable)new_ __attribute__((swift_name("setTrolleyStepDetectorParameters(new:)")));
- (void)setUserAdjustmentsUserAdjustments:(VSPKUserAdjustments *)userAdjustments __attribute__((swift_name("setUserAdjustments(userAdjustments:)")));
- (void)setUserSettingsUserSettings:(id<VSPKIQPSUserSettings>)userSettings __attribute__((swift_name("setUserSettings(userSettings:)")));
- (void)setVeddestaScrubberParametersNew:(VSPKVeddestaScrubberParameters * _Nullable)new_ __attribute__((swift_name("setVeddestaScrubberParameters(new:)")));
@property (readonly) VSPKAndroidPocketMLStepDetectorParameters *androidPocketMLStepDetectorParameters __attribute__((swift_name("androidPocketMLStepDetectorParameters")));
@property (readonly) VSPKAndroidRegularMLStepDetectorParameters *androidRegularMLStepDetectorParameters __attribute__((swift_name("androidRegularMLStepDetectorParameters")));
@property (readonly) VSPKAnglePIDParameters *anglePIDParameters __attribute__((swift_name("anglePIDParameters")));
@property (readonly) VSPKAxisParameters *axisParameters __attribute__((swift_name("axisParameters")));
@property (readonly) VSPKClusterBootParameters *clusterBootParameters __attribute__((swift_name("clusterBootParameters")));
@property BOOL debug __attribute__((swift_name("debug")));
@property (readonly) VSPKDirectionPrioParameters *directionPrioParameters __attribute__((swift_name("directionPrioParameters")));
@property (readonly) VSPKDirectionTrackerParameters *directionTrackerParameters __attribute__((swift_name("directionTrackerParameters")));
@property (readonly) VSPKFloorSensorParameters *floorSensorParameters __attribute__((swift_name("floorSensorParameters")));
@property (readonly) VSPKFusionSensorManagerParameters *fusionSensorManagerParameters __attribute__((swift_name("fusionSensorManagerParameters")));
@property (readonly) VSPKGetNewPositionsAmountParameters *getNewPositionsAmountParameters __attribute__((swift_name("getNewPositionsAmountParameters")));
@property (readonly) VSPKTrolleyStepDetectorParameters *getTrolleyStepDetectorParameters __attribute__((swift_name("getTrolleyStepDetectorParameters")));
@property (readonly) VSPKMovementStateManagerParameters *movementStateManagerParameters __attribute__((swift_name("movementStateManagerParameters")));
@property (readonly) VSPKPocketMLStepDetectorParameters *pocketMLStepDetectorParameters __attribute__((swift_name("pocketMLStepDetectorParameters")));
@property (readonly) VSPKQClusterParameters *qClusterParameters __attribute__((swift_name("qClusterParameters")));
@property (readonly) VSPKQLayerParameters *qLayerParameters __attribute__((swift_name("qLayerParameters")));
@property (readonly) VSPKQLayerQueueParameters *qLayerQueueParameters __attribute__((swift_name("qLayerQueueParameters")));
@property (readonly) VSPKQPosParameters *qPosParameters __attribute__((swift_name("qPosParameters")));
@property (readonly) VSPKQPSHandlerParameters *qpsHandlerParameters __attribute__((swift_name("qpsHandlerParameters")));
@property (readonly) VSPKRegularMLStepDetectorParameters *regularMLStepDetectorParameters __attribute__((swift_name("regularMLStepDetectorParameters")));
@property (readonly) VSPKSlidingRatioParameters *slidingRatioParameters __attribute__((swift_name("slidingRatioParameters")));
@property (readonly) VSPKSmallClusterSpreadIncreaserParameters *smallCLusterSpreadIncreaseParameters __attribute__((swift_name("smallCLusterSpreadIncreaseParameters")));
@property (readonly) VSPKSpeedSpreadHandlerParameters *speedSpreadHandlerParameters __attribute__((swift_name("speedSpreadHandlerParameters")));
@property (readonly) VSPKSplitPositionsParameters *splitPositionsParameters __attribute__((swift_name("splitPositionsParameters")));
@property (readonly) VSPKSwingAntiSymMLStepDetectorParameters *swingAntiSymMLStepDetectorParameters __attribute__((swift_name("swingAntiSymMLStepDetectorParameters")));
@property (readonly) VSPKSwingMLStepDetectorParameters *swingMLStepDetectorParameters __attribute__((swift_name("swingMLStepDetectorParameters")));
@property (readonly) VSPKSwingSymMLStepDetectorParameters *swingSymMLStepDetectorParameters __attribute__((swift_name("swingSymMLStepDetectorParameters")));
@property (readonly) VSPKTrolleySkipParameters *trolleySkipParameters __attribute__((swift_name("trolleySkipParameters")));
@property (readonly) VSPKTSPPrioParameters *tspPrioParameters __attribute__((swift_name("tspPrioParameters")));
@property (readonly) VSPKUserAdjustments * _Nullable userAdjustments __attribute__((swift_name("userAdjustments")));
@property (readonly) id<VSPKIQPSUserSettings> _Nullable userSettings __attribute__((swift_name("userSettings")));
@property (readonly) VSPKVeddestaScrubberParameters *veddestaScrubberParameters __attribute__((swift_name("veddestaScrubberParameters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IkeaQPSValues")))
@interface VSPKIkeaQPSValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)ikeaQPSValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIkeaQPSValues *shared __attribute__((swift_name("shared")));
@property (readonly) double ACCEPTANCE_SLIDING_RATIO __attribute__((swift_name("ACCEPTANCE_SLIDING_RATIO")));
@property (readonly) float ANDROID_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_B")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_REGULAR_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_NN_INTERCEPTS __attribute__((swift_name("ANDROID_REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_SCALES")));
@property double ANGLE_OFFSET_MAGNITUDE __attribute__((swift_name("ANGLE_OFFSET_MAGNITUDE")));
@property (readonly) double ANGLE_PID_DERIVATIVE_CONSTANT __attribute__((swift_name("ANGLE_PID_DERIVATIVE_CONSTANT")));
@property (readonly) double ANGLE_PID_INTEGRATION_CONSTANT __attribute__((swift_name("ANGLE_PID_INTEGRATION_CONSTANT")));
@property double ANGLE_PID_MAX_OFFSET __attribute__((swift_name("ANGLE_PID_MAX_OFFSET")));
@property double ANGLE_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("ANGLE_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property float ANTI_SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float ANTI_SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANTI_SYM_SWING_NN_COEF __attribute__((swift_name("ANTI_SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANTI_SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("ANTI_SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_MEANS __attribute__((swift_name("ANTI_SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_SCALES __attribute__((swift_name("ANTI_SYM_SWING_SCALER_SCALES")));
@property (readonly) double CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("CHANGE_THRESHOLD_PERCENTAGE")));
@property double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) int32_t CLUSTER_DEATH_BOUND __attribute__((swift_name("CLUSTER_DEATH_BOUND")));
@property (readonly) double CLUSTER_DISJOINT_TOLERANCE __attribute__((swift_name("CLUSTER_DISJOINT_TOLERANCE")));
@property (readonly) int32_t CLUSTER_LOWER_BOUND __attribute__((swift_name("CLUSTER_LOWER_BOUND")));
@property double COLLISION_ANGLE_MAX_DISTANCE_CHECKED __attribute__((swift_name("COLLISION_ANGLE_MAX_DISTANCE_CHECKED")));
@property int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@property int32_t COLLISION_TIMER __attribute__((swift_name("COLLISION_TIMER")));
@property (readonly) int32_t CONVEX_TIMER __attribute__((swift_name("CONVEX_TIMER")));
@property (readonly) int32_t DATA_COMPENSATION_HISTORY_SIZE __attribute__((swift_name("DATA_COMPENSATION_HISTORY_SIZE")));
@property (readonly) int32_t DATA_HISTORY_SIZE __attribute__((swift_name("DATA_HISTORY_SIZE")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) double DISTANCE_FOR_MAX_SPEED __attribute__((swift_name("DISTANCE_FOR_MAX_SPEED")));
@property (readonly) double DRIFT_COMPENSATION_ALTITUDE_LIMIT __attribute__((swift_name("DRIFT_COMPENSATION_ALTITUDE_LIMIT")));
@property (readonly) int64_t DRIFT_COMPENSATION_INTERVAL __attribute__((swift_name("DRIFT_COMPENSATION_INTERVAL")));
@property (readonly) double DRIFT_COMPENSATION_VARIANCE_THRESHOLD __attribute__((swift_name("DRIFT_COMPENSATION_VARIANCE_THRESHOLD")));
@property (readonly) int32_t FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD __attribute__((swift_name("FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD")));
@property int32_t GENERIC_EXIT_TOLERANCE __attribute__((swift_name("GENERIC_EXIT_TOLERANCE")));
@property (readonly) double HEAD_ON_CHECK_DISTANCE_MODIFIER __attribute__((swift_name("HEAD_ON_CHECK_DISTANCE_MODIFIER")));
@property double HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("HEAD_ON_COLLISION_MAX_INCOMING_ANGLE")));
@property (readonly) int32_t HEAD_ON_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("HEAD_ON_COLLISION_STABILITY_TOLERANCE")));
@property int32_t HEALTHY_POSITION_AMOUNT __attribute__((swift_name("HEALTHY_POSITION_AMOUNT")));
@property double HYPERBOLA_ANGLE __attribute__((swift_name("HYPERBOLA_ANGLE")));
@property double HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("HYPERBOLA_INNER_CONSTANT")));
@property double HYPERBOLA_X_SHIFT __attribute__((swift_name("HYPERBOLA_X_SHIFT")));
@property double HYPERBOLA_Y_SHIFT __attribute__((swift_name("HYPERBOLA_Y_SHIFT")));
@property BOOL INHERITED_SPEED_FORCE_ENABLE __attribute__((swift_name("INHERITED_SPEED_FORCE_ENABLE")));
@property double INHERITED_SPEED_INCREMENT __attribute__((swift_name("INHERITED_SPEED_INCREMENT")));
@property double INHERITED_SPEED_MAX_ADJUST __attribute__((swift_name("INHERITED_SPEED_MAX_ADJUST")));
@property double INHERITED_SPEED_START_STD __attribute__((swift_name("INHERITED_SPEED_START_STD")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *JACKET_POCKET_NN_COEFFICIENTS __attribute__((swift_name("JACKET_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *JACKET_POCKET_NN_INTERCEPTS __attribute__((swift_name("JACKET_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_MEANS __attribute__((swift_name("JACKET_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_SCALES __attribute__((swift_name("JACKET_POCKET_SCALER_SCALES")));
@property float MAGIC_CONSTANT __attribute__((swift_name("MAGIC_CONSTANT")));
@property int32_t MAX_NUMBER_OF_POINTS __attribute__((swift_name("MAX_NUMBER_OF_POINTS")));
@property double MAX_SPEED_OFFSET __attribute__((swift_name("MAX_SPEED_OFFSET")));
@property (readonly) int32_t MAX_TRIES_BEFORE_FORCED_SPAWN __attribute__((swift_name("MAX_TRIES_BEFORE_FORCED_SPAWN")));
@property double NARROW_ISLE_THRESHOLD __attribute__((swift_name("NARROW_ISLE_THRESHOLD")));
@property (readonly) int32_t NUMBER_OF_FORCED_SPAWNS __attribute__((swift_name("NUMBER_OF_FORCED_SPAWNS")));
@property double OPTIMAL_CLUSTER_RADIUS __attribute__((swift_name("OPTIMAL_CLUSTER_RADIUS")));
@property (readonly) double PID_DISTANCE_RESOLUTION __attribute__((swift_name("PID_DISTANCE_RESOLUTION")));
@property (readonly) double PID_DISTANCE_THRESHOLD __attribute__((swift_name("PID_DISTANCE_THRESHOLD")));
@property (readonly) int32_t POCKET_GHETTO_OFFSET __attribute__((swift_name("POCKET_GHETTO_OFFSET")));
@property (readonly) double POCKET_LP_CUTOFF __attribute__((swift_name("POCKET_LP_CUTOFF")));
@property double PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("PRIO_CLUSTER_SIZE_PROP_THRESHOLD")));
@property int32_t REBOOT_CLUSTER_SIZE __attribute__((swift_name("REBOOT_CLUSTER_SIZE")));
@property (readonly) int32_t RECOVERY_MAP_SIZE_THRESHOLD __attribute__((swift_name("RECOVERY_MAP_SIZE_THRESHOLD")));
@property double RECOVERY_SPREAD_DISTANCE __attribute__((swift_name("RECOVERY_SPREAD_DISTANCE")));
@property double RECOVERY_SPREAD_RADIUS __attribute__((swift_name("RECOVERY_SPREAD_RADIUS")));
@property (readonly) double RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE")));
@property (readonly) float REGULAR_ELLIPSE_ALPHA __attribute__((swift_name("REGULAR_ELLIPSE_ALPHA")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_X __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_X")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_Y __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_Y")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_A __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_A")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *REGULAR_NN_COEFFICIENTS __attribute__((swift_name("REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_NN_INTERCEPTS __attribute__((swift_name("REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_MEANS __attribute__((swift_name("REGULAR_NN_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_SCALES __attribute__((swift_name("REGULAR_NN_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_PCA_COMPONENTS __attribute__((swift_name("REGULAR_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_MEANS __attribute__((swift_name("REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_SCALES __attribute__((swift_name("REGULAR_SCALER_SCALES")));
@property float REGULAR_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_COEFFICIENT")));
@property float REGULAR_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SVM_DUAL_COEF __attribute__((swift_name("REGULAR_SVM_DUAL_COEF")));
@property (readonly) float REGULAR_SVM_INTERCEPT __attribute__((swift_name("REGULAR_SVM_INTERCEPT")));
@property (readonly) VSPKFloat *(^REGULAR_SVM_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("REGULAR_SVM_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_SVM_SUPPORT __attribute__((swift_name("REGULAR_SVM_SUPPORT")));
@property (readonly) int32_t RESCUE_MODE_MAX_ALL_COLLIDED_TRIES __attribute__((swift_name("RESCUE_MODE_MAX_ALL_COLLIDED_TRIES")));
@property (readonly) double RESCUE_SPREAD_DISTANCE __attribute__((swift_name("RESCUE_SPREAD_DISTANCE")));
@property (readonly) double RESCUE_SPREAD_RADIUS __attribute__((swift_name("RESCUE_SPREAD_RADIUS")));
@property (readonly) int32_t RETURN_FROM_COLLISION_SENSITIVITY __attribute__((swift_name("RETURN_FROM_COLLISION_SENSITIVITY")));
@property (readonly) int32_t SIDE_COLLISION_MAX_AGE __attribute__((swift_name("SIDE_COLLISION_MAX_AGE")));
@property int32_t SIDE_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("SIDE_COLLISION_STABILITY_TOLERANCE")));
@property double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@property double SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER")));
@property double SMALL_CLUSTER_DIRECTIONAL_RADIUS __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_RADIUS")));
@property (readonly) int32_t SMALL_CLUSTER_SIZE __attribute__((swift_name("SMALL_CLUSTER_SIZE")));
@property (readonly) double SPEED_PID_MAX_OFFSET __attribute__((swift_name("SPEED_PID_MAX_OFFSET")));
@property double SPEED_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("SPEED_PID_PROPORTIONAL_CONSTANT")));
@property double SPLIT_ANGLE __attribute__((swift_name("SPLIT_ANGLE")));
@property float SPLIT_METERS __attribute__((swift_name("SPLIT_METERS")));
@property int32_t STABLE_DIRECTION_TICK_THRESHOLD __attribute__((swift_name("STABLE_DIRECTION_TICK_THRESHOLD")));
@property (readonly) double STABLE_VARIANCE_THRESHOLD __attribute__((swift_name("STABLE_VARIANCE_THRESHOLD")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_ALPHA __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_ALPHA")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_X __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_X")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_Y __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_Y")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_A __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_A")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_B __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_B")));
@property (readonly) int32_t SWING_ANTI_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_ANTI_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_ANTI_SYM_LP_CUTOFF __attribute__((swift_name("SWING_ANTI_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES")));
@property (readonly) VSPKKotlinFloatArray *SWING_AXIS __attribute__((swift_name("SWING_AXIS")));
@property (readonly) VSPKFloat *(^SWING_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("SWING_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_PCA_COMPONENTS __attribute__((swift_name("SWING_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_MEANS __attribute__((swift_name("SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_SCALES __attribute__((swift_name("SWING_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SVM_DUAL_COEF __attribute__((swift_name("SWING_SVM_DUAL_COEF")));
@property (readonly) float SWING_SVM_INTERCEPT __attribute__((swift_name("SWING_SVM_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SVM_SUPPORT __attribute__((swift_name("SWING_SVM_SUPPORT")));
@property (readonly) int32_t SWING_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_SYM_HYPERBOLA_ANGLE __attribute__((swift_name("SWING_SYM_HYPERBOLA_ANGLE")));
@property (readonly) double SWING_SYM_HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("SWING_SYM_HYPERBOLA_INNER_CONSTANT")));
@property (readonly) double SWING_SYM_HYPERBOLA_X_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_X_SHIFT")));
@property (readonly) double SWING_SYM_HYPERBOLA_Y_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_Y_SHIFT")));
@property (readonly) double SWING_SYM_LP_CUTOFF __attribute__((swift_name("SWING_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SYM_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_SYM_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_SCALES")));
@property float SWING_WEAK_X0 __attribute__((swift_name("SWING_WEAK_X0")));
@property float SWING_WEAK_Y0 __attribute__((swift_name("SWING_WEAK_Y0")));
@property float SWING_WEAK_Y1 __attribute__((swift_name("SWING_WEAK_Y1")));
@property float SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *SYM_SWING_NN_COEF __attribute__((swift_name("SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_MEANS __attribute__((swift_name("SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_SCALES __attribute__((swift_name("SYM_SWING_SCALER_SCALES")));
@property (readonly) NSString *TEST_NUMBER __attribute__((swift_name("TEST_NUMBER")));
@property int64_t TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN __attribute__((swift_name("TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT")));
@property float TROLLEY_INTEGRAL_SPEED_V0 __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V0")));
@property float TROLLEY_INTEGRAL_SPEED_V_MAX __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V_MAX")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROLLEY_NN_COEF __attribute__((swift_name("TROLLEY_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROLLEY_NN_INTERCEPTS __attribute__((swift_name("TROLLEY_NN_INTERCEPTS")));
@property float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@property float TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE")));
@property float TROLLEY_RESCUE_MAX_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_MAX_DISTANCE")));
@property int32_t TROLLEY_RESCUE_RESOLUTION __attribute__((swift_name("TROLLEY_RESCUE_RESOLUTION")));
@property int64_t TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("TROLLEY_RESCUE_STABLE_CHANGE")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_MEANS __attribute__((swift_name("TROLLEY_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_SCALES __attribute__((swift_name("TROLLEY_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("TROUSER_POCKET_SCALER_SCALES")));
@property double TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD")));
@property double TSP_PRIORITY_DISTANCE __attribute__((swift_name("TSP_PRIORITY_DISTANCE")));
@property (readonly) int32_t USER_SETTINGS_UPDATE_TICKS __attribute__((swift_name("USER_SETTINGS_UPDATE_TICKS")));
@property float WALKING_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("WALKING_SPEED_REGRESSION_COEFFICIENT")));
@property float WALKING_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("WALKING_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) int32_t WALKING_STABILITY_TOLERANCE __attribute__((swift_name("WALKING_STABILITY_TOLERANCE")));
@property float WEAK_X __attribute__((swift_name("WEAK_X")));
@property (readonly) float speed_bias __attribute__((swift_name("speed_bias")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JulaQPSValues")))
@interface VSPKJulaQPSValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)julaQPSValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKJulaQPSValues *shared __attribute__((swift_name("shared")));
@property (readonly) double ACCEPTANCE_SLIDING_RATIO __attribute__((swift_name("ACCEPTANCE_SLIDING_RATIO")));
@property (readonly) float ANDROID_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_B")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_REGULAR_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_NN_INTERCEPTS __attribute__((swift_name("ANDROID_REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_SCALES")));
@property double ANGLE_OFFSET_MAGNITUDE __attribute__((swift_name("ANGLE_OFFSET_MAGNITUDE")));
@property (readonly) double ANGLE_PID_DERIVATIVE_CONSTANT __attribute__((swift_name("ANGLE_PID_DERIVATIVE_CONSTANT")));
@property (readonly) double ANGLE_PID_INTEGRATION_CONSTANT __attribute__((swift_name("ANGLE_PID_INTEGRATION_CONSTANT")));
@property double ANGLE_PID_MAX_OFFSET __attribute__((swift_name("ANGLE_PID_MAX_OFFSET")));
@property double ANGLE_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("ANGLE_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property float ANTI_SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float ANTI_SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANTI_SYM_SWING_NN_COEF __attribute__((swift_name("ANTI_SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANTI_SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("ANTI_SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_MEANS __attribute__((swift_name("ANTI_SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_SCALES __attribute__((swift_name("ANTI_SYM_SWING_SCALER_SCALES")));
@property (readonly) double CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("CHANGE_THRESHOLD_PERCENTAGE")));
@property double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) int32_t CLUSTER_DEATH_BOUND __attribute__((swift_name("CLUSTER_DEATH_BOUND")));
@property (readonly) double CLUSTER_DISJOINT_TOLERANCE __attribute__((swift_name("CLUSTER_DISJOINT_TOLERANCE")));
@property (readonly) int32_t CLUSTER_LOWER_BOUND __attribute__((swift_name("CLUSTER_LOWER_BOUND")));
@property double COLLISION_ANGLE_MAX_DISTANCE_CHECKED __attribute__((swift_name("COLLISION_ANGLE_MAX_DISTANCE_CHECKED")));
@property int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@property int32_t COLLISION_TIMER __attribute__((swift_name("COLLISION_TIMER")));
@property (readonly) int32_t CONVEX_TIMER __attribute__((swift_name("CONVEX_TIMER")));
@property (readonly) int32_t DATA_COMPENSATION_HISTORY_SIZE __attribute__((swift_name("DATA_COMPENSATION_HISTORY_SIZE")));
@property (readonly) int32_t DATA_HISTORY_SIZE __attribute__((swift_name("DATA_HISTORY_SIZE")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) double DISTANCE_FOR_MAX_SPEED __attribute__((swift_name("DISTANCE_FOR_MAX_SPEED")));
@property (readonly) double DRIFT_COMPENSATION_ALTITUDE_LIMIT __attribute__((swift_name("DRIFT_COMPENSATION_ALTITUDE_LIMIT")));
@property (readonly) int64_t DRIFT_COMPENSATION_INTERVAL __attribute__((swift_name("DRIFT_COMPENSATION_INTERVAL")));
@property (readonly) double DRIFT_COMPENSATION_VARIANCE_THRESHOLD __attribute__((swift_name("DRIFT_COMPENSATION_VARIANCE_THRESHOLD")));
@property (readonly) int32_t FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD __attribute__((swift_name("FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD")));
@property int32_t GENERIC_EXIT_TOLERANCE __attribute__((swift_name("GENERIC_EXIT_TOLERANCE")));
@property (readonly) double HEAD_ON_CHECK_DISTANCE_MODIFIER __attribute__((swift_name("HEAD_ON_CHECK_DISTANCE_MODIFIER")));
@property double HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("HEAD_ON_COLLISION_MAX_INCOMING_ANGLE")));
@property (readonly) int32_t HEAD_ON_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("HEAD_ON_COLLISION_STABILITY_TOLERANCE")));
@property int32_t HEALTHY_POSITION_AMOUNT __attribute__((swift_name("HEALTHY_POSITION_AMOUNT")));
@property double HYPERBOLA_ANGLE __attribute__((swift_name("HYPERBOLA_ANGLE")));
@property double HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("HYPERBOLA_INNER_CONSTANT")));
@property double HYPERBOLA_X_SHIFT __attribute__((swift_name("HYPERBOLA_X_SHIFT")));
@property double HYPERBOLA_Y_SHIFT __attribute__((swift_name("HYPERBOLA_Y_SHIFT")));
@property BOOL INHERITED_SPEED_FORCE_ENABLE __attribute__((swift_name("INHERITED_SPEED_FORCE_ENABLE")));
@property double INHERITED_SPEED_INCREMENT __attribute__((swift_name("INHERITED_SPEED_INCREMENT")));
@property double INHERITED_SPEED_MAX_ADJUST __attribute__((swift_name("INHERITED_SPEED_MAX_ADJUST")));
@property double INHERITED_SPEED_START_STD __attribute__((swift_name("INHERITED_SPEED_START_STD")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *JACKET_POCKET_NN_COEFFICIENTS __attribute__((swift_name("JACKET_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *JACKET_POCKET_NN_INTERCEPTS __attribute__((swift_name("JACKET_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_MEANS __attribute__((swift_name("JACKET_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_SCALES __attribute__((swift_name("JACKET_POCKET_SCALER_SCALES")));
@property float MAGIC_CONSTANT __attribute__((swift_name("MAGIC_CONSTANT")));
@property int32_t MAX_NUMBER_OF_POINTS __attribute__((swift_name("MAX_NUMBER_OF_POINTS")));
@property double MAX_SPEED_OFFSET __attribute__((swift_name("MAX_SPEED_OFFSET")));
@property (readonly) int32_t MAX_TRIES_BEFORE_FORCED_SPAWN __attribute__((swift_name("MAX_TRIES_BEFORE_FORCED_SPAWN")));
@property double NARROW_ISLE_THRESHOLD __attribute__((swift_name("NARROW_ISLE_THRESHOLD")));
@property (readonly) int32_t NUMBER_OF_FORCED_SPAWNS __attribute__((swift_name("NUMBER_OF_FORCED_SPAWNS")));
@property double OPTIMAL_CLUSTER_RADIUS __attribute__((swift_name("OPTIMAL_CLUSTER_RADIUS")));
@property (readonly) double PID_DISTANCE_RESOLUTION __attribute__((swift_name("PID_DISTANCE_RESOLUTION")));
@property (readonly) double PID_DISTANCE_THRESHOLD __attribute__((swift_name("PID_DISTANCE_THRESHOLD")));
@property (readonly) int32_t POCKET_GHETTO_OFFSET __attribute__((swift_name("POCKET_GHETTO_OFFSET")));
@property (readonly) double POCKET_LP_CUTOFF __attribute__((swift_name("POCKET_LP_CUTOFF")));
@property double PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("PRIO_CLUSTER_SIZE_PROP_THRESHOLD")));
@property int32_t REBOOT_CLUSTER_SIZE __attribute__((swift_name("REBOOT_CLUSTER_SIZE")));
@property (readonly) int32_t RECOVERY_MAP_SIZE_THRESHOLD __attribute__((swift_name("RECOVERY_MAP_SIZE_THRESHOLD")));
@property double RECOVERY_SPREAD_DISTANCE __attribute__((swift_name("RECOVERY_SPREAD_DISTANCE")));
@property double RECOVERY_SPREAD_RADIUS __attribute__((swift_name("RECOVERY_SPREAD_RADIUS")));
@property (readonly) double RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE")));
@property (readonly) float REGULAR_ELLIPSE_ALPHA __attribute__((swift_name("REGULAR_ELLIPSE_ALPHA")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_X __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_X")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_Y __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_Y")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_A __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_A")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *REGULAR_NN_COEFFICIENTS __attribute__((swift_name("REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_NN_INTERCEPTS __attribute__((swift_name("REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_MEANS __attribute__((swift_name("REGULAR_NN_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_SCALES __attribute__((swift_name("REGULAR_NN_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_PCA_COMPONENTS __attribute__((swift_name("REGULAR_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_MEANS __attribute__((swift_name("REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_SCALES __attribute__((swift_name("REGULAR_SCALER_SCALES")));
@property float REGULAR_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_COEFFICIENT")));
@property float REGULAR_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SVM_DUAL_COEF __attribute__((swift_name("REGULAR_SVM_DUAL_COEF")));
@property (readonly) float REGULAR_SVM_INTERCEPT __attribute__((swift_name("REGULAR_SVM_INTERCEPT")));
@property (readonly) VSPKFloat *(^REGULAR_SVM_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("REGULAR_SVM_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_SVM_SUPPORT __attribute__((swift_name("REGULAR_SVM_SUPPORT")));
@property (readonly) int32_t RESCUE_MODE_MAX_ALL_COLLIDED_TRIES __attribute__((swift_name("RESCUE_MODE_MAX_ALL_COLLIDED_TRIES")));
@property (readonly) double RESCUE_SPREAD_DISTANCE __attribute__((swift_name("RESCUE_SPREAD_DISTANCE")));
@property (readonly) double RESCUE_SPREAD_RADIUS __attribute__((swift_name("RESCUE_SPREAD_RADIUS")));
@property (readonly) int32_t RETURN_FROM_COLLISION_SENSITIVITY __attribute__((swift_name("RETURN_FROM_COLLISION_SENSITIVITY")));
@property (readonly) int32_t SIDE_COLLISION_MAX_AGE __attribute__((swift_name("SIDE_COLLISION_MAX_AGE")));
@property int32_t SIDE_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("SIDE_COLLISION_STABILITY_TOLERANCE")));
@property double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@property double SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER")));
@property double SMALL_CLUSTER_DIRECTIONAL_RADIUS __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_RADIUS")));
@property (readonly) int32_t SMALL_CLUSTER_SIZE __attribute__((swift_name("SMALL_CLUSTER_SIZE")));
@property (readonly) double SPEED_PID_MAX_OFFSET __attribute__((swift_name("SPEED_PID_MAX_OFFSET")));
@property double SPEED_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("SPEED_PID_PROPORTIONAL_CONSTANT")));
@property double SPLIT_ANGLE __attribute__((swift_name("SPLIT_ANGLE")));
@property float SPLIT_METERS __attribute__((swift_name("SPLIT_METERS")));
@property int32_t STABLE_DIRECTION_TICK_THRESHOLD __attribute__((swift_name("STABLE_DIRECTION_TICK_THRESHOLD")));
@property (readonly) double STABLE_VARIANCE_THRESHOLD __attribute__((swift_name("STABLE_VARIANCE_THRESHOLD")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_ALPHA __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_ALPHA")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_X __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_X")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_Y __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_Y")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_A __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_A")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_B __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_B")));
@property (readonly) int32_t SWING_ANTI_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_ANTI_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_ANTI_SYM_LP_CUTOFF __attribute__((swift_name("SWING_ANTI_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES")));
@property (readonly) VSPKKotlinFloatArray *SWING_AXIS __attribute__((swift_name("SWING_AXIS")));
@property (readonly) VSPKFloat *(^SWING_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("SWING_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_PCA_COMPONENTS __attribute__((swift_name("SWING_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_MEANS __attribute__((swift_name("SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_SCALES __attribute__((swift_name("SWING_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SVM_DUAL_COEF __attribute__((swift_name("SWING_SVM_DUAL_COEF")));
@property (readonly) float SWING_SVM_INTERCEPT __attribute__((swift_name("SWING_SVM_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SVM_SUPPORT __attribute__((swift_name("SWING_SVM_SUPPORT")));
@property (readonly) int32_t SWING_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_SYM_HYPERBOLA_ANGLE __attribute__((swift_name("SWING_SYM_HYPERBOLA_ANGLE")));
@property (readonly) double SWING_SYM_HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("SWING_SYM_HYPERBOLA_INNER_CONSTANT")));
@property (readonly) double SWING_SYM_HYPERBOLA_X_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_X_SHIFT")));
@property (readonly) double SWING_SYM_HYPERBOLA_Y_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_Y_SHIFT")));
@property (readonly) double SWING_SYM_LP_CUTOFF __attribute__((swift_name("SWING_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SYM_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_SYM_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_SCALES")));
@property float SWING_WEAK_X0 __attribute__((swift_name("SWING_WEAK_X0")));
@property float SWING_WEAK_Y0 __attribute__((swift_name("SWING_WEAK_Y0")));
@property float SWING_WEAK_Y1 __attribute__((swift_name("SWING_WEAK_Y1")));
@property float SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *SYM_SWING_NN_COEF __attribute__((swift_name("SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_MEANS __attribute__((swift_name("SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_SCALES __attribute__((swift_name("SYM_SWING_SCALER_SCALES")));
@property (readonly) NSString *TEST_NUMBER __attribute__((swift_name("TEST_NUMBER")));
@property int64_t TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN __attribute__((swift_name("TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT")));
@property float TROLLEY_INTEGRAL_SPEED_V0 __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V0")));
@property float TROLLEY_INTEGRAL_SPEED_V_MAX __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V_MAX")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROLLEY_NN_COEF __attribute__((swift_name("TROLLEY_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROLLEY_NN_INTERCEPTS __attribute__((swift_name("TROLLEY_NN_INTERCEPTS")));
@property float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@property float TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE")));
@property float TROLLEY_RESCUE_MAX_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_MAX_DISTANCE")));
@property int32_t TROLLEY_RESCUE_RESOLUTION __attribute__((swift_name("TROLLEY_RESCUE_RESOLUTION")));
@property int64_t TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("TROLLEY_RESCUE_STABLE_CHANGE")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_MEANS __attribute__((swift_name("TROLLEY_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_SCALES __attribute__((swift_name("TROLLEY_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("TROUSER_POCKET_SCALER_SCALES")));
@property double TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD")));
@property double TSP_PRIORITY_DISTANCE __attribute__((swift_name("TSP_PRIORITY_DISTANCE")));
@property (readonly) int32_t USER_SETTINGS_UPDATE_TICKS __attribute__((swift_name("USER_SETTINGS_UPDATE_TICKS")));
@property float WALKING_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("WALKING_SPEED_REGRESSION_COEFFICIENT")));
@property float WALKING_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("WALKING_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) int32_t WALKING_STABILITY_TOLERANCE __attribute__((swift_name("WALKING_STABILITY_TOLERANCE")));
@property float WEAK_X __attribute__((swift_name("WEAK_X")));
@property (readonly) float speed_bias __attribute__((swift_name("speed_bias")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PS20QPSValues")))
@interface VSPKPS20QPSValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pS20QPSValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPS20QPSValues *shared __attribute__((swift_name("shared")));
@property (readonly) double ACCEPTANCE_SLIDING_RATIO __attribute__((swift_name("ACCEPTANCE_SLIDING_RATIO")));
@property (readonly) float ANDROID_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_B")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_REGULAR_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_NN_INTERCEPTS __attribute__((swift_name("ANDROID_REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_SCALES")));
@property double ANGLE_OFFSET_MAGNITUDE __attribute__((swift_name("ANGLE_OFFSET_MAGNITUDE")));
@property (readonly) double ANGLE_PID_DERIVATIVE_CONSTANT __attribute__((swift_name("ANGLE_PID_DERIVATIVE_CONSTANT")));
@property (readonly) double ANGLE_PID_INTEGRATION_CONSTANT __attribute__((swift_name("ANGLE_PID_INTEGRATION_CONSTANT")));
@property double ANGLE_PID_MAX_OFFSET __attribute__((swift_name("ANGLE_PID_MAX_OFFSET")));
@property double ANGLE_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("ANGLE_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property float ANTI_SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float ANTI_SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) float ANTI_SYM_SWING_LENIENT_LINE_K __attribute__((swift_name("ANTI_SYM_SWING_LENIENT_LINE_K")));
@property (readonly) float ANTI_SYM_SWING_LENIENT_LINE_M __attribute__((swift_name("ANTI_SYM_SWING_LENIENT_LINE_M")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANTI_SYM_SWING_LENIENT_PCA_COMPONENTS __attribute__((swift_name("ANTI_SYM_SWING_LENIENT_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_LENIENT_SCALER_MEANS __attribute__((swift_name("ANTI_SYM_SWING_LENIENT_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_LENIENT_SCALER_SCALES __attribute__((swift_name("ANTI_SYM_SWING_LENIENT_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANTI_SYM_SWING_NN_COEF __attribute__((swift_name("ANTI_SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANTI_SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("ANTI_SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_MEANS __attribute__((swift_name("ANTI_SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_SCALES __attribute__((swift_name("ANTI_SYM_SWING_SCALER_SCALES")));
@property (readonly) double CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("CHANGE_THRESHOLD_PERCENTAGE")));
@property double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) int32_t CLUSTER_DEATH_BOUND __attribute__((swift_name("CLUSTER_DEATH_BOUND")));
@property (readonly) double CLUSTER_DISJOINT_TOLERANCE __attribute__((swift_name("CLUSTER_DISJOINT_TOLERANCE")));
@property (readonly) int32_t CLUSTER_LOWER_BOUND __attribute__((swift_name("CLUSTER_LOWER_BOUND")));
@property double COLLISION_ANGLE_MAX_DISTANCE_CHECKED __attribute__((swift_name("COLLISION_ANGLE_MAX_DISTANCE_CHECKED")));
@property int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@property int32_t COLLISION_TIMER __attribute__((swift_name("COLLISION_TIMER")));
@property (readonly) int32_t CONVEX_TIMER __attribute__((swift_name("CONVEX_TIMER")));
@property (readonly) int32_t DATA_COMPENSATION_HISTORY_SIZE __attribute__((swift_name("DATA_COMPENSATION_HISTORY_SIZE")));
@property (readonly) int32_t DATA_HISTORY_SIZE __attribute__((swift_name("DATA_HISTORY_SIZE")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) double DISTANCE_FOR_MAX_SPEED __attribute__((swift_name("DISTANCE_FOR_MAX_SPEED")));
@property (readonly) double DRIFT_COMPENSATION_ALTITUDE_LIMIT __attribute__((swift_name("DRIFT_COMPENSATION_ALTITUDE_LIMIT")));
@property (readonly) int64_t DRIFT_COMPENSATION_INTERVAL __attribute__((swift_name("DRIFT_COMPENSATION_INTERVAL")));
@property (readonly) double DRIFT_COMPENSATION_VARIANCE_THRESHOLD __attribute__((swift_name("DRIFT_COMPENSATION_VARIANCE_THRESHOLD")));
@property (readonly) int32_t FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD __attribute__((swift_name("FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD")));
@property int32_t GENERIC_EXIT_TOLERANCE __attribute__((swift_name("GENERIC_EXIT_TOLERANCE")));
@property (readonly) double HEAD_ON_CHECK_DISTANCE_MODIFIER __attribute__((swift_name("HEAD_ON_CHECK_DISTANCE_MODIFIER")));
@property double HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("HEAD_ON_COLLISION_MAX_INCOMING_ANGLE")));
@property (readonly) int32_t HEAD_ON_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("HEAD_ON_COLLISION_STABILITY_TOLERANCE")));
@property int32_t HEALTHY_POSITION_AMOUNT __attribute__((swift_name("HEALTHY_POSITION_AMOUNT")));
@property double HYPERBOLA_ANGLE __attribute__((swift_name("HYPERBOLA_ANGLE")));
@property double HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("HYPERBOLA_INNER_CONSTANT")));
@property double HYPERBOLA_X_SHIFT __attribute__((swift_name("HYPERBOLA_X_SHIFT")));
@property double HYPERBOLA_Y_SHIFT __attribute__((swift_name("HYPERBOLA_Y_SHIFT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *JACKET_POCKET_NN_COEFFICIENTS __attribute__((swift_name("JACKET_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *JACKET_POCKET_NN_INTERCEPTS __attribute__((swift_name("JACKET_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_MEANS __attribute__((swift_name("JACKET_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_SCALES __attribute__((swift_name("JACKET_POCKET_SCALER_SCALES")));
@property float MAGIC_CONSTANT __attribute__((swift_name("MAGIC_CONSTANT")));
@property int32_t MAX_NUMBER_OF_POINTS __attribute__((swift_name("MAX_NUMBER_OF_POINTS")));
@property double MAX_SPEED_OFFSET __attribute__((swift_name("MAX_SPEED_OFFSET")));
@property (readonly) int32_t MAX_TRIES_BEFORE_FORCED_SPAWN __attribute__((swift_name("MAX_TRIES_BEFORE_FORCED_SPAWN")));
@property double NARROW_ISLE_THRESHOLD __attribute__((swift_name("NARROW_ISLE_THRESHOLD")));
@property (readonly) int32_t NUMBER_OF_FORCED_SPAWNS __attribute__((swift_name("NUMBER_OF_FORCED_SPAWNS")));
@property double OPTIMAL_CLUSTER_RADIUS __attribute__((swift_name("OPTIMAL_CLUSTER_RADIUS")));
@property (readonly) double PID_DISTANCE_RESOLUTION __attribute__((swift_name("PID_DISTANCE_RESOLUTION")));
@property (readonly) double PID_DISTANCE_THRESHOLD __attribute__((swift_name("PID_DISTANCE_THRESHOLD")));
@property (readonly) int32_t POCKET_GHETTO_OFFSET __attribute__((swift_name("POCKET_GHETTO_OFFSET")));
@property (readonly) double POCKET_LP_CUTOFF __attribute__((swift_name("POCKET_LP_CUTOFF")));
@property double PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("PRIO_CLUSTER_SIZE_PROP_THRESHOLD")));
@property int32_t REBOOT_CLUSTER_SIZE __attribute__((swift_name("REBOOT_CLUSTER_SIZE")));
@property (readonly) int32_t RECOVERY_MAP_SIZE_THRESHOLD __attribute__((swift_name("RECOVERY_MAP_SIZE_THRESHOLD")));
@property double RECOVERY_SPREAD_DISTANCE __attribute__((swift_name("RECOVERY_SPREAD_DISTANCE")));
@property double RECOVERY_SPREAD_RADIUS __attribute__((swift_name("RECOVERY_SPREAD_RADIUS")));
@property (readonly) double RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE")));
@property (readonly) float REGULAR_ELLIPSE_ALPHA __attribute__((swift_name("REGULAR_ELLIPSE_ALPHA")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_X __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_X")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_Y __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_Y")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_A __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_A")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *REGULAR_NN_COEFFICIENTS __attribute__((swift_name("REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_NN_INTERCEPTS __attribute__((swift_name("REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_MEANS __attribute__((swift_name("REGULAR_NN_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_SCALES __attribute__((swift_name("REGULAR_NN_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_PCA_COMPONENTS __attribute__((swift_name("REGULAR_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_MEANS __attribute__((swift_name("REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_SCALES __attribute__((swift_name("REGULAR_SCALER_SCALES")));
@property float REGULAR_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_COEFFICIENT")));
@property float REGULAR_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SVM_DUAL_COEF __attribute__((swift_name("REGULAR_SVM_DUAL_COEF")));
@property (readonly) float REGULAR_SVM_INTERCEPT __attribute__((swift_name("REGULAR_SVM_INTERCEPT")));
@property (readonly) VSPKFloat *(^REGULAR_SVM_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("REGULAR_SVM_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_SVM_SUPPORT __attribute__((swift_name("REGULAR_SVM_SUPPORT")));
@property (readonly) int32_t RESCUE_MODE_MAX_ALL_COLLIDED_TRIES __attribute__((swift_name("RESCUE_MODE_MAX_ALL_COLLIDED_TRIES")));
@property (readonly) double RESCUE_SPREAD_DISTANCE __attribute__((swift_name("RESCUE_SPREAD_DISTANCE")));
@property (readonly) double RESCUE_SPREAD_RADIUS __attribute__((swift_name("RESCUE_SPREAD_RADIUS")));
@property (readonly) int32_t RETURN_FROM_COLLISION_SENSITIVITY __attribute__((swift_name("RETURN_FROM_COLLISION_SENSITIVITY")));
@property (readonly) int32_t SIDE_COLLISION_MAX_AGE __attribute__((swift_name("SIDE_COLLISION_MAX_AGE")));
@property int32_t SIDE_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("SIDE_COLLISION_STABILITY_TOLERANCE")));
@property double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@property double SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER")));
@property double SMALL_CLUSTER_DIRECTIONAL_RADIUS __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_RADIUS")));
@property (readonly) int32_t SMALL_CLUSTER_SIZE __attribute__((swift_name("SMALL_CLUSTER_SIZE")));
@property (readonly) double SPEED_PID_MAX_OFFSET __attribute__((swift_name("SPEED_PID_MAX_OFFSET")));
@property double SPEED_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("SPEED_PID_PROPORTIONAL_CONSTANT")));
@property double SPLIT_ANGLE __attribute__((swift_name("SPLIT_ANGLE")));
@property float SPLIT_METERS __attribute__((swift_name("SPLIT_METERS")));
@property int32_t STABLE_DIRECTION_TICK_THRESHOLD __attribute__((swift_name("STABLE_DIRECTION_TICK_THRESHOLD")));
@property (readonly) double STABLE_VARIANCE_THRESHOLD __attribute__((swift_name("STABLE_VARIANCE_THRESHOLD")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) int32_t SWING_ANTI_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_ANTI_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_ANTI_SYM_LP_CUTOFF __attribute__((swift_name("SWING_ANTI_SYM_LP_CUTOFF")));
@property (readonly) VSPKKotlinFloatArray *SWING_AXIS __attribute__((swift_name("SWING_AXIS")));
@property (readonly) VSPKFloat *(^SWING_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("SWING_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_PCA_COMPONENTS __attribute__((swift_name("SWING_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_MEANS __attribute__((swift_name("SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_SCALES __attribute__((swift_name("SWING_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SVM_DUAL_COEF __attribute__((swift_name("SWING_SVM_DUAL_COEF")));
@property (readonly) float SWING_SVM_INTERCEPT __attribute__((swift_name("SWING_SVM_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SVM_SUPPORT __attribute__((swift_name("SWING_SVM_SUPPORT")));
@property (readonly) int32_t SWING_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_SYM_LP_CUTOFF __attribute__((swift_name("SWING_SYM_LP_CUTOFF")));
@property float SWING_WEAK_X0 __attribute__((swift_name("SWING_WEAK_X0")));
@property float SWING_WEAK_Y0 __attribute__((swift_name("SWING_WEAK_Y0")));
@property float SWING_WEAK_Y1 __attribute__((swift_name("SWING_WEAK_Y1")));
@property float SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) float SYM_SWING_LENIENT_ELLIPSE_A __attribute__((swift_name("SYM_SWING_LENIENT_ELLIPSE_A")));
@property (readonly) float SYM_SWING_LENIENT_ELLIPSE_ALPHA __attribute__((swift_name("SYM_SWING_LENIENT_ELLIPSE_ALPHA")));
@property (readonly) float SYM_SWING_LENIENT_ELLIPSE_B __attribute__((swift_name("SYM_SWING_LENIENT_ELLIPSE_B")));
@property (readonly) float SYM_SWING_LENIENT_ELLIPSE_X0 __attribute__((swift_name("SYM_SWING_LENIENT_ELLIPSE_X0")));
@property (readonly) float SYM_SWING_LENIENT_ELLIPSE_Y0 __attribute__((swift_name("SYM_SWING_LENIENT_ELLIPSE_Y0")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SYM_SWING_LENIENT_PCA_COMPONENTS __attribute__((swift_name("SYM_SWING_LENIENT_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_LENIENT_SCALER_MEANS __attribute__((swift_name("SYM_SWING_LENIENT_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_LENIENT_SCALER_SCALES __attribute__((swift_name("SYM_SWING_LENIENT_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *SYM_SWING_NN_COEF __attribute__((swift_name("SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_MEANS __attribute__((swift_name("SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_SCALES __attribute__((swift_name("SYM_SWING_SCALER_SCALES")));
@property (readonly) NSString *TEST_NUMBER __attribute__((swift_name("TEST_NUMBER")));
@property int64_t TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN __attribute__((swift_name("TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT")));
@property float TROLLEY_INTEGRAL_SPEED_V0 __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V0")));
@property float TROLLEY_INTEGRAL_SPEED_V_MAX __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V_MAX")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROLLEY_NN_COEF __attribute__((swift_name("TROLLEY_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROLLEY_NN_INTERCEPTS __attribute__((swift_name("TROLLEY_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROLLEY_PCA_COMPONENTS __attribute__((swift_name("TROLLEY_PCA_COMPONENTS")));
@property float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@property float TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE")));
@property float TROLLEY_RESCUE_MAX_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_MAX_DISTANCE")));
@property int32_t TROLLEY_RESCUE_RESOLUTION __attribute__((swift_name("TROLLEY_RESCUE_RESOLUTION")));
@property int64_t TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("TROLLEY_RESCUE_STABLE_CHANGE")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_MEANS __attribute__((swift_name("TROLLEY_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_SCALES __attribute__((swift_name("TROLLEY_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SVM_DUAL_COEF __attribute__((swift_name("TROLLEY_SVM_DUAL_COEF")));
@property (readonly) float TROLLEY_SVM_INTERCEPT __attribute__((swift_name("TROLLEY_SVM_INTERCEPT")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SVM_SCALER_MEANS __attribute__((swift_name("TROLLEY_SVM_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SVM_SCALER_SCALES __attribute__((swift_name("TROLLEY_SVM_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("TROUSER_POCKET_SCALER_SCALES")));
@property double TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD")));
@property double TSP_PRIORITY_DISTANCE __attribute__((swift_name("TSP_PRIORITY_DISTANCE")));
@property (readonly) int32_t USER_SETTINGS_UPDATE_TICKS __attribute__((swift_name("USER_SETTINGS_UPDATE_TICKS")));
@property float WALKING_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("WALKING_SPEED_REGRESSION_COEFFICIENT")));
@property float WALKING_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("WALKING_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) int32_t WALKING_STABILITY_TOLERANCE __attribute__((swift_name("WALKING_STABILITY_TOLERANCE")));
@property float WEAK_X __attribute__((swift_name("WEAK_X")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RetailQPSValues")))
@interface VSPKRetailQPSValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)retailQPSValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRetailQPSValues *shared __attribute__((swift_name("shared")));
@property (readonly) double ACCEPTANCE_SLIDING_RATIO __attribute__((swift_name("ACCEPTANCE_SLIDING_RATIO")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_ANTI_SYM_SWING_NN_COEF __attribute__((swift_name("ANDROID_ANTI_SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_ANTI_SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("ANDROID_ANTI_SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_ANTI_SYM_SWING_SCALER_MEANS __attribute__((swift_name("ANDROID_ANTI_SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_ANTI_SYM_SWING_SCALER_SCALES __attribute__((swift_name("ANDROID_ANTI_SYM_SWING_SCALER_SCALES")));
@property (readonly) float ANDROID_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_B")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_REGULAR_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_NN_INTERCEPTS __attribute__((swift_name("ANDROID_REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_SYM_SWING_NN_COEF __attribute__((swift_name("ANDROID_SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("ANDROID_SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_SYM_SWING_SCALER_MEANS __attribute__((swift_name("ANDROID_SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_SYM_SWING_SCALER_SCALES __attribute__((swift_name("ANDROID_SYM_SWING_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("ANDROID_TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("ANDROID_TROUSER_POCKET_SCALER_SCALES")));
@property double ANGLE_OFFSET_MAGNITUDE __attribute__((swift_name("ANGLE_OFFSET_MAGNITUDE")));
@property (readonly) double ANGLE_PID_DERIVATIVE_CONSTANT __attribute__((swift_name("ANGLE_PID_DERIVATIVE_CONSTANT")));
@property (readonly) double ANGLE_PID_INTEGRATION_CONSTANT __attribute__((swift_name("ANGLE_PID_INTEGRATION_CONSTANT")));
@property double ANGLE_PID_MAX_OFFSET __attribute__((swift_name("ANGLE_PID_MAX_OFFSET")));
@property double ANGLE_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("ANGLE_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property float ANTI_SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float ANTI_SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANTI_SYM_SWING_NN_COEF __attribute__((swift_name("ANTI_SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANTI_SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("ANTI_SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_MEANS __attribute__((swift_name("ANTI_SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANTI_SYM_SWING_SCALER_SCALES __attribute__((swift_name("ANTI_SYM_SWING_SCALER_SCALES")));
@property (readonly) double CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("CHANGE_THRESHOLD_PERCENTAGE")));
@property double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) int32_t CLUSTER_DEATH_BOUND __attribute__((swift_name("CLUSTER_DEATH_BOUND")));
@property (readonly) double CLUSTER_DISJOINT_TOLERANCE __attribute__((swift_name("CLUSTER_DISJOINT_TOLERANCE")));
@property (readonly) int32_t CLUSTER_LOWER_BOUND __attribute__((swift_name("CLUSTER_LOWER_BOUND")));
@property double COLLISION_ANGLE_MAX_DISTANCE_CHECKED __attribute__((swift_name("COLLISION_ANGLE_MAX_DISTANCE_CHECKED")));
@property int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@property int32_t COLLISION_TIMER __attribute__((swift_name("COLLISION_TIMER")));
@property (readonly) int32_t CONVEX_TIMER __attribute__((swift_name("CONVEX_TIMER")));
@property (readonly) int32_t DATA_COMPENSATION_HISTORY_SIZE __attribute__((swift_name("DATA_COMPENSATION_HISTORY_SIZE")));
@property (readonly) int32_t DATA_HISTORY_SIZE __attribute__((swift_name("DATA_HISTORY_SIZE")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) double DISTANCE_FOR_MAX_SPEED __attribute__((swift_name("DISTANCE_FOR_MAX_SPEED")));
@property (readonly) double DRIFT_COMPENSATION_ALTITUDE_LIMIT __attribute__((swift_name("DRIFT_COMPENSATION_ALTITUDE_LIMIT")));
@property (readonly) int64_t DRIFT_COMPENSATION_INTERVAL __attribute__((swift_name("DRIFT_COMPENSATION_INTERVAL")));
@property (readonly) double DRIFT_COMPENSATION_VARIANCE_THRESHOLD __attribute__((swift_name("DRIFT_COMPENSATION_VARIANCE_THRESHOLD")));
@property (readonly) int32_t FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD __attribute__((swift_name("FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD")));
@property int32_t GENERIC_EXIT_TOLERANCE __attribute__((swift_name("GENERIC_EXIT_TOLERANCE")));
@property (readonly) double HEAD_ON_CHECK_DISTANCE_MODIFIER __attribute__((swift_name("HEAD_ON_CHECK_DISTANCE_MODIFIER")));
@property double HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("HEAD_ON_COLLISION_MAX_INCOMING_ANGLE")));
@property (readonly) int32_t HEAD_ON_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("HEAD_ON_COLLISION_STABILITY_TOLERANCE")));
@property int32_t HEALTHY_POSITION_AMOUNT __attribute__((swift_name("HEALTHY_POSITION_AMOUNT")));
@property double HYPERBOLA_ANGLE __attribute__((swift_name("HYPERBOLA_ANGLE")));
@property double HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("HYPERBOLA_INNER_CONSTANT")));
@property double HYPERBOLA_X_SHIFT __attribute__((swift_name("HYPERBOLA_X_SHIFT")));
@property double HYPERBOLA_Y_SHIFT __attribute__((swift_name("HYPERBOLA_Y_SHIFT")));
@property BOOL INHERITED_SPEED_FORCE_ENABLE __attribute__((swift_name("INHERITED_SPEED_FORCE_ENABLE")));
@property double INHERITED_SPEED_INCREMENT __attribute__((swift_name("INHERITED_SPEED_INCREMENT")));
@property double INHERITED_SPEED_MAX_ADJUST __attribute__((swift_name("INHERITED_SPEED_MAX_ADJUST")));
@property double INHERITED_SPEED_START_STD __attribute__((swift_name("INHERITED_SPEED_START_STD")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *JACKET_POCKET_NN_COEFFICIENTS __attribute__((swift_name("JACKET_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *JACKET_POCKET_NN_INTERCEPTS __attribute__((swift_name("JACKET_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_MEANS __attribute__((swift_name("JACKET_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *JACKET_POCKET_SCALER_SCALES __attribute__((swift_name("JACKET_POCKET_SCALER_SCALES")));
@property float MAGIC_CONSTANT __attribute__((swift_name("MAGIC_CONSTANT")));
@property int32_t MAX_NUMBER_OF_POINTS __attribute__((swift_name("MAX_NUMBER_OF_POINTS")));
@property double MAX_SPEED_OFFSET __attribute__((swift_name("MAX_SPEED_OFFSET")));
@property (readonly) int32_t MAX_TRIES_BEFORE_FORCED_SPAWN __attribute__((swift_name("MAX_TRIES_BEFORE_FORCED_SPAWN")));
@property double NARROW_ISLE_THRESHOLD __attribute__((swift_name("NARROW_ISLE_THRESHOLD")));
@property (readonly) int32_t NUMBER_OF_FORCED_SPAWNS __attribute__((swift_name("NUMBER_OF_FORCED_SPAWNS")));
@property double OPTIMAL_CLUSTER_RADIUS __attribute__((swift_name("OPTIMAL_CLUSTER_RADIUS")));
@property (readonly) double PID_DISTANCE_RESOLUTION __attribute__((swift_name("PID_DISTANCE_RESOLUTION")));
@property (readonly) double PID_DISTANCE_THRESHOLD __attribute__((swift_name("PID_DISTANCE_THRESHOLD")));
@property (readonly) int32_t POCKET_GHETTO_OFFSET __attribute__((swift_name("POCKET_GHETTO_OFFSET")));
@property (readonly) double POCKET_LP_CUTOFF __attribute__((swift_name("POCKET_LP_CUTOFF")));
@property double PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("PRIO_CLUSTER_SIZE_PROP_THRESHOLD")));
@property int32_t REBOOT_CLUSTER_SIZE __attribute__((swift_name("REBOOT_CLUSTER_SIZE")));
@property (readonly) int32_t RECOVERY_MAP_SIZE_THRESHOLD __attribute__((swift_name("RECOVERY_MAP_SIZE_THRESHOLD")));
@property double RECOVERY_SPREAD_DISTANCE __attribute__((swift_name("RECOVERY_SPREAD_DISTANCE")));
@property double RECOVERY_SPREAD_RADIUS __attribute__((swift_name("RECOVERY_SPREAD_RADIUS")));
@property (readonly) double RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE")));
@property (readonly) float REGULAR_ELLIPSE_ALPHA __attribute__((swift_name("REGULAR_ELLIPSE_ALPHA")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_X __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_X")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_Y __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_Y")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_A __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_A")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *REGULAR_NN_COEFFICIENTS __attribute__((swift_name("REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_NN_INTERCEPTS __attribute__((swift_name("REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_MEANS __attribute__((swift_name("REGULAR_NN_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_SCALES __attribute__((swift_name("REGULAR_NN_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_PCA_COMPONENTS __attribute__((swift_name("REGULAR_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_MEANS __attribute__((swift_name("REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_SCALES __attribute__((swift_name("REGULAR_SCALER_SCALES")));
@property float REGULAR_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_COEFFICIENT")));
@property float REGULAR_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SVM_DUAL_COEF __attribute__((swift_name("REGULAR_SVM_DUAL_COEF")));
@property (readonly) float REGULAR_SVM_INTERCEPT __attribute__((swift_name("REGULAR_SVM_INTERCEPT")));
@property (readonly) VSPKFloat *(^REGULAR_SVM_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("REGULAR_SVM_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_SVM_SUPPORT __attribute__((swift_name("REGULAR_SVM_SUPPORT")));
@property (readonly) int32_t RESCUE_MODE_MAX_ALL_COLLIDED_TRIES __attribute__((swift_name("RESCUE_MODE_MAX_ALL_COLLIDED_TRIES")));
@property (readonly) double RESCUE_SPREAD_DISTANCE __attribute__((swift_name("RESCUE_SPREAD_DISTANCE")));
@property (readonly) double RESCUE_SPREAD_RADIUS __attribute__((swift_name("RESCUE_SPREAD_RADIUS")));
@property (readonly) int32_t RETURN_FROM_COLLISION_SENSITIVITY __attribute__((swift_name("RETURN_FROM_COLLISION_SENSITIVITY")));
@property (readonly) int32_t SIDE_COLLISION_MAX_AGE __attribute__((swift_name("SIDE_COLLISION_MAX_AGE")));
@property int32_t SIDE_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("SIDE_COLLISION_STABILITY_TOLERANCE")));
@property double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@property double SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER")));
@property double SMALL_CLUSTER_DIRECTIONAL_RADIUS __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_RADIUS")));
@property (readonly) int32_t SMALL_CLUSTER_SIZE __attribute__((swift_name("SMALL_CLUSTER_SIZE")));
@property (readonly) double SPEED_PID_MAX_OFFSET __attribute__((swift_name("SPEED_PID_MAX_OFFSET")));
@property double SPEED_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("SPEED_PID_PROPORTIONAL_CONSTANT")));
@property double SPLIT_ANGLE __attribute__((swift_name("SPLIT_ANGLE")));
@property float SPLIT_METERS __attribute__((swift_name("SPLIT_METERS")));
@property int32_t STABLE_DIRECTION_TICK_THRESHOLD __attribute__((swift_name("STABLE_DIRECTION_TICK_THRESHOLD")));
@property (readonly) double STABLE_VARIANCE_THRESHOLD __attribute__((swift_name("STABLE_VARIANCE_THRESHOLD")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_ALPHA __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_ALPHA")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_X __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_X")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_Y __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_Y")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_A __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_A")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_B __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_B")));
@property (readonly) int32_t SWING_ANTI_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_ANTI_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_ANTI_SYM_LP_CUTOFF __attribute__((swift_name("SWING_ANTI_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES")));
@property (readonly) VSPKKotlinFloatArray *SWING_AXIS __attribute__((swift_name("SWING_AXIS")));
@property (readonly) VSPKFloat *(^SWING_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("SWING_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_PCA_COMPONENTS __attribute__((swift_name("SWING_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_MEANS __attribute__((swift_name("SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_SCALES __attribute__((swift_name("SWING_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SVM_DUAL_COEF __attribute__((swift_name("SWING_SVM_DUAL_COEF")));
@property (readonly) float SWING_SVM_INTERCEPT __attribute__((swift_name("SWING_SVM_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SVM_SUPPORT __attribute__((swift_name("SWING_SVM_SUPPORT")));
@property (readonly) int32_t SWING_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_SYM_HYPERBOLA_ANGLE __attribute__((swift_name("SWING_SYM_HYPERBOLA_ANGLE")));
@property (readonly) double SWING_SYM_HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("SWING_SYM_HYPERBOLA_INNER_CONSTANT")));
@property (readonly) double SWING_SYM_HYPERBOLA_X_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_X_SHIFT")));
@property (readonly) double SWING_SYM_HYPERBOLA_Y_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_Y_SHIFT")));
@property (readonly) double SWING_SYM_LP_CUTOFF __attribute__((swift_name("SWING_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SYM_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_SYM_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_SCALES")));
@property float SWING_WEAK_X0 __attribute__((swift_name("SWING_WEAK_X0")));
@property float SWING_WEAK_Y0 __attribute__((swift_name("SWING_WEAK_Y0")));
@property float SWING_WEAK_Y1 __attribute__((swift_name("SWING_WEAK_Y1")));
@property float SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *SYM_SWING_NN_COEF __attribute__((swift_name("SYM_SWING_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SYM_SWING_NN_INTERCEPTS __attribute__((swift_name("SYM_SWING_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_MEANS __attribute__((swift_name("SYM_SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SYM_SWING_SCALER_SCALES __attribute__((swift_name("SYM_SWING_SCALER_SCALES")));
@property (readonly) NSString *TEST_NUMBER __attribute__((swift_name("TEST_NUMBER")));
@property int64_t TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN __attribute__((swift_name("TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT")));
@property float TROLLEY_INTEGRAL_SPEED_V0 __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V0")));
@property float TROLLEY_INTEGRAL_SPEED_V_MAX __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V_MAX")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROLLEY_NN_COEF __attribute__((swift_name("TROLLEY_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROLLEY_NN_INTERCEPTS __attribute__((swift_name("TROLLEY_NN_INTERCEPTS")));
@property float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@property float TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE")));
@property float TROLLEY_RESCUE_MAX_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_MAX_DISTANCE")));
@property int32_t TROLLEY_RESCUE_RESOLUTION __attribute__((swift_name("TROLLEY_RESCUE_RESOLUTION")));
@property int64_t TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("TROLLEY_RESCUE_STABLE_CHANGE")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_MEANS __attribute__((swift_name("TROLLEY_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_SCALES __attribute__((swift_name("TROLLEY_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROUSER_POCKET_NN_COEFFICIENTS __attribute__((swift_name("TROUSER_POCKET_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROUSER_POCKET_NN_INTERCEPTS __attribute__((swift_name("TROUSER_POCKET_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_MEANS __attribute__((swift_name("TROUSER_POCKET_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROUSER_POCKET_SCALER_SCALES __attribute__((swift_name("TROUSER_POCKET_SCALER_SCALES")));
@property double TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD")));
@property double TSP_PRIORITY_DISTANCE __attribute__((swift_name("TSP_PRIORITY_DISTANCE")));
@property (readonly) int32_t USER_SETTINGS_UPDATE_TICKS __attribute__((swift_name("USER_SETTINGS_UPDATE_TICKS")));
@property float WALKING_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("WALKING_SPEED_REGRESSION_COEFFICIENT")));
@property float WALKING_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("WALKING_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) int32_t WALKING_STABILITY_TOLERANCE __attribute__((swift_name("WALKING_STABILITY_TOLERANCE")));
@property float WEAK_X __attribute__((swift_name("WEAK_X")));
@property (readonly) float speed_bias __attribute__((swift_name("speed_bias")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WarehouseQPSValues")))
@interface VSPKWarehouseQPSValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)warehouseQPSValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKWarehouseQPSValues *shared __attribute__((swift_name("shared")));
@property (readonly) double ACCEPTANCE_SLIDING_RATIO __attribute__((swift_name("ACCEPTANCE_SLIDING_RATIO")));
@property (readonly) float ANDROID_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *ANDROID_REGULAR_NN_COEFFICIENTS __attribute__((swift_name("ANDROID_REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_NN_INTERCEPTS __attribute__((swift_name("ANDROID_REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_SCALER_SCALES")));
@property (readonly) double ANGLE_OFFSET_MAGNITUDE __attribute__((swift_name("ANGLE_OFFSET_MAGNITUDE")));
@property (readonly) double ANGLE_PID_DERIVATIVE_CONSTANT __attribute__((swift_name("ANGLE_PID_DERIVATIVE_CONSTANT")));
@property (readonly) double ANGLE_PID_INTEGRATION_CONSTANT __attribute__((swift_name("ANGLE_PID_INTEGRATION_CONSTANT")));
@property double ANGLE_PID_MAX_OFFSET __attribute__((swift_name("ANGLE_PID_MAX_OFFSET")));
@property double ANGLE_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("ANGLE_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property float ANTI_SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float ANTI_SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) double CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("CHANGE_THRESHOLD_PERCENTAGE")));
@property double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) int32_t CLUSTER_DEATH_BOUND __attribute__((swift_name("CLUSTER_DEATH_BOUND")));
@property (readonly) double CLUSTER_DISJOINT_TOLERANCE __attribute__((swift_name("CLUSTER_DISJOINT_TOLERANCE")));
@property (readonly) int32_t CLUSTER_LOWER_BOUND __attribute__((swift_name("CLUSTER_LOWER_BOUND")));
@property (readonly) double COLLISION_ANGLE_MAX_DISTANCE_CHECKED __attribute__((swift_name("COLLISION_ANGLE_MAX_DISTANCE_CHECKED")));
@property (readonly) int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@property (readonly) int32_t COLLISION_TIMER __attribute__((swift_name("COLLISION_TIMER")));
@property (readonly) int32_t CONVEX_TIMER __attribute__((swift_name("CONVEX_TIMER")));
@property (readonly) int32_t DATA_COMPENSATION_HISTORY_SIZE __attribute__((swift_name("DATA_COMPENSATION_HISTORY_SIZE")));
@property (readonly) int32_t DATA_HISTORY_SIZE __attribute__((swift_name("DATA_HISTORY_SIZE")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) double DISTANCE_FOR_MAX_SPEED __attribute__((swift_name("DISTANCE_FOR_MAX_SPEED")));
@property (readonly) double DRIFT_COMPENSATION_ALTITUDE_LIMIT __attribute__((swift_name("DRIFT_COMPENSATION_ALTITUDE_LIMIT")));
@property (readonly) int64_t DRIFT_COMPENSATION_INTERVAL __attribute__((swift_name("DRIFT_COMPENSATION_INTERVAL")));
@property (readonly) double DRIFT_COMPENSATION_VARIANCE_THRESHOLD __attribute__((swift_name("DRIFT_COMPENSATION_VARIANCE_THRESHOLD")));
@property (readonly) int32_t FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD __attribute__((swift_name("FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD")));
@property (readonly) int32_t GENERIC_EXIT_TOLERANCE __attribute__((swift_name("GENERIC_EXIT_TOLERANCE")));
@property (readonly) double HEAD_ON_CHECK_DISTANCE_MODIFIER __attribute__((swift_name("HEAD_ON_CHECK_DISTANCE_MODIFIER")));
@property (readonly) double HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("HEAD_ON_COLLISION_MAX_INCOMING_ANGLE")));
@property (readonly) int32_t HEAD_ON_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("HEAD_ON_COLLISION_STABILITY_TOLERANCE")));
@property int32_t HEALTHY_POSITION_AMOUNT __attribute__((swift_name("HEALTHY_POSITION_AMOUNT")));
@property double HYPERBOLA_ANGLE __attribute__((swift_name("HYPERBOLA_ANGLE")));
@property double HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("HYPERBOLA_INNER_CONSTANT")));
@property double HYPERBOLA_X_SHIFT __attribute__((swift_name("HYPERBOLA_X_SHIFT")));
@property double HYPERBOLA_Y_SHIFT __attribute__((swift_name("HYPERBOLA_Y_SHIFT")));
@property float MAGIC_CONSTANT __attribute__((swift_name("MAGIC_CONSTANT")));
@property int32_t MAX_NUMBER_OF_POINTS __attribute__((swift_name("MAX_NUMBER_OF_POINTS")));
@property double MAX_SPEED_OFFSET __attribute__((swift_name("MAX_SPEED_OFFSET")));
@property (readonly) int32_t MAX_TRIES_BEFORE_FORCED_SPAWN __attribute__((swift_name("MAX_TRIES_BEFORE_FORCED_SPAWN")));
@property double NARROW_ISLE_THRESHOLD __attribute__((swift_name("NARROW_ISLE_THRESHOLD")));
@property (readonly) int32_t NUMBER_OF_FORCED_SPAWNS __attribute__((swift_name("NUMBER_OF_FORCED_SPAWNS")));
@property (readonly) double OPTIMAL_CLUSTER_RADIUS __attribute__((swift_name("OPTIMAL_CLUSTER_RADIUS")));
@property (readonly) double PID_DISTANCE_RESOLUTION __attribute__((swift_name("PID_DISTANCE_RESOLUTION")));
@property (readonly) double PID_DISTANCE_THRESHOLD __attribute__((swift_name("PID_DISTANCE_THRESHOLD")));
@property double PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("PRIO_CLUSTER_SIZE_PROP_THRESHOLD")));
@property int32_t REBOOT_CLUSTER_SIZE __attribute__((swift_name("REBOOT_CLUSTER_SIZE")));
@property (readonly) int32_t RECOVERY_MAP_SIZE_THRESHOLD __attribute__((swift_name("RECOVERY_MAP_SIZE_THRESHOLD")));
@property double RECOVERY_SPREAD_DISTANCE __attribute__((swift_name("RECOVERY_SPREAD_DISTANCE")));
@property double RECOVERY_SPREAD_RADIUS __attribute__((swift_name("RECOVERY_SPREAD_RADIUS")));
@property (readonly) double RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE")));
@property (readonly) float REGULAR_ELLIPSE_ALPHA __attribute__((swift_name("REGULAR_ELLIPSE_ALPHA")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_X __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_X")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_Y __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_Y")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_A __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_A")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *REGULAR_NN_COEFFICIENTS __attribute__((swift_name("REGULAR_NN_COEFFICIENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_NN_INTERCEPTS __attribute__((swift_name("REGULAR_NN_INTERCEPTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_MEANS __attribute__((swift_name("REGULAR_NN_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_NN_SCALER_SCALES __attribute__((swift_name("REGULAR_NN_SCALER_SCALES")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_PCA_COMPONENTS __attribute__((swift_name("REGULAR_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_MEANS __attribute__((swift_name("REGULAR_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SCALER_SCALES __attribute__((swift_name("REGULAR_SCALER_SCALES")));
@property float REGULAR_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_COEFFICIENT")));
@property float REGULAR_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_SVM_DUAL_COEF __attribute__((swift_name("REGULAR_SVM_DUAL_COEF")));
@property (readonly) float REGULAR_SVM_INTERCEPT __attribute__((swift_name("REGULAR_SVM_INTERCEPT")));
@property (readonly) VSPKFloat *(^REGULAR_SVM_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("REGULAR_SVM_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_SVM_SUPPORT __attribute__((swift_name("REGULAR_SVM_SUPPORT")));
@property (readonly) int32_t RESCUE_MODE_MAX_ALL_COLLIDED_TRIES __attribute__((swift_name("RESCUE_MODE_MAX_ALL_COLLIDED_TRIES")));
@property (readonly) double RESCUE_SPREAD_DISTANCE __attribute__((swift_name("RESCUE_SPREAD_DISTANCE")));
@property (readonly) double RESCUE_SPREAD_RADIUS __attribute__((swift_name("RESCUE_SPREAD_RADIUS")));
@property (readonly) int32_t RETURN_FROM_COLLISION_SENSITIVITY __attribute__((swift_name("RETURN_FROM_COLLISION_SENSITIVITY")));
@property (readonly) int32_t SIDE_COLLISION_MAX_AGE __attribute__((swift_name("SIDE_COLLISION_MAX_AGE")));
@property (readonly) int32_t SIDE_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("SIDE_COLLISION_STABILITY_TOLERANCE")));
@property double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@property double SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER")));
@property double SMALL_CLUSTER_DIRECTIONAL_RADIUS __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_RADIUS")));
@property (readonly) int32_t SMALL_CLUSTER_SIZE __attribute__((swift_name("SMALL_CLUSTER_SIZE")));
@property (readonly) double SPEED_PID_MAX_OFFSET __attribute__((swift_name("SPEED_PID_MAX_OFFSET")));
@property double SPEED_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("SPEED_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) double SPLIT_ANGLE __attribute__((swift_name("SPLIT_ANGLE")));
@property float SPLIT_METERS __attribute__((swift_name("SPLIT_METERS")));
@property int32_t STABLE_DIRECTION_TICK_THRESHOLD __attribute__((swift_name("STABLE_DIRECTION_TICK_THRESHOLD")));
@property (readonly) double STABLE_VARIANCE_THRESHOLD __attribute__((swift_name("STABLE_VARIANCE_THRESHOLD")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) VSPKKotlinFloatArray *SWING_AXIS __attribute__((swift_name("SWING_AXIS")));
@property (readonly) VSPKFloat *(^SWING_KERNEL)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("SWING_KERNEL")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_PCA_COMPONENTS __attribute__((swift_name("SWING_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_REEVALUATION_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_MEANS __attribute__((swift_name("SWING_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SCALER_SCALES __attribute__((swift_name("SWING_SCALER_SCALES")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SVM_DUAL_COEF __attribute__((swift_name("SWING_SVM_DUAL_COEF")));
@property (readonly) float SWING_SVM_INTERCEPT __attribute__((swift_name("SWING_SVM_INTERCEPT")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SVM_SUPPORT __attribute__((swift_name("SWING_SVM_SUPPORT")));
@property float SWING_WEAK_X0 __attribute__((swift_name("SWING_WEAK_X0")));
@property float SWING_WEAK_Y0 __attribute__((swift_name("SWING_WEAK_Y0")));
@property float SWING_WEAK_Y1 __attribute__((swift_name("SWING_WEAK_Y1")));
@property float SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("SYM_SPEED_REGRESSION_COEFFICIENT")));
@property float SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) NSString *TEST_NUMBER __attribute__((swift_name("TEST_NUMBER")));
@property int64_t TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN __attribute__((swift_name("TIMED_DIRECTION_HISTORY_HANDLER_DEFAULT_TIMESPAN")));
@property int64_t TROLLEY_FILL_TIME __attribute__((swift_name("TROLLEY_FILL_TIME")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA")));
@property float TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT")));
@property float TROLLEY_INTEGRAL_SPEED_V0 __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V0")));
@property float TROLLEY_INTEGRAL_SPEED_V_MAX __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V_MAX")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *TROLLEY_NN_COEF __attribute__((swift_name("TROLLEY_NN_COEF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *TROLLEY_NN_INTERCEPTS __attribute__((swift_name("TROLLEY_NN_INTERCEPTS")));
@property float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@property float TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE")));
@property float TROLLEY_RESCUE_MAX_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_MAX_DISTANCE")));
@property int32_t TROLLEY_RESCUE_RESOLUTION __attribute__((swift_name("TROLLEY_RESCUE_RESOLUTION")));
@property int64_t TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("TROLLEY_RESCUE_STABLE_CHANGE")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_MEANS __attribute__((swift_name("TROLLEY_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *TROLLEY_SCALER_SCALES __attribute__((swift_name("TROLLEY_SCALER_SCALES")));
@property int32_t TROLLEY_SPEED_CALIBRATION __attribute__((swift_name("TROLLEY_SPEED_CALIBRATION")));
@property double TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD")));
@property double TSP_PRIORITY_DISTANCE __attribute__((swift_name("TSP_PRIORITY_DISTANCE")));
@property (readonly) int32_t USER_SETTINGS_UPDATE_TICKS __attribute__((swift_name("USER_SETTINGS_UPDATE_TICKS")));
@property float WALKING_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("WALKING_SPEED_REGRESSION_COEFFICIENT")));
@property float WALKING_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("WALKING_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) int32_t WALKING_STABILITY_TOLERANCE __attribute__((swift_name("WALKING_STABILITY_TOLERANCE")));
@property float WEAK_X __attribute__((swift_name("WEAK_X")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPocketMLStepDetectorParameters")))
@interface VSPKAndroidPocketMLStepDetectorParameters : VSPKBase
- (instancetype)initWithANDROID_POCKET_LP_CUTOFF:(double)ANDROID_POCKET_LP_CUTOFF ANDROID_POCKET_GHETTO_OFFSET:(int32_t)ANDROID_POCKET_GHETTO_OFFSET ANDROID_POCKET_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)ANDROID_POCKET_REEVALUATION_SCALER_SCALES ANDROID_POCKET_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)ANDROID_POCKET_REEVALUATION_SCALER_MEANS ANDROID_POCKET_ELLIPSE_CENTER_X:(float)ANDROID_POCKET_ELLIPSE_CENTER_X ANDROID_POCKET_ELLIPSE_CENTER_Y:(float)ANDROID_POCKET_ELLIPSE_CENTER_Y ANDROID_POCKET_ELLIPSE_ALPHA:(float)ANDROID_POCKET_ELLIPSE_ALPHA ANDROID_POCKET_ELLIPSE_RADIUS_A:(float)ANDROID_POCKET_ELLIPSE_RADIUS_A ANDROID_POCKET_ELLIPSE_RADIUS_B:(float)ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("init(ANDROID_POCKET_LP_CUTOFF:ANDROID_POCKET_GHETTO_OFFSET:ANDROID_POCKET_REEVALUATION_SCALER_SCALES:ANDROID_POCKET_REEVALUATION_SCALER_MEANS:ANDROID_POCKET_ELLIPSE_CENTER_X:ANDROID_POCKET_ELLIPSE_CENTER_Y:ANDROID_POCKET_ELLIPSE_ALPHA:ANDROID_POCKET_ELLIPSE_RADIUS_A:ANDROID_POCKET_ELLIPSE_RADIUS_B:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (NSMutableArray<VSPKFloat *> *)component3 __attribute__((swift_name("component3()")));
- (NSMutableArray<VSPKFloat *> *)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (float)component6 __attribute__((swift_name("component6()")));
- (float)component7 __attribute__((swift_name("component7()")));
- (float)component8 __attribute__((swift_name("component8()")));
- (float)component9 __attribute__((swift_name("component9()")));
- (VSPKAndroidPocketMLStepDetectorParameters *)doCopyANDROID_POCKET_LP_CUTOFF:(double)ANDROID_POCKET_LP_CUTOFF ANDROID_POCKET_GHETTO_OFFSET:(int32_t)ANDROID_POCKET_GHETTO_OFFSET ANDROID_POCKET_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)ANDROID_POCKET_REEVALUATION_SCALER_SCALES ANDROID_POCKET_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)ANDROID_POCKET_REEVALUATION_SCALER_MEANS ANDROID_POCKET_ELLIPSE_CENTER_X:(float)ANDROID_POCKET_ELLIPSE_CENTER_X ANDROID_POCKET_ELLIPSE_CENTER_Y:(float)ANDROID_POCKET_ELLIPSE_CENTER_Y ANDROID_POCKET_ELLIPSE_ALPHA:(float)ANDROID_POCKET_ELLIPSE_ALPHA ANDROID_POCKET_ELLIPSE_RADIUS_A:(float)ANDROID_POCKET_ELLIPSE_RADIUS_A ANDROID_POCKET_ELLIPSE_RADIUS_B:(float)ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("doCopy(ANDROID_POCKET_LP_CUTOFF:ANDROID_POCKET_GHETTO_OFFSET:ANDROID_POCKET_REEVALUATION_SCALER_SCALES:ANDROID_POCKET_REEVALUATION_SCALER_MEANS:ANDROID_POCKET_ELLIPSE_CENTER_X:ANDROID_POCKET_ELLIPSE_CENTER_Y:ANDROID_POCKET_ELLIPSE_ALPHA:ANDROID_POCKET_ELLIPSE_RADIUS_A:ANDROID_POCKET_ELLIPSE_RADIUS_B:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_POCKET_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_POCKET_ELLIPSE_RADIUS_B")));
@property (readonly) int32_t ANDROID_POCKET_GHETTO_OFFSET __attribute__((swift_name("ANDROID_POCKET_GHETTO_OFFSET")));
@property (readonly) double ANDROID_POCKET_LP_CUTOFF __attribute__((swift_name("ANDROID_POCKET_LP_CUTOFF")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_POCKET_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_POCKET_REEVALUATION_SCALER_SCALES")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidRegularMLStepDetectorParameters")))
@interface VSPKAndroidRegularMLStepDetectorParameters : VSPKBase
- (instancetype)initWithANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS ANDROID_REGULAR_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)ANDROID_REGULAR_REEVALUATION_SCALER_SCALES ANDROID_REGULAR_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)ANDROID_REGULAR_REEVALUATION_SCALER_MEANS ANDROID_ELLIPSE_CENTER_X:(float)ANDROID_ELLIPSE_CENTER_X ANDROID_ELLIPSE_CENTER_Y:(float)ANDROID_ELLIPSE_CENTER_Y ANDROID_ELLIPSE_ALPHA:(float)ANDROID_ELLIPSE_ALPHA ANDROID_ELLIPSE_RADIUS_A:(float)ANDROID_ELLIPSE_RADIUS_A ANDROID_ELLIPSE_RADIUS_B:(float)ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("init(ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS:ANDROID_REGULAR_REEVALUATION_SCALER_SCALES:ANDROID_REGULAR_REEVALUATION_SCALER_MEANS:ANDROID_ELLIPSE_CENTER_X:ANDROID_ELLIPSE_CENTER_Y:ANDROID_ELLIPSE_ALPHA:ANDROID_ELLIPSE_RADIUS_A:ANDROID_ELLIPSE_RADIUS_B:)"))) __attribute__((objc_designated_initializer));
- (NSMutableArray<NSMutableArray<VSPKFloat *> *> *)component1 __attribute__((swift_name("component1()")));
- (NSMutableArray<VSPKFloat *> *)component2 __attribute__((swift_name("component2()")));
- (NSMutableArray<VSPKFloat *> *)component3 __attribute__((swift_name("component3()")));
- (float)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (float)component6 __attribute__((swift_name("component6()")));
- (float)component7 __attribute__((swift_name("component7()")));
- (float)component8 __attribute__((swift_name("component8()")));
- (VSPKAndroidRegularMLStepDetectorParameters *)doCopyANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS ANDROID_REGULAR_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)ANDROID_REGULAR_REEVALUATION_SCALER_SCALES ANDROID_REGULAR_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)ANDROID_REGULAR_REEVALUATION_SCALER_MEANS ANDROID_ELLIPSE_CENTER_X:(float)ANDROID_ELLIPSE_CENTER_X ANDROID_ELLIPSE_CENTER_Y:(float)ANDROID_ELLIPSE_CENTER_Y ANDROID_ELLIPSE_ALPHA:(float)ANDROID_ELLIPSE_ALPHA ANDROID_ELLIPSE_RADIUS_A:(float)ANDROID_ELLIPSE_RADIUS_A ANDROID_ELLIPSE_RADIUS_B:(float)ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("doCopy(ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS:ANDROID_REGULAR_REEVALUATION_SCALER_SCALES:ANDROID_REGULAR_REEVALUATION_SCALER_MEANS:ANDROID_ELLIPSE_CENTER_X:ANDROID_ELLIPSE_CENTER_Y:ANDROID_ELLIPSE_ALPHA:ANDROID_ELLIPSE_RADIUS_A:ANDROID_ELLIPSE_RADIUS_B:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float ANDROID_ELLIPSE_ALPHA __attribute__((swift_name("ANDROID_ELLIPSE_ALPHA")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_X __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_X")));
@property (readonly) float ANDROID_ELLIPSE_CENTER_Y __attribute__((swift_name("ANDROID_ELLIPSE_CENTER_Y")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_A __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_A")));
@property (readonly) float ANDROID_ELLIPSE_RADIUS_B __attribute__((swift_name("ANDROID_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *ANDROID_REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("ANDROID_REGULAR_REEVALUATION_SCALER_SCALES")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnglePIDParameters")))
@interface VSPKAnglePIDParameters : VSPKBase
- (instancetype)initWithANGLE_PID_PROPORTIONAL_CONSTANT:(double)ANGLE_PID_PROPORTIONAL_CONSTANT ANGLE_PID_INTEGRATION_CONSTANT:(double)ANGLE_PID_INTEGRATION_CONSTANT ANGLE_PID_DERIVATIVE_CONSTANT:(double)ANGLE_PID_DERIVATIVE_CONSTANT ANGLE_PID_MAX_OFFSET:(double)ANGLE_PID_MAX_OFFSET __attribute__((swift_name("init(ANGLE_PID_PROPORTIONAL_CONSTANT:ANGLE_PID_INTEGRATION_CONSTANT:ANGLE_PID_DERIVATIVE_CONSTANT:ANGLE_PID_MAX_OFFSET:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKAnglePIDParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (double)component4 __attribute__((swift_name("component4()")));
- (VSPKAnglePIDParameters *)doCopyANGLE_PID_PROPORTIONAL_CONSTANT:(double)ANGLE_PID_PROPORTIONAL_CONSTANT ANGLE_PID_INTEGRATION_CONSTANT:(double)ANGLE_PID_INTEGRATION_CONSTANT ANGLE_PID_DERIVATIVE_CONSTANT:(double)ANGLE_PID_DERIVATIVE_CONSTANT ANGLE_PID_MAX_OFFSET:(double)ANGLE_PID_MAX_OFFSET __attribute__((swift_name("doCopy(ANGLE_PID_PROPORTIONAL_CONSTANT:ANGLE_PID_INTEGRATION_CONSTANT:ANGLE_PID_DERIVATIVE_CONSTANT:ANGLE_PID_MAX_OFFSET:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double ANGLE_PID_DERIVATIVE_CONSTANT __attribute__((swift_name("ANGLE_PID_DERIVATIVE_CONSTANT")));
@property (readonly) double ANGLE_PID_INTEGRATION_CONSTANT __attribute__((swift_name("ANGLE_PID_INTEGRATION_CONSTANT")));
@property (readonly) double ANGLE_PID_MAX_OFFSET __attribute__((swift_name("ANGLE_PID_MAX_OFFSET")));
@property (readonly) double ANGLE_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("ANGLE_PID_PROPORTIONAL_CONSTANT")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AnglePIDParameters.Companion")))
@interface VSPKAnglePIDParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAnglePIDParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AxisParameters")))
@interface VSPKAxisParameters : VSPKBase
- (instancetype)initWithSwingAxis:(VSPKKotlinFloatArray *)SwingAxis __attribute__((swift_name("init(SwingAxis:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinFloatArray *)component1 __attribute__((swift_name("component1()")));
- (VSPKAxisParameters *)doCopySwingAxis:(VSPKKotlinFloatArray *)SwingAxis __attribute__((swift_name("doCopy(SwingAxis:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKKotlinFloatArray *SwingAxis __attribute__((swift_name("SwingAxis")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClusterBootParameters")))
@interface VSPKClusterBootParameters : VSPKBase
- (instancetype)initWithSTART_SPREAD_RADIUS:(double)START_SPREAD_RADIUS START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE __attribute__((swift_name("init(START_SPREAD_RADIUS:START_SPREAD_DISTANCE:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (VSPKClusterBootParameters *)doCopySTART_SPREAD_RADIUS:(double)START_SPREAD_RADIUS START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE __attribute__((swift_name("doCopy(START_SPREAD_RADIUS:START_SPREAD_DISTANCE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DirectionPrioParameters")))
@interface VSPKDirectionPrioParameters : VSPKBase
- (instancetype)initWithPRIO_CLUSTER_SIZE_PROP_THRESHOLD:(double)PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("init(PRIO_CLUSTER_SIZE_PROP_THRESHOLD:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDirectionPrioParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (VSPKDirectionPrioParameters *)doCopyPRIO_CLUSTER_SIZE_PROP_THRESHOLD:(double)PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("doCopy(PRIO_CLUSTER_SIZE_PROP_THRESHOLD:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double PRIO_CLUSTER_SIZE_PROP_THRESHOLD __attribute__((swift_name("PRIO_CLUSTER_SIZE_PROP_THRESHOLD")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DirectionPrioParameters.Companion")))
@interface VSPKDirectionPrioParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDirectionPrioParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DirectionTrackerParameters")))
@interface VSPKDirectionTrackerParameters : VSPKBase
- (instancetype)initWithSTABLE_DIRECTION_TICK_THRESHOLD:(int32_t)STABLE_DIRECTION_TICK_THRESHOLD PID_DISTANCE_THRESHOLD:(double)PID_DISTANCE_THRESHOLD PID_DISTANCE_RESOLUTION:(double)PID_DISTANCE_RESOLUTION TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN:(int64_t)TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN __attribute__((swift_name("init(STABLE_DIRECTION_TICK_THRESHOLD:PID_DISTANCE_THRESHOLD:PID_DISTANCE_RESOLUTION:TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDirectionTrackerParametersCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (int64_t)component4 __attribute__((swift_name("component4()")));
- (VSPKDirectionTrackerParameters *)doCopySTABLE_DIRECTION_TICK_THRESHOLD:(int32_t)STABLE_DIRECTION_TICK_THRESHOLD PID_DISTANCE_THRESHOLD:(double)PID_DISTANCE_THRESHOLD PID_DISTANCE_RESOLUTION:(double)PID_DISTANCE_RESOLUTION TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN:(int64_t)TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN __attribute__((swift_name("doCopy(STABLE_DIRECTION_TICK_THRESHOLD:PID_DISTANCE_THRESHOLD:PID_DISTANCE_RESOLUTION:TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double PID_DISTANCE_RESOLUTION __attribute__((swift_name("PID_DISTANCE_RESOLUTION")));
@property (readonly) double PID_DISTANCE_THRESHOLD __attribute__((swift_name("PID_DISTANCE_THRESHOLD")));
@property (readonly) int32_t STABLE_DIRECTION_TICK_THRESHOLD __attribute__((swift_name("STABLE_DIRECTION_TICK_THRESHOLD")));
@property (readonly) int64_t TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN __attribute__((swift_name("TIMED_DIRECTION_HISTORY_HANDLER_TIMESPAN")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DirectionTrackerParameters.Companion")))
@interface VSPKDirectionTrackerParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDirectionTrackerParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloorSensorParameters")))
@interface VSPKFloorSensorParameters : VSPKBase
- (instancetype)initWithSTABLE_VARIANCE_THRESHOLD:(double)STABLE_VARIANCE_THRESHOLD DRIFT_COMPENSATION_VARIANCE_THRESHOLD:(double)DRIFT_COMPENSATION_VARIANCE_THRESHOLD DRIFT_COMPENSATION_ALTITUDE_LIMIT:(double)DRIFT_COMPENSATION_ALTITUDE_LIMIT DATA_HISTORY_SIZE:(int32_t)DATA_HISTORY_SIZE DATA_COMPENSATION_HISTORY_SIZE:(int32_t)DATA_COMPENSATION_HISTORY_SIZE DRIFT_COMPENSATION_INTERVAL:(int64_t)DRIFT_COMPENSATION_INTERVAL CHANGE_THRESHOLD_PERCENTAGE:(double)CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("init(STABLE_VARIANCE_THRESHOLD:DRIFT_COMPENSATION_VARIANCE_THRESHOLD:DRIFT_COMPENSATION_ALTITUDE_LIMIT:DATA_HISTORY_SIZE:DATA_COMPENSATION_HISTORY_SIZE:DRIFT_COMPENSATION_INTERVAL:CHANGE_THRESHOLD_PERCENTAGE:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (int64_t)component6 __attribute__((swift_name("component6()")));
- (double)component7 __attribute__((swift_name("component7()")));
- (VSPKFloorSensorParameters *)doCopySTABLE_VARIANCE_THRESHOLD:(double)STABLE_VARIANCE_THRESHOLD DRIFT_COMPENSATION_VARIANCE_THRESHOLD:(double)DRIFT_COMPENSATION_VARIANCE_THRESHOLD DRIFT_COMPENSATION_ALTITUDE_LIMIT:(double)DRIFT_COMPENSATION_ALTITUDE_LIMIT DATA_HISTORY_SIZE:(int32_t)DATA_HISTORY_SIZE DATA_COMPENSATION_HISTORY_SIZE:(int32_t)DATA_COMPENSATION_HISTORY_SIZE DRIFT_COMPENSATION_INTERVAL:(int64_t)DRIFT_COMPENSATION_INTERVAL CHANGE_THRESHOLD_PERCENTAGE:(double)CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("doCopy(STABLE_VARIANCE_THRESHOLD:DRIFT_COMPENSATION_VARIANCE_THRESHOLD:DRIFT_COMPENSATION_ALTITUDE_LIMIT:DATA_HISTORY_SIZE:DATA_COMPENSATION_HISTORY_SIZE:DRIFT_COMPENSATION_INTERVAL:CHANGE_THRESHOLD_PERCENTAGE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double CHANGE_THRESHOLD_PERCENTAGE __attribute__((swift_name("CHANGE_THRESHOLD_PERCENTAGE")));
@property (readonly) int32_t DATA_COMPENSATION_HISTORY_SIZE __attribute__((swift_name("DATA_COMPENSATION_HISTORY_SIZE")));
@property (readonly) int32_t DATA_HISTORY_SIZE __attribute__((swift_name("DATA_HISTORY_SIZE")));
@property (readonly) double DRIFT_COMPENSATION_ALTITUDE_LIMIT __attribute__((swift_name("DRIFT_COMPENSATION_ALTITUDE_LIMIT")));
@property (readonly) int64_t DRIFT_COMPENSATION_INTERVAL __attribute__((swift_name("DRIFT_COMPENSATION_INTERVAL")));
@property (readonly) double DRIFT_COMPENSATION_VARIANCE_THRESHOLD __attribute__((swift_name("DRIFT_COMPENSATION_VARIANCE_THRESHOLD")));
@property (readonly) double STABLE_VARIANCE_THRESHOLD __attribute__((swift_name("STABLE_VARIANCE_THRESHOLD")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FusionSensorManagerParameters")))
@interface VSPKFusionSensorManagerParameters : VSPKBase
- (instancetype)initWithWALKING_SPEED_REGRESSION_COEFFICIENT:(float)WALKING_SPEED_REGRESSION_COEFFICIENT WALKING_SPEED_REGRESSION_INTERCEPT:(float)WALKING_SPEED_REGRESSION_INTERCEPT REGULAR_SPEED_REGRESSION_COEFFICIENT:(float)REGULAR_SPEED_REGRESSION_COEFFICIENT REGULAR_SPEED_REGRESSION_INTERCEPT:(float)REGULAR_SPEED_REGRESSION_INTERCEPT SYM_SPEED_REGRESSION_COEFFICIENT:(float)SYM_SPEED_REGRESSION_COEFFICIENT SYM_SPEED_REGRESSION_INTERCEPT:(float)SYM_SPEED_REGRESSION_INTERCEPT ANTI_SYM_SPEED_REGRESSION_COEFFICIENT:(float)ANTI_SYM_SPEED_REGRESSION_COEFFICIENT ANTI_SYM_SPEED_REGRESSION_INTERCEPT:(float)ANTI_SYM_SPEED_REGRESSION_INTERCEPT ANGLE_RESOLUTION:(int64_t)ANGLE_RESOLUTION DATA_PACK_SIZE:(int64_t)DATA_PACK_SIZE UPDATE_TIME_MILLIS:(int64_t)UPDATE_TIME_MILLIS TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT:(float)TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT TROLLEY_INTEGRAL_SPEED_ALPHA:(float)TROLLEY_INTEGRAL_SPEED_ALPHA TROLLEY_INTEGRAL_SPEED_V0:(float)TROLLEY_INTEGRAL_SPEED_V0 TROLLEY_INTEGRAL_SPEED_V_MAX:(float)TROLLEY_INTEGRAL_SPEED_V_MAX MAGIC_CONSTANT:(float)MAGIC_CONSTANT __attribute__((swift_name("init(WALKING_SPEED_REGRESSION_COEFFICIENT:WALKING_SPEED_REGRESSION_INTERCEPT:REGULAR_SPEED_REGRESSION_COEFFICIENT:REGULAR_SPEED_REGRESSION_INTERCEPT:SYM_SPEED_REGRESSION_COEFFICIENT:SYM_SPEED_REGRESSION_INTERCEPT:ANTI_SYM_SPEED_REGRESSION_COEFFICIENT:ANTI_SYM_SPEED_REGRESSION_INTERCEPT:ANGLE_RESOLUTION:DATA_PACK_SIZE:UPDATE_TIME_MILLIS:TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT:TROLLEY_INTEGRAL_SPEED_ALPHA:TROLLEY_INTEGRAL_SPEED_V0:TROLLEY_INTEGRAL_SPEED_V_MAX:MAGIC_CONSTANT:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()")));
- (int64_t)component10 __attribute__((swift_name("component10()")));
- (int64_t)component11 __attribute__((swift_name("component11()")));
- (float)component12 __attribute__((swift_name("component12()")));
- (float)component13 __attribute__((swift_name("component13()")));
- (float)component14 __attribute__((swift_name("component14()")));
- (float)component15 __attribute__((swift_name("component15()")));
- (float)component16 __attribute__((swift_name("component16()")));
- (float)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (float)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (float)component6 __attribute__((swift_name("component6()")));
- (float)component7 __attribute__((swift_name("component7()")));
- (float)component8 __attribute__((swift_name("component8()")));
- (int64_t)component9 __attribute__((swift_name("component9()")));
- (VSPKFusionSensorManagerParameters *)doCopyWALKING_SPEED_REGRESSION_COEFFICIENT:(float)WALKING_SPEED_REGRESSION_COEFFICIENT WALKING_SPEED_REGRESSION_INTERCEPT:(float)WALKING_SPEED_REGRESSION_INTERCEPT REGULAR_SPEED_REGRESSION_COEFFICIENT:(float)REGULAR_SPEED_REGRESSION_COEFFICIENT REGULAR_SPEED_REGRESSION_INTERCEPT:(float)REGULAR_SPEED_REGRESSION_INTERCEPT SYM_SPEED_REGRESSION_COEFFICIENT:(float)SYM_SPEED_REGRESSION_COEFFICIENT SYM_SPEED_REGRESSION_INTERCEPT:(float)SYM_SPEED_REGRESSION_INTERCEPT ANTI_SYM_SPEED_REGRESSION_COEFFICIENT:(float)ANTI_SYM_SPEED_REGRESSION_COEFFICIENT ANTI_SYM_SPEED_REGRESSION_INTERCEPT:(float)ANTI_SYM_SPEED_REGRESSION_INTERCEPT ANGLE_RESOLUTION:(int64_t)ANGLE_RESOLUTION DATA_PACK_SIZE:(int64_t)DATA_PACK_SIZE UPDATE_TIME_MILLIS:(int64_t)UPDATE_TIME_MILLIS TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT:(float)TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT TROLLEY_INTEGRAL_SPEED_ALPHA:(float)TROLLEY_INTEGRAL_SPEED_ALPHA TROLLEY_INTEGRAL_SPEED_V0:(float)TROLLEY_INTEGRAL_SPEED_V0 TROLLEY_INTEGRAL_SPEED_V_MAX:(float)TROLLEY_INTEGRAL_SPEED_V_MAX MAGIC_CONSTANT:(float)MAGIC_CONSTANT __attribute__((swift_name("doCopy(WALKING_SPEED_REGRESSION_COEFFICIENT:WALKING_SPEED_REGRESSION_INTERCEPT:REGULAR_SPEED_REGRESSION_COEFFICIENT:REGULAR_SPEED_REGRESSION_INTERCEPT:SYM_SPEED_REGRESSION_COEFFICIENT:SYM_SPEED_REGRESSION_INTERCEPT:ANTI_SYM_SPEED_REGRESSION_COEFFICIENT:ANTI_SYM_SPEED_REGRESSION_INTERCEPT:ANGLE_RESOLUTION:DATA_PACK_SIZE:UPDATE_TIME_MILLIS:TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT:TROLLEY_INTEGRAL_SPEED_ALPHA:TROLLEY_INTEGRAL_SPEED_V0:TROLLEY_INTEGRAL_SPEED_V_MAX:MAGIC_CONSTANT:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property (readonly) float ANTI_SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_COEFFICIENT")));
@property (readonly) float ANTI_SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("ANTI_SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) float MAGIC_CONSTANT __attribute__((swift_name("MAGIC_CONSTANT")));
@property (readonly) float REGULAR_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_COEFFICIENT")));
@property (readonly) float REGULAR_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("REGULAR_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) float SYM_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("SYM_SPEED_REGRESSION_COEFFICIENT")));
@property (readonly) float SYM_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("SYM_SPEED_REGRESSION_INTERCEPT")));
@property (readonly) float TROLLEY_INTEGRAL_SPEED_ALPHA __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA")));
@property (readonly) float TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_ALPHA_BETA_QUOTIENT")));
@property (readonly) float TROLLEY_INTEGRAL_SPEED_V0 __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V0")));
@property (readonly) float TROLLEY_INTEGRAL_SPEED_V_MAX __attribute__((swift_name("TROLLEY_INTEGRAL_SPEED_V_MAX")));
@property (readonly) int64_t UPDATE_TIME_MILLIS __attribute__((swift_name("UPDATE_TIME_MILLIS")));
@property (readonly) float WALKING_SPEED_REGRESSION_COEFFICIENT __attribute__((swift_name("WALKING_SPEED_REGRESSION_COEFFICIENT")));
@property (readonly) float WALKING_SPEED_REGRESSION_INTERCEPT __attribute__((swift_name("WALKING_SPEED_REGRESSION_INTERCEPT")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetNewPositionsAmountParameters")))
@interface VSPKGetNewPositionsAmountParameters : VSPKBase
- (instancetype)initWithMAX_NUMBER_OF_POINTS:(int32_t)MAX_NUMBER_OF_POINTS CLUSTER_DEATH_BOUND:(int32_t)CLUSTER_DEATH_BOUND CLUSTER_LOWER_BOUND:(int32_t)CLUSTER_LOWER_BOUND HEALTHY_POSITION_AMOUNT:(int32_t)HEALTHY_POSITION_AMOUNT __attribute__((swift_name("init(MAX_NUMBER_OF_POINTS:CLUSTER_DEATH_BOUND:CLUSTER_LOWER_BOUND:HEALTHY_POSITION_AMOUNT:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKGetNewPositionsAmountParametersCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (VSPKGetNewPositionsAmountParameters *)doCopyMAX_NUMBER_OF_POINTS:(int32_t)MAX_NUMBER_OF_POINTS CLUSTER_DEATH_BOUND:(int32_t)CLUSTER_DEATH_BOUND CLUSTER_LOWER_BOUND:(int32_t)CLUSTER_LOWER_BOUND HEALTHY_POSITION_AMOUNT:(int32_t)HEALTHY_POSITION_AMOUNT __attribute__((swift_name("doCopy(MAX_NUMBER_OF_POINTS:CLUSTER_DEATH_BOUND:CLUSTER_LOWER_BOUND:HEALTHY_POSITION_AMOUNT:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t CLUSTER_DEATH_BOUND __attribute__((swift_name("CLUSTER_DEATH_BOUND")));
@property (readonly) int32_t CLUSTER_LOWER_BOUND __attribute__((swift_name("CLUSTER_LOWER_BOUND")));
@property (readonly) int32_t HEALTHY_POSITION_AMOUNT __attribute__((swift_name("HEALTHY_POSITION_AMOUNT")));
@property (readonly) int32_t MAX_NUMBER_OF_POINTS __attribute__((swift_name("MAX_NUMBER_OF_POINTS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetNewPositionsAmountParameters.Companion")))
@interface VSPKGetNewPositionsAmountParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKGetNewPositionsAmountParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MiscParameters")))
@interface VSPKMiscParameters : VSPKBase
- (instancetype)initWithParameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum isDebug:(BOOL)isDebug __attribute__((swift_name("init(parameterPackageEnum:isDebug:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKMiscParametersCompanion *companion __attribute__((swift_name("companion")));
- (VSPKIQPSParameterPackageEnum *)component1 __attribute__((swift_name("component1()")));
- (BOOL)component2 __attribute__((swift_name("component2()")));
- (VSPKMiscParameters *)doCopyParameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum isDebug:(BOOL)isDebug __attribute__((swift_name("doCopy(parameterPackageEnum:isDebug:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isDebug __attribute__((swift_name("isDebug")));
@property (readonly) VSPKIQPSParameterPackageEnum *parameterPackageEnum __attribute__((swift_name("parameterPackageEnum")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MiscParameters.Companion")))
@interface VSPKMiscParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMiscParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MovementStateManagerParameters")))
@interface VSPKMovementStateManagerParameters : VSPKBase
- (instancetype)initWithSPEED_PID_PROPORTIONAL_CONSTANT:(double)SPEED_PID_PROPORTIONAL_CONSTANT SPEED_PID_MAX_OFFSET:(double)SPEED_PID_MAX_OFFSET GENERIC_EXIT_TOLERANCE:(int32_t)GENERIC_EXIT_TOLERANCE HEAD_ON_COLLISION_STABILITY_TOLERANCE:(int32_t)HEAD_ON_COLLISION_STABILITY_TOLERANCE SIDE_COLLISION_STABILITY_TOLERANCE:(int32_t)SIDE_COLLISION_STABILITY_TOLERANCE WALKING_STABILITY_TOLERANCE:(int32_t)WALKING_STABILITY_TOLERANCE COLLISION_DEAD_SENSITIVITY:(int32_t)COLLISION_DEAD_SENSITIVITY ACCEPTANCE_SLIDING_RATIO:(double)ACCEPTANCE_SLIDING_RATIO CONVEX_TIMER:(int32_t)CONVEX_TIMER HEAD_ON_CHECK_DISTANCE_MODIFIER:(double)HEAD_ON_CHECK_DISTANCE_MODIFIER RETURN_FROM_COLLISION_SENSITIVITY:(int32_t)RETURN_FROM_COLLISION_SENSITIVITY COLLISION_TIMER:(int32_t)COLLISION_TIMER SIDE_COLLISION_MAX_AGE:(int32_t)SIDE_COLLISION_MAX_AGE COLLISION_ANGLE_MAX_DISTANCE_CHECKED:(double)COLLISION_ANGLE_MAX_DISTANCE_CHECKED HEAD_ON_COLLISION_MAX_INCOMING_ANGLE:(double)HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("init(SPEED_PID_PROPORTIONAL_CONSTANT:SPEED_PID_MAX_OFFSET:GENERIC_EXIT_TOLERANCE:HEAD_ON_COLLISION_STABILITY_TOLERANCE:SIDE_COLLISION_STABILITY_TOLERANCE:WALKING_STABILITY_TOLERANCE:COLLISION_DEAD_SENSITIVITY:ACCEPTANCE_SLIDING_RATIO:CONVEX_TIMER:HEAD_ON_CHECK_DISTANCE_MODIFIER:RETURN_FROM_COLLISION_SENSITIVITY:COLLISION_TIMER:SIDE_COLLISION_MAX_AGE:COLLISION_ANGLE_MAX_DISTANCE_CHECKED:HEAD_ON_COLLISION_MAX_INCOMING_ANGLE:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKMovementStateManagerParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component10 __attribute__((swift_name("component10()")));
- (int32_t)component11 __attribute__((swift_name("component11()")));
- (int32_t)component12 __attribute__((swift_name("component12()")));
- (int32_t)component13 __attribute__((swift_name("component13()")));
- (double)component14 __attribute__((swift_name("component14()")));
- (double)component15 __attribute__((swift_name("component15()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (int32_t)component6 __attribute__((swift_name("component6()")));
- (int32_t)component7 __attribute__((swift_name("component7()")));
- (double)component8 __attribute__((swift_name("component8()")));
- (int32_t)component9 __attribute__((swift_name("component9()")));
- (VSPKMovementStateManagerParameters *)doCopySPEED_PID_PROPORTIONAL_CONSTANT:(double)SPEED_PID_PROPORTIONAL_CONSTANT SPEED_PID_MAX_OFFSET:(double)SPEED_PID_MAX_OFFSET GENERIC_EXIT_TOLERANCE:(int32_t)GENERIC_EXIT_TOLERANCE HEAD_ON_COLLISION_STABILITY_TOLERANCE:(int32_t)HEAD_ON_COLLISION_STABILITY_TOLERANCE SIDE_COLLISION_STABILITY_TOLERANCE:(int32_t)SIDE_COLLISION_STABILITY_TOLERANCE WALKING_STABILITY_TOLERANCE:(int32_t)WALKING_STABILITY_TOLERANCE COLLISION_DEAD_SENSITIVITY:(int32_t)COLLISION_DEAD_SENSITIVITY ACCEPTANCE_SLIDING_RATIO:(double)ACCEPTANCE_SLIDING_RATIO CONVEX_TIMER:(int32_t)CONVEX_TIMER HEAD_ON_CHECK_DISTANCE_MODIFIER:(double)HEAD_ON_CHECK_DISTANCE_MODIFIER RETURN_FROM_COLLISION_SENSITIVITY:(int32_t)RETURN_FROM_COLLISION_SENSITIVITY COLLISION_TIMER:(int32_t)COLLISION_TIMER SIDE_COLLISION_MAX_AGE:(int32_t)SIDE_COLLISION_MAX_AGE COLLISION_ANGLE_MAX_DISTANCE_CHECKED:(double)COLLISION_ANGLE_MAX_DISTANCE_CHECKED HEAD_ON_COLLISION_MAX_INCOMING_ANGLE:(double)HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("doCopy(SPEED_PID_PROPORTIONAL_CONSTANT:SPEED_PID_MAX_OFFSET:GENERIC_EXIT_TOLERANCE:HEAD_ON_COLLISION_STABILITY_TOLERANCE:SIDE_COLLISION_STABILITY_TOLERANCE:WALKING_STABILITY_TOLERANCE:COLLISION_DEAD_SENSITIVITY:ACCEPTANCE_SLIDING_RATIO:CONVEX_TIMER:HEAD_ON_CHECK_DISTANCE_MODIFIER:RETURN_FROM_COLLISION_SENSITIVITY:COLLISION_TIMER:SIDE_COLLISION_MAX_AGE:COLLISION_ANGLE_MAX_DISTANCE_CHECKED:HEAD_ON_COLLISION_MAX_INCOMING_ANGLE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double ACCEPTANCE_SLIDING_RATIO __attribute__((swift_name("ACCEPTANCE_SLIDING_RATIO")));
@property (readonly) double COLLISION_ANGLE_MAX_DISTANCE_CHECKED __attribute__((swift_name("COLLISION_ANGLE_MAX_DISTANCE_CHECKED")));
@property (readonly) int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@property (readonly) int32_t COLLISION_TIMER __attribute__((swift_name("COLLISION_TIMER")));
@property (readonly) int32_t CONVEX_TIMER __attribute__((swift_name("CONVEX_TIMER")));
@property (readonly) int32_t GENERIC_EXIT_TOLERANCE __attribute__((swift_name("GENERIC_EXIT_TOLERANCE")));
@property (readonly) double HEAD_ON_CHECK_DISTANCE_MODIFIER __attribute__((swift_name("HEAD_ON_CHECK_DISTANCE_MODIFIER")));
@property (readonly) double HEAD_ON_COLLISION_MAX_INCOMING_ANGLE __attribute__((swift_name("HEAD_ON_COLLISION_MAX_INCOMING_ANGLE")));
@property (readonly) int32_t HEAD_ON_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("HEAD_ON_COLLISION_STABILITY_TOLERANCE")));
@property (readonly) int32_t RETURN_FROM_COLLISION_SENSITIVITY __attribute__((swift_name("RETURN_FROM_COLLISION_SENSITIVITY")));
@property (readonly) int32_t SIDE_COLLISION_MAX_AGE __attribute__((swift_name("SIDE_COLLISION_MAX_AGE")));
@property (readonly) int32_t SIDE_COLLISION_STABILITY_TOLERANCE __attribute__((swift_name("SIDE_COLLISION_STABILITY_TOLERANCE")));
@property (readonly) double SPEED_PID_MAX_OFFSET __attribute__((swift_name("SPEED_PID_MAX_OFFSET")));
@property (readonly) double SPEED_PID_PROPORTIONAL_CONSTANT __attribute__((swift_name("SPEED_PID_PROPORTIONAL_CONSTANT")));
@property (readonly) int32_t WALKING_STABILITY_TOLERANCE __attribute__((swift_name("WALKING_STABILITY_TOLERANCE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MovementStateManagerParameters.Companion")))
@interface VSPKMovementStateManagerParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMovementStateManagerParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PocketMLStepDetectorParameters")))
@interface VSPKPocketMLStepDetectorParameters : VSPKBase
- (instancetype)initWithPOCKET_LP_CUTOFF:(double)POCKET_LP_CUTOFF POCKET_GHETTO_OFFSET:(int32_t)POCKET_GHETTO_OFFSET __attribute__((swift_name("init(POCKET_LP_CUTOFF:POCKET_GHETTO_OFFSET:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (VSPKPocketMLStepDetectorParameters *)doCopyPOCKET_LP_CUTOFF:(double)POCKET_LP_CUTOFF POCKET_GHETTO_OFFSET:(int32_t)POCKET_GHETTO_OFFSET __attribute__((swift_name("doCopy(POCKET_LP_CUTOFF:POCKET_GHETTO_OFFSET:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t POCKET_GHETTO_OFFSET __attribute__((swift_name("POCKET_GHETTO_OFFSET")));
@property (readonly) double POCKET_LP_CUTOFF __attribute__((swift_name("POCKET_LP_CUTOFF")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QClusterParameters")))
@interface VSPKQClusterParameters : VSPKBase
- (instancetype)initWithCLOSE_POSITION_THRESHOLD:(double)CLOSE_POSITION_THRESHOLD CLUSTER_DISJOINT_TOLERANCE:(double)CLUSTER_DISJOINT_TOLERANCE FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD:(int32_t)FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD MAX_TRIES_BEFORE_FORCED_SPAWN:(int32_t)MAX_TRIES_BEFORE_FORCED_SPAWN NUMBER_OF_FORCED_SPAWNS:(int32_t)NUMBER_OF_FORCED_SPAWNS SLIDING_ANGLE:(double)SLIDING_ANGLE START_SPREAD_RADIUS:(double)START_SPREAD_RADIUS START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE __attribute__((swift_name("init(CLOSE_POSITION_THRESHOLD:CLUSTER_DISJOINT_TOLERANCE:FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD:MAX_TRIES_BEFORE_FORCED_SPAWN:NUMBER_OF_FORCED_SPAWNS:SLIDING_ANGLE:START_SPREAD_RADIUS:START_SPREAD_DISTANCE:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKQClusterParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (double)component6 __attribute__((swift_name("component6()")));
- (double)component7 __attribute__((swift_name("component7()")));
- (double)component8 __attribute__((swift_name("component8()")));
- (VSPKQClusterParameters *)doCopyCLOSE_POSITION_THRESHOLD:(double)CLOSE_POSITION_THRESHOLD CLUSTER_DISJOINT_TOLERANCE:(double)CLUSTER_DISJOINT_TOLERANCE FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD:(int32_t)FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD MAX_TRIES_BEFORE_FORCED_SPAWN:(int32_t)MAX_TRIES_BEFORE_FORCED_SPAWN NUMBER_OF_FORCED_SPAWNS:(int32_t)NUMBER_OF_FORCED_SPAWNS SLIDING_ANGLE:(double)SLIDING_ANGLE START_SPREAD_RADIUS:(double)START_SPREAD_RADIUS START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE __attribute__((swift_name("doCopy(CLOSE_POSITION_THRESHOLD:CLUSTER_DISJOINT_TOLERANCE:FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD:MAX_TRIES_BEFORE_FORCED_SPAWN:NUMBER_OF_FORCED_SPAWNS:SLIDING_ANGLE:START_SPREAD_RADIUS:START_SPREAD_DISTANCE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) double CLUSTER_DISJOINT_TOLERANCE __attribute__((swift_name("CLUSTER_DISJOINT_TOLERANCE")));
@property (readonly) int32_t FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD __attribute__((swift_name("FORCE_SPAWN_POSITION_AMOUNT_TRESHOLD")));
@property (readonly) int32_t MAX_TRIES_BEFORE_FORCED_SPAWN __attribute__((swift_name("MAX_TRIES_BEFORE_FORCED_SPAWN")));
@property (readonly) int32_t NUMBER_OF_FORCED_SPAWNS __attribute__((swift_name("NUMBER_OF_FORCED_SPAWNS")));
@property (readonly) double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QClusterParameters.Companion")))
@interface VSPKQClusterParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQClusterParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerParameters")))
@interface VSPKQLayerParameters : VSPKBase
- (instancetype)initWithRECOVERY_SPREAD_RADIUS:(double)RECOVERY_SPREAD_RADIUS RECOVERY_SPREAD_DISTANCE:(double)RECOVERY_SPREAD_DISTANCE RESCUE_MODE_MAX_ALL_COLLIDED_TRIES:(int32_t)RESCUE_MODE_MAX_ALL_COLLIDED_TRIES RESCUE_SPREAD_DISTANCE:(double)RESCUE_SPREAD_DISTANCE RESCUE_SPREAD_RADIUS:(double)RESCUE_SPREAD_RADIUS SMALL_CLUSTER_SIZE:(int32_t)SMALL_CLUSTER_SIZE START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE START_SPREAD_RADIUS:(double)START_SPREAD_RADIUS USER_SETTINGS_UPDATE_TICKS:(int32_t)USER_SETTINGS_UPDATE_TICKS UPDATE_TIME_MILLIS:(int64_t)UPDATE_TIME_MILLIS __attribute__((swift_name("init(RECOVERY_SPREAD_RADIUS:RECOVERY_SPREAD_DISTANCE:RESCUE_MODE_MAX_ALL_COLLIDED_TRIES:RESCUE_SPREAD_DISTANCE:RESCUE_SPREAD_RADIUS:SMALL_CLUSTER_SIZE:START_SPREAD_DISTANCE:START_SPREAD_RADIUS:USER_SETTINGS_UPDATE_TICKS:UPDATE_TIME_MILLIS:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKQLayerParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (int64_t)component10 __attribute__((swift_name("component10()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (int32_t)component3 __attribute__((swift_name("component3()")));
- (double)component4 __attribute__((swift_name("component4()")));
- (double)component5 __attribute__((swift_name("component5()")));
- (int32_t)component6 __attribute__((swift_name("component6()")));
- (double)component7 __attribute__((swift_name("component7()")));
- (double)component8 __attribute__((swift_name("component8()")));
- (int32_t)component9 __attribute__((swift_name("component9()")));
- (VSPKQLayerParameters *)doCopyRECOVERY_SPREAD_RADIUS:(double)RECOVERY_SPREAD_RADIUS RECOVERY_SPREAD_DISTANCE:(double)RECOVERY_SPREAD_DISTANCE RESCUE_MODE_MAX_ALL_COLLIDED_TRIES:(int32_t)RESCUE_MODE_MAX_ALL_COLLIDED_TRIES RESCUE_SPREAD_DISTANCE:(double)RESCUE_SPREAD_DISTANCE RESCUE_SPREAD_RADIUS:(double)RESCUE_SPREAD_RADIUS SMALL_CLUSTER_SIZE:(int32_t)SMALL_CLUSTER_SIZE START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE START_SPREAD_RADIUS:(double)START_SPREAD_RADIUS USER_SETTINGS_UPDATE_TICKS:(int32_t)USER_SETTINGS_UPDATE_TICKS UPDATE_TIME_MILLIS:(int64_t)UPDATE_TIME_MILLIS __attribute__((swift_name("doCopy(RECOVERY_SPREAD_RADIUS:RECOVERY_SPREAD_DISTANCE:RESCUE_MODE_MAX_ALL_COLLIDED_TRIES:RESCUE_SPREAD_DISTANCE:RESCUE_SPREAD_RADIUS:SMALL_CLUSTER_SIZE:START_SPREAD_DISTANCE:START_SPREAD_RADIUS:USER_SETTINGS_UPDATE_TICKS:UPDATE_TIME_MILLIS:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double RECOVERY_SPREAD_DISTANCE __attribute__((swift_name("RECOVERY_SPREAD_DISTANCE")));
@property (readonly) double RECOVERY_SPREAD_RADIUS __attribute__((swift_name("RECOVERY_SPREAD_RADIUS")));
@property (readonly) int32_t RESCUE_MODE_MAX_ALL_COLLIDED_TRIES __attribute__((swift_name("RESCUE_MODE_MAX_ALL_COLLIDED_TRIES")));
@property (readonly) double RESCUE_SPREAD_DISTANCE __attribute__((swift_name("RESCUE_SPREAD_DISTANCE")));
@property (readonly) double RESCUE_SPREAD_RADIUS __attribute__((swift_name("RESCUE_SPREAD_RADIUS")));
@property (readonly) int32_t SMALL_CLUSTER_SIZE __attribute__((swift_name("SMALL_CLUSTER_SIZE")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) int64_t UPDATE_TIME_MILLIS __attribute__((swift_name("UPDATE_TIME_MILLIS")));
@property (readonly) int32_t USER_SETTINGS_UPDATE_TICKS __attribute__((swift_name("USER_SETTINGS_UPDATE_TICKS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerParameters.Companion")))
@interface VSPKQLayerParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQLayerParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerQueueParameters")))
@interface VSPKQLayerQueueParameters : VSPKBase
- (instancetype)initWithANGLE_RESOLUTION:(int64_t)ANGLE_RESOLUTION DATA_PACK_SIZE:(int64_t)DATA_PACK_SIZE UPDATE_TIME_MILLIS:(int64_t)UPDATE_TIME_MILLIS SWING_AXIS:(VSPKKotlinFloatArray *)SWING_AXIS __attribute__((swift_name("init(ANGLE_RESOLUTION:DATA_PACK_SIZE:UPDATE_TIME_MILLIS:SWING_AXIS:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKQLayerQueueParametersCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (int64_t)component2 __attribute__((swift_name("component2()")));
- (int64_t)component3 __attribute__((swift_name("component3()")));
- (VSPKKotlinFloatArray *)component4 __attribute__((swift_name("component4()")));
- (VSPKQLayerQueueParameters *)doCopyANGLE_RESOLUTION:(int64_t)ANGLE_RESOLUTION DATA_PACK_SIZE:(int64_t)DATA_PACK_SIZE UPDATE_TIME_MILLIS:(int64_t)UPDATE_TIME_MILLIS SWING_AXIS:(VSPKKotlinFloatArray *)SWING_AXIS __attribute__((swift_name("doCopy(ANGLE_RESOLUTION:DATA_PACK_SIZE:UPDATE_TIME_MILLIS:SWING_AXIS:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t ANGLE_RESOLUTION __attribute__((swift_name("ANGLE_RESOLUTION")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@property (readonly) VSPKKotlinFloatArray *SWING_AXIS __attribute__((swift_name("SWING_AXIS")));
@property (readonly) int64_t UPDATE_TIME_MILLIS __attribute__((swift_name("UPDATE_TIME_MILLIS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerQueueParameters.Companion")))
@interface VSPKQLayerQueueParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQLayerQueueParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QPSHandlerParameters")))
@interface VSPKQPSHandlerParameters : VSPKBase
- (instancetype)initWithRECOVERY_MAP_SIZE_THRESHOLD:(int32_t)RECOVERY_MAP_SIZE_THRESHOLD TEST_NUMBER:(NSString *)TEST_NUMBER RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE:(double)RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("init(RECOVERY_MAP_SIZE_THRESHOLD:TEST_NUMBER:RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (NSString *)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKQPSHandlerParameters *)doCopyRECOVERY_MAP_SIZE_THRESHOLD:(int32_t)RECOVERY_MAP_SIZE_THRESHOLD TEST_NUMBER:(NSString *)TEST_NUMBER RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE:(double)RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("doCopy(RECOVERY_MAP_SIZE_THRESHOLD:TEST_NUMBER:RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t RECOVERY_MAP_SIZE_THRESHOLD __attribute__((swift_name("RECOVERY_MAP_SIZE_THRESHOLD")));
@property (readonly) double RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE __attribute__((swift_name("RECOVERY_SPREAD_RADIUS_DEFAULT_VALUE")));
@property (readonly) NSString *TEST_NUMBER __attribute__((swift_name("TEST_NUMBER")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QPosParameters")))
@interface VSPKQPosParameters : VSPKBase
- (instancetype)initWithANGLE_OFFSET_MAGNITUDE:(double)ANGLE_OFFSET_MAGNITUDE DISTANCE_FOR_MAX_SPEED:(double)DISTANCE_FOR_MAX_SPEED MAX_SPEED_OFFSET:(double)MAX_SPEED_OFFSET SPLIT_ANGLE:(double)SPLIT_ANGLE SPLIT_METERS:(float)SPLIT_METERS __attribute__((swift_name("init(ANGLE_OFFSET_MAGNITUDE:DISTANCE_FOR_MAX_SPEED:MAX_SPEED_OFFSET:SPLIT_ANGLE:SPLIT_METERS:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKQPosParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (double)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (VSPKQPosParameters *)doCopyANGLE_OFFSET_MAGNITUDE:(double)ANGLE_OFFSET_MAGNITUDE DISTANCE_FOR_MAX_SPEED:(double)DISTANCE_FOR_MAX_SPEED MAX_SPEED_OFFSET:(double)MAX_SPEED_OFFSET SPLIT_ANGLE:(double)SPLIT_ANGLE SPLIT_METERS:(float)SPLIT_METERS __attribute__((swift_name("doCopy(ANGLE_OFFSET_MAGNITUDE:DISTANCE_FOR_MAX_SPEED:MAX_SPEED_OFFSET:SPLIT_ANGLE:SPLIT_METERS:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double ANGLE_OFFSET_MAGNITUDE __attribute__((swift_name("ANGLE_OFFSET_MAGNITUDE")));
@property (readonly) double DISTANCE_FOR_MAX_SPEED __attribute__((swift_name("DISTANCE_FOR_MAX_SPEED")));
@property (readonly) double MAX_SPEED_OFFSET __attribute__((swift_name("MAX_SPEED_OFFSET")));
@property (readonly) double SPLIT_ANGLE __attribute__((swift_name("SPLIT_ANGLE")));
@property (readonly) float SPLIT_METERS __attribute__((swift_name("SPLIT_METERS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QPosParameters.Companion")))
@interface VSPKQPosParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKQPosParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegularMLStepDetectorParameters")))
@interface VSPKRegularMLStepDetectorParameters : VSPKBase
- (instancetype)initWithWEAK_X:(float)WEAK_X REGULAR_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)REGULAR_REEVALUATION_PCA_COMPONENTS REGULAR_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)REGULAR_REEVALUATION_SCALER_SCALES REGULAR_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)REGULAR_REEVALUATION_SCALER_MEANS REGULAR_ELLIPSE_CENTER_X:(float)REGULAR_ELLIPSE_CENTER_X REGULAR_ELLIPSE_CENTER_Y:(float)REGULAR_ELLIPSE_CENTER_Y REGULAR_ELLIPSE_ALPHA:(float)REGULAR_ELLIPSE_ALPHA REGULAR_ELLIPSE_RADIUS_A:(float)REGULAR_ELLIPSE_RADIUS_A REGULAR_ELLIPSE_RADIUS_B:(float)REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("init(WEAK_X:REGULAR_REEVALUATION_PCA_COMPONENTS:REGULAR_REEVALUATION_SCALER_SCALES:REGULAR_REEVALUATION_SCALER_MEANS:REGULAR_ELLIPSE_CENTER_X:REGULAR_ELLIPSE_CENTER_Y:REGULAR_ELLIPSE_ALPHA:REGULAR_ELLIPSE_RADIUS_A:REGULAR_ELLIPSE_RADIUS_B:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()")));
- (NSMutableArray<NSMutableArray<VSPKFloat *> *> *)component2 __attribute__((swift_name("component2()")));
- (NSMutableArray<VSPKFloat *> *)component3 __attribute__((swift_name("component3()")));
- (NSMutableArray<VSPKFloat *> *)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (float)component6 __attribute__((swift_name("component6()")));
- (float)component7 __attribute__((swift_name("component7()")));
- (float)component8 __attribute__((swift_name("component8()")));
- (float)component9 __attribute__((swift_name("component9()")));
- (VSPKRegularMLStepDetectorParameters *)doCopyWEAK_X:(float)WEAK_X REGULAR_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)REGULAR_REEVALUATION_PCA_COMPONENTS REGULAR_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)REGULAR_REEVALUATION_SCALER_SCALES REGULAR_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)REGULAR_REEVALUATION_SCALER_MEANS REGULAR_ELLIPSE_CENTER_X:(float)REGULAR_ELLIPSE_CENTER_X REGULAR_ELLIPSE_CENTER_Y:(float)REGULAR_ELLIPSE_CENTER_Y REGULAR_ELLIPSE_ALPHA:(float)REGULAR_ELLIPSE_ALPHA REGULAR_ELLIPSE_RADIUS_A:(float)REGULAR_ELLIPSE_RADIUS_A REGULAR_ELLIPSE_RADIUS_B:(float)REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("doCopy(WEAK_X:REGULAR_REEVALUATION_PCA_COMPONENTS:REGULAR_REEVALUATION_SCALER_SCALES:REGULAR_REEVALUATION_SCALER_MEANS:REGULAR_ELLIPSE_CENTER_X:REGULAR_ELLIPSE_CENTER_Y:REGULAR_ELLIPSE_ALPHA:REGULAR_ELLIPSE_RADIUS_A:REGULAR_ELLIPSE_RADIUS_B:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float REGULAR_ELLIPSE_ALPHA __attribute__((swift_name("REGULAR_ELLIPSE_ALPHA")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_X __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_X")));
@property (readonly) float REGULAR_ELLIPSE_CENTER_Y __attribute__((swift_name("REGULAR_ELLIPSE_CENTER_Y")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_A __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_A")));
@property (readonly) float REGULAR_ELLIPSE_RADIUS_B __attribute__((swift_name("REGULAR_ELLIPSE_RADIUS_B")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *REGULAR_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("REGULAR_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_MEANS __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *REGULAR_REEVALUATION_SCALER_SCALES __attribute__((swift_name("REGULAR_REEVALUATION_SCALER_SCALES")));
@property (readonly) float WEAK_X __attribute__((swift_name("WEAK_X")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SlidingRatioParameters")))
@interface VSPKSlidingRatioParameters : VSPKBase
- (instancetype)initWithSLIDING_ANGLE:(double)SLIDING_ANGLE __attribute__((swift_name("init(SLIDING_ANGLE:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSlidingRatioParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (VSPKSlidingRatioParameters *)doCopySLIDING_ANGLE:(double)SLIDING_ANGLE __attribute__((swift_name("doCopy(SLIDING_ANGLE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double SLIDING_ANGLE __attribute__((swift_name("SLIDING_ANGLE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SlidingRatioParameters.Companion")))
@interface VSPKSlidingRatioParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSlidingRatioParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SmallClusterSpreadIncreaserParameters")))
@interface VSPKSmallClusterSpreadIncreaserParameters : VSPKBase
- (instancetype)initWithSMALL_CLUSTER_DIRECTIONAL_RADIUS:(double)SMALL_CLUSTER_DIRECTIONAL_RADIUS SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER:(double)SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("init(SMALL_CLUSTER_DIRECTIONAL_RADIUS:SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSmallClusterSpreadIncreaserParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (VSPKSmallClusterSpreadIncreaserParameters *)doCopySMALL_CLUSTER_DIRECTIONAL_RADIUS:(double)SMALL_CLUSTER_DIRECTIONAL_RADIUS SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER:(double)SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("doCopy(SMALL_CLUSTER_DIRECTIONAL_RADIUS:SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_MULTIPLIER")));
@property (readonly) double SMALL_CLUSTER_DIRECTIONAL_RADIUS __attribute__((swift_name("SMALL_CLUSTER_DIRECTIONAL_RADIUS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SmallClusterSpreadIncreaserParameters.Companion")))
@interface VSPKSmallClusterSpreadIncreaserParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSmallClusterSpreadIncreaserParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpeedSpreadHandlerParameters")))
@interface VSPKSpeedSpreadHandlerParameters : VSPKBase
- (instancetype)initWithCOLLISION_DEAD_SENSITIVITY:(int32_t)COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("init(COLLISION_DEAD_SENSITIVITY:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSpeedSpreadHandlerParametersCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (VSPKSpeedSpreadHandlerParameters *)doCopyCOLLISION_DEAD_SENSITIVITY:(int32_t)COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("doCopy(COLLISION_DEAD_SENSITIVITY:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t COLLISION_DEAD_SENSITIVITY __attribute__((swift_name("COLLISION_DEAD_SENSITIVITY")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpeedSpreadHandlerParameters.Companion")))
@interface VSPKSpeedSpreadHandlerParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSpeedSpreadHandlerParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SplitPositionsParameters")))
@interface VSPKSplitPositionsParameters : VSPKBase
- (instancetype)initWithOPTIMAL_CLUSTER_RADIUS:(double)OPTIMAL_CLUSTER_RADIUS CLOSE_POSITION_THRESHOLD:(double)CLOSE_POSITION_THRESHOLD __attribute__((swift_name("init(OPTIMAL_CLUSTER_RADIUS:CLOSE_POSITION_THRESHOLD:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKSplitPositionsParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (VSPKSplitPositionsParameters *)doCopyOPTIMAL_CLUSTER_RADIUS:(double)OPTIMAL_CLUSTER_RADIUS CLOSE_POSITION_THRESHOLD:(double)CLOSE_POSITION_THRESHOLD __attribute__((swift_name("doCopy(OPTIMAL_CLUSTER_RADIUS:CLOSE_POSITION_THRESHOLD:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double CLOSE_POSITION_THRESHOLD __attribute__((swift_name("CLOSE_POSITION_THRESHOLD")));
@property (readonly) double OPTIMAL_CLUSTER_RADIUS __attribute__((swift_name("OPTIMAL_CLUSTER_RADIUS")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SplitPositionsParameters.Companion")))
@interface VSPKSplitPositionsParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSplitPositionsParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymMLStepDetectorParameters")))
@interface VSPKSwingAntiSymMLStepDetectorParameters : VSPKBase
- (instancetype)initWithSWING_ANTI_SYM_LP_CUTOFF:(double)SWING_ANTI_SYM_LP_CUTOFF SWING_ANTI_SYM_GHETTO_OFFSET:(int32_t)SWING_ANTI_SYM_GHETTO_OFFSET SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS SWING_ANTI_SYM_ELLIPSE_CENTER_X:(float)SWING_ANTI_SYM_ELLIPSE_CENTER_X SWING_ANTI_SYM_ELLIPSE_CENTER_Y:(float)SWING_ANTI_SYM_ELLIPSE_CENTER_Y SWING_ANTI_SYM_ELLIPSE_ALPHA:(float)SWING_ANTI_SYM_ELLIPSE_ALPHA SWING_ANTI_SYM_ELLIPSE_RADIUS_A:(float)SWING_ANTI_SYM_ELLIPSE_RADIUS_A SWING_ANTI_SYM_ELLIPSE_RADIUS_B:(float)SWING_ANTI_SYM_ELLIPSE_RADIUS_B __attribute__((swift_name("init(SWING_ANTI_SYM_LP_CUTOFF:SWING_ANTI_SYM_GHETTO_OFFSET:SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES:SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS:SWING_ANTI_SYM_ELLIPSE_CENTER_X:SWING_ANTI_SYM_ELLIPSE_CENTER_Y:SWING_ANTI_SYM_ELLIPSE_ALPHA:SWING_ANTI_SYM_ELLIPSE_RADIUS_A:SWING_ANTI_SYM_ELLIPSE_RADIUS_B:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (NSMutableArray<VSPKFloat *> *)component3 __attribute__((swift_name("component3()")));
- (NSMutableArray<VSPKFloat *> *)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (float)component6 __attribute__((swift_name("component6()")));
- (float)component7 __attribute__((swift_name("component7()")));
- (float)component8 __attribute__((swift_name("component8()")));
- (float)component9 __attribute__((swift_name("component9()")));
- (VSPKSwingAntiSymMLStepDetectorParameters *)doCopySWING_ANTI_SYM_LP_CUTOFF:(double)SWING_ANTI_SYM_LP_CUTOFF SWING_ANTI_SYM_GHETTO_OFFSET:(int32_t)SWING_ANTI_SYM_GHETTO_OFFSET SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS SWING_ANTI_SYM_ELLIPSE_CENTER_X:(float)SWING_ANTI_SYM_ELLIPSE_CENTER_X SWING_ANTI_SYM_ELLIPSE_CENTER_Y:(float)SWING_ANTI_SYM_ELLIPSE_CENTER_Y SWING_ANTI_SYM_ELLIPSE_ALPHA:(float)SWING_ANTI_SYM_ELLIPSE_ALPHA SWING_ANTI_SYM_ELLIPSE_RADIUS_A:(float)SWING_ANTI_SYM_ELLIPSE_RADIUS_A SWING_ANTI_SYM_ELLIPSE_RADIUS_B:(float)SWING_ANTI_SYM_ELLIPSE_RADIUS_B __attribute__((swift_name("doCopy(SWING_ANTI_SYM_LP_CUTOFF:SWING_ANTI_SYM_GHETTO_OFFSET:SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES:SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS:SWING_ANTI_SYM_ELLIPSE_CENTER_X:SWING_ANTI_SYM_ELLIPSE_CENTER_Y:SWING_ANTI_SYM_ELLIPSE_ALPHA:SWING_ANTI_SYM_ELLIPSE_RADIUS_A:SWING_ANTI_SYM_ELLIPSE_RADIUS_B:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_ALPHA __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_ALPHA")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_X __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_X")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_CENTER_Y __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_CENTER_Y")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_A __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_A")));
@property (readonly) float SWING_ANTI_SYM_ELLIPSE_RADIUS_B __attribute__((swift_name("SWING_ANTI_SYM_ELLIPSE_RADIUS_B")));
@property (readonly) int32_t SWING_ANTI_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_ANTI_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_ANTI_SYM_LP_CUTOFF __attribute__((swift_name("SWING_ANTI_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_ANTI_SYM_REEVALUATION_SCALER_SCALES")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingMLStepDetectorParameters")))
@interface VSPKSwingMLStepDetectorParameters : VSPKBase
- (instancetype)initWithSWING_WEAK_X0:(float)SWING_WEAK_X0 SWING_WEAK_Y0:(float)SWING_WEAK_Y0 SWING_WEAK_Y1:(float)SWING_WEAK_Y1 SWING_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)SWING_REEVALUATION_PCA_COMPONENTS SWING_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)SWING_REEVALUATION_SCALER_SCALES SWING_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("init(SWING_WEAK_X0:SWING_WEAK_Y0:SWING_WEAK_Y1:SWING_REEVALUATION_PCA_COMPONENTS:SWING_REEVALUATION_SCALER_SCALES:SWING_REEVALUATION_SCALER_MEANS:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()")));
- (float)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (NSMutableArray<NSMutableArray<VSPKFloat *> *> *)component4 __attribute__((swift_name("component4()")));
- (NSMutableArray<VSPKFloat *> *)component5 __attribute__((swift_name("component5()")));
- (NSMutableArray<VSPKFloat *> *)component6 __attribute__((swift_name("component6()")));
- (VSPKSwingMLStepDetectorParameters *)doCopySWING_WEAK_X0:(float)SWING_WEAK_X0 SWING_WEAK_Y0:(float)SWING_WEAK_Y0 SWING_WEAK_Y1:(float)SWING_WEAK_Y1 SWING_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)SWING_REEVALUATION_PCA_COMPONENTS SWING_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)SWING_REEVALUATION_SCALER_SCALES SWING_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("doCopy(SWING_WEAK_X0:SWING_WEAK_Y0:SWING_WEAK_Y1:SWING_REEVALUATION_PCA_COMPONENTS:SWING_REEVALUATION_SCALER_SCALES:SWING_REEVALUATION_SCALER_MEANS:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_REEVALUATION_SCALER_SCALES")));
@property (readonly) float SWING_WEAK_X0 __attribute__((swift_name("SWING_WEAK_X0")));
@property (readonly) float SWING_WEAK_Y0 __attribute__((swift_name("SWING_WEAK_Y0")));
@property (readonly) float SWING_WEAK_Y1 __attribute__((swift_name("SWING_WEAK_Y1")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymMLStepDetectorParameters")))
@interface VSPKSwingSymMLStepDetectorParameters : VSPKBase
- (instancetype)initWithSWING_SYM_LP_CUTOFF:(double)SWING_SYM_LP_CUTOFF SWING_SYM_GHETTO_OFFSET:(int32_t)SWING_SYM_GHETTO_OFFSET SWING_SYM_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)SWING_SYM_REEVALUATION_PCA_COMPONENTS SWING_SYM_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)SWING_SYM_REEVALUATION_SCALER_SCALES SWING_SYM_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)SWING_SYM_REEVALUATION_SCALER_MEANS SWING_SYM_HYPERBOLA_INNER_CONSTANT:(double)SWING_SYM_HYPERBOLA_INNER_CONSTANT SWING_SYM_HYPERBOLA_X_SHIFT:(double)SWING_SYM_HYPERBOLA_X_SHIFT SWING_SYM_HYPERBOLA_Y_SHIFT:(double)SWING_SYM_HYPERBOLA_Y_SHIFT SWING_SYM_HYPERBOLA_ANGLE:(double)SWING_SYM_HYPERBOLA_ANGLE __attribute__((swift_name("init(SWING_SYM_LP_CUTOFF:SWING_SYM_GHETTO_OFFSET:SWING_SYM_REEVALUATION_PCA_COMPONENTS:SWING_SYM_REEVALUATION_SCALER_SCALES:SWING_SYM_REEVALUATION_SCALER_MEANS:SWING_SYM_HYPERBOLA_INNER_CONSTANT:SWING_SYM_HYPERBOLA_X_SHIFT:SWING_SYM_HYPERBOLA_Y_SHIFT:SWING_SYM_HYPERBOLA_ANGLE:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (NSMutableArray<NSMutableArray<VSPKFloat *> *> *)component3 __attribute__((swift_name("component3()")));
- (NSMutableArray<VSPKFloat *> *)component4 __attribute__((swift_name("component4()")));
- (NSMutableArray<VSPKFloat *> *)component5 __attribute__((swift_name("component5()")));
- (double)component6 __attribute__((swift_name("component6()")));
- (double)component7 __attribute__((swift_name("component7()")));
- (double)component8 __attribute__((swift_name("component8()")));
- (double)component9 __attribute__((swift_name("component9()")));
- (VSPKSwingSymMLStepDetectorParameters *)doCopySWING_SYM_LP_CUTOFF:(double)SWING_SYM_LP_CUTOFF SWING_SYM_GHETTO_OFFSET:(int32_t)SWING_SYM_GHETTO_OFFSET SWING_SYM_REEVALUATION_PCA_COMPONENTS:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)SWING_SYM_REEVALUATION_PCA_COMPONENTS SWING_SYM_REEVALUATION_SCALER_SCALES:(NSMutableArray<VSPKFloat *> *)SWING_SYM_REEVALUATION_SCALER_SCALES SWING_SYM_REEVALUATION_SCALER_MEANS:(NSMutableArray<VSPKFloat *> *)SWING_SYM_REEVALUATION_SCALER_MEANS SWING_SYM_HYPERBOLA_INNER_CONSTANT:(double)SWING_SYM_HYPERBOLA_INNER_CONSTANT SWING_SYM_HYPERBOLA_X_SHIFT:(double)SWING_SYM_HYPERBOLA_X_SHIFT SWING_SYM_HYPERBOLA_Y_SHIFT:(double)SWING_SYM_HYPERBOLA_Y_SHIFT SWING_SYM_HYPERBOLA_ANGLE:(double)SWING_SYM_HYPERBOLA_ANGLE __attribute__((swift_name("doCopy(SWING_SYM_LP_CUTOFF:SWING_SYM_GHETTO_OFFSET:SWING_SYM_REEVALUATION_PCA_COMPONENTS:SWING_SYM_REEVALUATION_SCALER_SCALES:SWING_SYM_REEVALUATION_SCALER_MEANS:SWING_SYM_HYPERBOLA_INNER_CONSTANT:SWING_SYM_HYPERBOLA_X_SHIFT:SWING_SYM_HYPERBOLA_Y_SHIFT:SWING_SYM_HYPERBOLA_ANGLE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t SWING_SYM_GHETTO_OFFSET __attribute__((swift_name("SWING_SYM_GHETTO_OFFSET")));
@property (readonly) double SWING_SYM_HYPERBOLA_ANGLE __attribute__((swift_name("SWING_SYM_HYPERBOLA_ANGLE")));
@property (readonly) double SWING_SYM_HYPERBOLA_INNER_CONSTANT __attribute__((swift_name("SWING_SYM_HYPERBOLA_INNER_CONSTANT")));
@property (readonly) double SWING_SYM_HYPERBOLA_X_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_X_SHIFT")));
@property (readonly) double SWING_SYM_HYPERBOLA_Y_SHIFT __attribute__((swift_name("SWING_SYM_HYPERBOLA_Y_SHIFT")));
@property (readonly) double SWING_SYM_LP_CUTOFF __attribute__((swift_name("SWING_SYM_LP_CUTOFF")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *SWING_SYM_REEVALUATION_PCA_COMPONENTS __attribute__((swift_name("SWING_SYM_REEVALUATION_PCA_COMPONENTS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_MEANS __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_MEANS")));
@property (readonly) NSMutableArray<VSPKFloat *> *SWING_SYM_REEVALUATION_SCALER_SCALES __attribute__((swift_name("SWING_SYM_REEVALUATION_SCALER_SCALES")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TSPPrioParameters")))
@interface VSPKTSPPrioParameters : VSPKBase
- (instancetype)initWithREBOOT_CLUSTER_SIZE:(int32_t)REBOOT_CLUSTER_SIZE TSP_PRIORITY_DISTANCE:(double)TSP_PRIORITY_DISTANCE TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD:(double)TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("init(REBOOT_CLUSTER_SIZE:TSP_PRIORITY_DISTANCE:TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTSPPrioParametersCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKTSPPrioParameters *)doCopyREBOOT_CLUSTER_SIZE:(int32_t)REBOOT_CLUSTER_SIZE TSP_PRIORITY_DISTANCE:(double)TSP_PRIORITY_DISTANCE TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD:(double)TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("doCopy(REBOOT_CLUSTER_SIZE:TSP_PRIORITY_DISTANCE:TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t REBOOT_CLUSTER_SIZE __attribute__((swift_name("REBOOT_CLUSTER_SIZE")));
@property (readonly) double TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD __attribute__((swift_name("TSP_PRIORITY_CLUSTER_SIZE_PROPORTION_THRESHOLD")));
@property (readonly) double TSP_PRIORITY_DISTANCE __attribute__((swift_name("TSP_PRIORITY_DISTANCE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TSPPrioParameters.Companion")))
@interface VSPKTSPPrioParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTSPPrioParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySkipParameters")))
@interface VSPKTrolleySkipParameters : VSPKBase
- (instancetype)initWithNARROW_ISLE_THRESHOLD:(double)NARROW_ISLE_THRESHOLD START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE START_SPREAD_RADIUS:(double)START_SPREAD_RADIUS TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:(float)TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE:(float)TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE TROLLEY_RESCUE_MAX_DISTANCE:(float)TROLLEY_RESCUE_MAX_DISTANCE TROLLEY_RESCUE_RESOLUTION:(int32_t)TROLLEY_RESCUE_RESOLUTION TROLLEY_RESCUE_STABLE_CHANGE:(int64_t)TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("init(NARROW_ISLE_THRESHOLD:START_SPREAD_DISTANCE:START_SPREAD_RADIUS:TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE:TROLLEY_RESCUE_MAX_DISTANCE:TROLLEY_RESCUE_RESOLUTION:TROLLEY_RESCUE_STABLE_CHANGE:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTrolleySkipParametersCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (float)component4 __attribute__((swift_name("component4()")));
- (float)component5 __attribute__((swift_name("component5()")));
- (float)component6 __attribute__((swift_name("component6()")));
- (int32_t)component7 __attribute__((swift_name("component7()")));
- (int64_t)component8 __attribute__((swift_name("component8()")));
- (VSPKTrolleySkipParameters *)doCopyNARROW_ISLE_THRESHOLD:(double)NARROW_ISLE_THRESHOLD START_SPREAD_DISTANCE:(double)START_SPREAD_DISTANCE START_SPREAD_RADIUS:(double)START_SPREAD_RADIUS TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:(float)TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE:(float)TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE TROLLEY_RESCUE_MAX_DISTANCE:(float)TROLLEY_RESCUE_MAX_DISTANCE TROLLEY_RESCUE_RESOLUTION:(int32_t)TROLLEY_RESCUE_RESOLUTION TROLLEY_RESCUE_STABLE_CHANGE:(int64_t)TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("doCopy(NARROW_ISLE_THRESHOLD:START_SPREAD_DISTANCE:START_SPREAD_RADIUS:TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE:TROLLEY_RESCUE_MAX_DISTANCE:TROLLEY_RESCUE_RESOLUTION:TROLLEY_RESCUE_STABLE_CHANGE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double NARROW_ISLE_THRESHOLD __attribute__((swift_name("NARROW_ISLE_THRESHOLD")));
@property (readonly) double START_SPREAD_DISTANCE __attribute__((swift_name("START_SPREAD_DISTANCE")));
@property (readonly) double START_SPREAD_RADIUS __attribute__((swift_name("START_SPREAD_RADIUS")));
@property (readonly) float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@property (readonly) float TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_RAYTRACE_DISTANCE")));
@property (readonly) float TROLLEY_RESCUE_MAX_DISTANCE __attribute__((swift_name("TROLLEY_RESCUE_MAX_DISTANCE")));
@property (readonly) int32_t TROLLEY_RESCUE_RESOLUTION __attribute__((swift_name("TROLLEY_RESCUE_RESOLUTION")));
@property (readonly) int64_t TROLLEY_RESCUE_STABLE_CHANGE __attribute__((swift_name("TROLLEY_RESCUE_STABLE_CHANGE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleySkipParameters.Companion")))
@interface VSPKTrolleySkipParametersCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTrolleySkipParametersCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleyStepDetectorParameters")))
@interface VSPKTrolleyStepDetectorParameters : VSPKBase
- (instancetype)initWithDATA_PACK_SIZE:(int64_t)DATA_PACK_SIZE __attribute__((swift_name("init(DATA_PACK_SIZE:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()")));
- (VSPKTrolleyStepDetectorParameters *)doCopyDATA_PACK_SIZE:(int64_t)DATA_PACK_SIZE __attribute__((swift_name("doCopy(DATA_PACK_SIZE:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t DATA_PACK_SIZE __attribute__((swift_name("DATA_PACK_SIZE")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VeddestaScrubberParameters")))
@interface VSPKVeddestaScrubberParameters : VSPKBase
- (instancetype)initWithTROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:(float)TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("init(TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()")));
- (VSPKVeddestaScrubberParameters *)doCopyTROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:(float)TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("doCopy(TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR __attribute__((swift_name("TROLLEY_RESCUE_DISTANCE_OFFSET_FACTOR")));
@end;

__attribute__((swift_name("KotlinThrowable")))
@interface VSPKKotlinThrowable : VSPKBase
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinArray<NSString *> *)getStackTrace __attribute__((swift_name("getStackTrace()")));
- (void)printStackTrace __attribute__((swift_name("printStackTrace()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
- (NSError *)asError __attribute__((swift_name("asError()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MissingParametersException")))
@interface VSPKMissingParametersException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("KotlinIterable")))
@protocol VSPKKotlinIterable
@required
- (id<VSPKKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end;

__attribute__((swift_name("KotlinCollection")))
@protocol VSPKKotlinCollection <VSPKKotlinIterable>
@required
- (BOOL)containsElement:(id _Nullable)element __attribute__((swift_name("contains(element:)")));
- (BOOL)containsAllElements:(id)elements __attribute__((swift_name("containsAll(elements:)")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("KotlinMutableIterable")))
@protocol VSPKKotlinMutableIterable <VSPKKotlinIterable>
@required
@end;

__attribute__((swift_name("KotlinMutableCollection")))
@protocol VSPKKotlinMutableCollection <VSPKKotlinCollection, VSPKKotlinMutableIterable>
@required
- (BOOL)addElement:(id _Nullable)element __attribute__((swift_name("add(element:)")));
- (BOOL)addAllElements:(id)elements __attribute__((swift_name("addAll(elements:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)removeElement:(id _Nullable)element __attribute__((swift_name("remove(element:)")));
- (BOOL)removeAllElements:(id)elements __attribute__((swift_name("removeAll(elements:)")));
- (BOOL)retainAllElements:(id)elements __attribute__((swift_name("retainAll(elements:)")));
@end;

__attribute__((swift_name("Kotlinx_coroutines_coreDisposableHandle")))
@protocol VSPKKotlinx_coroutines_coreDisposableHandle
@required
- (void)dispose __attribute__((swift_name("dispose()")));
@end;

__attribute__((swift_name("QCluster")))
@interface VSPKQCluster : VSPKBase <VSPKKotlinMutableCollection, VSPKKotlinx_coroutines_coreDisposableHandle>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)addElement:(VSPKQPosition *)element __attribute__((swift_name("add(element:)")));
- (BOOL)addAllElements:(id)elements __attribute__((swift_name("addAll(elements:)")));
- (void)addOffsetOffset:(double)offset key:(id _Nullable)key __attribute__((swift_name("addOffset(offset:key:)")));
- (BOOL)checkClusterToMergeOtherCluster:(VSPKQCluster *)otherCluster __attribute__((swift_name("checkClusterToMerge(otherCluster:)")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsElement:(VSPKQPosition *)element __attribute__((swift_name("contains(element:)")));
- (BOOL)containsAllElements:(id)elements __attribute__((swift_name("containsAll(elements:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (VSPKQCluster * _Nullable)findNewChildMain __attribute__((swift_name("findNewChildMain()")));
- (void)handleCenters __attribute__((swift_name("handleCenters()")));
- (BOOL)isEmpty __attribute__((swift_name("isEmpty()")));
- (BOOL)isNotEmpty __attribute__((swift_name("isNotEmpty()")));
- (id<VSPKKotlinMutableIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)mergeOtherCluster:(VSPKQCluster *)otherCluster __attribute__((swift_name("merge(otherCluster:)")));
- (void)moveMoveVector:(VSPKMoveVector *)moveVector timestamp:(int64_t)timestamp __attribute__((swift_name("move(moveVector:timestamp:)")));
- (BOOL)removeElement:(VSPKQPosition *)element __attribute__((swift_name("remove(element:)")));
- (BOOL)removeAllElements:(id)elements __attribute__((swift_name("removeAll(elements:)")));
- (void)resampleTotalNumPositions:(int32_t)totalNumPositions amountOfClusters:(int32_t)amountOfClusters allClustersSmall:(BOOL)allClustersSmall __attribute__((swift_name("resample(totalNumPositions:amountOfClusters:allClustersSmall:)")));
- (void)resetDegree:(VSPKQClusterQClusterResetDegree *)degree __attribute__((swift_name("reset(degree:)")));
- (BOOL)retainAllElements:(id)elements __attribute__((swift_name("retainAll(elements:)")));
- (void)setStateState:(VSPKQClusterClusterState *)state __attribute__((swift_name("setState(state:)")));
- (id)split __attribute__((swift_name("split()")));
- (VSPKQCluster * _Nullable)transformIntoClusterType:(VSPKQClusterClusterType *)clusterType __attribute__((swift_name("transformInto(clusterType:)")));
@property (readonly) VSPKAdditiveModifier *angleOffset __attribute__((swift_name("angleOffset")));
@property (readonly) VSPKPointF * _Nullable centrePosition __attribute__((swift_name("centrePosition")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) VSPKQPosition * _Nullable lastValidCentre __attribute__((swift_name("lastValidCentre")));
@property (readonly) NSMutableArray<VSPKQPosition *> *positions __attribute__((swift_name("positions")));
@property (readonly) double radius __attribute__((swift_name("radius")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@property (readonly) VSPKQClusterClusterState *state __attribute__((swift_name("state")));
@property (readonly) VSPKQClusterClusterType *type __attribute__((swift_name("type")));
@property (readonly) VSPKFloat * _Nullable x __attribute__((swift_name("x")));
@property (readonly) VSPKFloat * _Nullable y __attribute__((swift_name("y")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QCluster.ClusterState")))
@interface VSPKQClusterClusterState : VSPKKotlinEnum<VSPKQClusterClusterState *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKQClusterClusterState *background __attribute__((swift_name("background")));
@property (class, readonly) VSPKQClusterClusterState *active __attribute__((swift_name("active")));
@property (class, readonly) VSPKQClusterClusterState *disposed __attribute__((swift_name("disposed")));
+ (VSPKKotlinArray<VSPKQClusterClusterState *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QCluster.ClusterType")))
@interface VSPKQClusterClusterType : VSPKKotlinEnum<VSPKQClusterClusterType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKQClusterClusterType *simplified __attribute__((swift_name("simplified")));
@property (class, readonly) VSPKQClusterClusterType *standard __attribute__((swift_name("standard")));
+ (VSPKKotlinArray<VSPKQClusterClusterType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QCluster.QClusterResetDegree")))
@interface VSPKQClusterQClusterResetDegree : VSPKKotlinEnum<VSPKQClusterQClusterResetDegree *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKQClusterQClusterResetDegree *hard __attribute__((swift_name("hard")));
@property (class, readonly) VSPKQClusterQClusterResetDegree *soft __attribute__((swift_name("soft")));
+ (VSPKKotlinArray<VSPKQClusterQClusterResetDegree *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("PositionData")))
@interface VSPKPositionData : VSPKBase
- (instancetype)initWithPoint:(VSPKPointF *)point angle:(VSPKDouble * _Nullable)angle __attribute__((swift_name("init(point:angle:)"))) __attribute__((objc_designated_initializer));
@property (readonly) VSPKDouble * _Nullable angle_ __attribute__((swift_name("angle_")));
@property (readonly) VSPKPointF *point __attribute__((swift_name("point")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerPositionData")))
@interface VSPKQLayerPositionData : VSPKPositionData
- (instancetype)initWithPoint:(VSPKPointF *)point useUserSettingsECSU:(BOOL)useUserSettingsECSU syncPositionData:(VSPKIReplayDataHandlerLegacySyncPositionData * _Nullable)syncPositionData __attribute__((swift_name("init(point:useUserSettingsECSU:syncPositionData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPoint:(VSPKPointF *)point angle:(VSPKDouble * _Nullable)angle __attribute__((swift_name("init(point:angle:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) VSPKIReplayDataHandlerLegacySyncPositionData * _Nullable syncPositionData __attribute__((swift_name("syncPositionData")));
@property (readonly) BOOL useUserSettingsECSU __attribute__((swift_name("useUserSettingsECSU")));
@end;

__attribute__((swift_name("MoveEventData")))
@interface VSPKMoveEventData : VSPKBase
- (instancetype)initWithMovement:(VSPKMoveVector *)movement timestamp:(int64_t)timestamp certainty:(double)certainty __attribute__((swift_name("init(movement:timestamp:certainty:)"))) __attribute__((objc_designated_initializer));
@property (readonly) double certainty __attribute__((swift_name("certainty")));
@property (readonly) VSPKMoveVector *movement __attribute__((swift_name("movement")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerMoveEventData")))
@interface VSPKQLayerMoveEventData : VSPKMoveEventData
- (instancetype)initWithMovement:(VSPKMoveVector *)movement timestamp:(int64_t)timestamp sensorConfidence:(double)sensorConfidence __attribute__((swift_name("init(movement:timestamp:sensorConfidence:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMovement:(VSPKMoveVector *)movement timestamp:(int64_t)timestamp certainty:(double)certainty __attribute__((swift_name("init(movement:timestamp:certainty:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("ContextData")))
@protocol VSPKContextData
@required
@end;

__attribute__((swift_name("ContextListener")))
@protocol VSPKContextListener
@required
- (id _Nullable)contextualiseContext:(VSPKContextManager *)context __attribute__((swift_name("contextualise(context:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
@end;

__attribute__((swift_name("ContextManager")))
@interface VSPKContextManager : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addListenerListener:(id<VSPKContextListener>)listener __attribute__((swift_name("addListener(listener:)")));
- (void)addTrackerTracker:(id<VSPKContextTracker>)tracker __attribute__((swift_name("addTracker(tracker:)")));
- (id<VSPKContextReturnData>)feedContextContext:(id<VSPKContextData>)context __attribute__((swift_name("feedContext(context:)")));
- (void)handleResponseAny:(id)any returnContext:(id<VSPKContextReturnData>)returnContext __attribute__((swift_name("handleResponse(any:returnContext:)")));
- (id<VSPKContextReturnData>)instanceContextReturnData __attribute__((swift_name("instanceContextReturnData()")));
- (void)processContextContext:(id<VSPKContextData>)context __attribute__((swift_name("processContext(context:)")));
- (void)removeListenerListener:(id<VSPKContextListener>)listener __attribute__((swift_name("removeListener(listener:)")));
- (void)removeTrackerTracker:(id<VSPKContextTracker>)tracker __attribute__((swift_name("removeTracker(tracker:)")));
- (void)updateManagerParametersContext:(id<VSPKContextData>)context __attribute__((swift_name("updateManagerParameters(context:)")));
@property NSMutableArray<id<VSPKContextListener>> *contextListeners __attribute__((swift_name("contextListeners")));
@property NSMutableArray<id<VSPKContextTracker>> *contextTrackers __attribute__((swift_name("contextTrackers")));
@end;

__attribute__((swift_name("ContextTracker")))
@protocol VSPKContextTracker
@required
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)updateParametersData:(id<VSPKContextData>)data __attribute__((swift_name("updateParameters(data:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BadFrequencyException")))
@interface VSPKBadFrequencyException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NavigationAlreadyStartedException")))
@interface VSPKNavigationAlreadyStartedException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QLayerNotReadyException")))
@interface VSPKQLayerNotReadyException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VPSHasBeenDisposedException")))
@interface VSPKVPSHasBeenDisposedException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("Vector")))
@interface VSPKVector : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithFrom:(VSPKPointF *)from to:(VSPKPointF *)to __attribute__((swift_name("init(from:to:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPoint:(VSPKPointF *)point __attribute__((swift_name("init(point:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPolarPoint:(VSPKPolarPoint *)polarPoint __attribute__((swift_name("init(polarPoint:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(double)x y:(double)y __attribute__((swift_name("init(x:y:)"))) __attribute__((objc_designated_initializer));
- (BOOL)approxEqualsVector:(VSPKVector *)vector epsilon:(double)epsilon __attribute__((swift_name("approxEquals(vector:epsilon:)")));
- (VSPKVector *)doCopy __attribute__((swift_name("doCopy()")));
- (VSPKVector *)divDivisor:(double)divisor __attribute__((swift_name("div(divisor:)")));
- (double)dotVector:(VSPKVector *)vector __attribute__((swift_name("dot(vector:)")));
- (BOOL)equalsVector:(VSPKVector *)vector __attribute__((swift_name("equals(vector:)")));
- (VSPKVector *)getClosestDirectionPossibleDirections:(NSMutableArray<VSPKVector *> *)possibleDirections __attribute__((swift_name("getClosestDirection(possibleDirections:)")));
- (VSPKVector *)getOffsetVectorOffset:(float)offset __attribute__((swift_name("getOffsetVector(offset:)")));
- (VSPKVector *)gramSchmidtVector:(VSPKVector *)vector __attribute__((swift_name("gramSchmidt(vector:)")));
- (BOOL)isNonZero __attribute__((swift_name("isNonZero()")));
- (BOOL)isZero __attribute__((swift_name("isZero()")));
- (VSPKVector *)minusVector:(VSPKVector *)vector __attribute__((swift_name("minus(vector:)")));
- (VSPKVector *)normed __attribute__((swift_name("normed()")));
- (BOOL)parallelVector:(VSPKVector *)vector __attribute__((swift_name("parallel(vector:)")));
- (VSPKVector *)plusVector:(VSPKVector *)vector __attribute__((swift_name("plus(vector:)")));
- (VSPKVector *)rotateAngle:(double)angle __attribute__((swift_name("rotate(angle:)")));
- (VSPKVector *)timesFactor:(double)factor __attribute__((swift_name("times(factor:)")));
- (VSPKMoveVector *)toMoveVectorType:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("toMoveVector(type:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (VSPKVector *)unaryMinus __attribute__((swift_name("unaryMinus()")));
@property float azimuth __attribute__((swift_name("azimuth")));
@property double magnitude __attribute__((swift_name("magnitude")));
@property (readonly) double x __attribute__((swift_name("x")));
@property (readonly) double y __attribute__((swift_name("y")));
@end;

__attribute__((swift_name("MoveVector")))
@interface VSPKMoveVector : VSPKVector
- (instancetype)initWithAzimuth:(float)azimuth magnitude:(double)magnitude confidence:(double)confidence type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(azimuth:magnitude:confidence:type:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Deprecated constructor, use this(CylindricalPoint) instead")));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithPoint1:(VSPKPointF *)Point1 Point2:(VSPKPointF *)Point2 __attribute__((swift_name("init(Point1:Point2:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPolarPoint:(VSPKPolarPoint *)polarPoint type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(polarPoint:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithX:(double)x y:(double)y type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(x:y:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFrom:(VSPKPointF *)from to:(VSPKPointF *)to __attribute__((swift_name("init(from:to:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPoint:(VSPKPointF *)point __attribute__((swift_name("init(point:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPolarPoint:(VSPKPolarPoint *)polarPoint __attribute__((swift_name("init(polarPoint:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithX:(double)x y:(double)y __attribute__((swift_name("init(x:y:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (VSPKMoveVector *)doCopy __attribute__((swift_name("doCopy()")));
- (VSPKMoveVector *)divDivisor:(double)divisor __attribute__((swift_name("div(divisor:)")));
- (VSPKMoveVector *)getClosestDirectionPossibleDirections_:(NSMutableArray<VSPKMoveVector *> *)possibleDirections __attribute__((swift_name("getClosestDirection(possibleDirections_:)")));
- (VSPKMoveVector *)getOffsetVectorOffset:(float)offset __attribute__((swift_name("getOffsetVector(offset:)")));
- (VSPKMoveVector *)gramSchmidtVector_:(VSPKMoveVector *)vector __attribute__((swift_name("gramSchmidt(vector_:)")));
- (VSPKMoveVector *)minusVector_:(VSPKMoveVector *)vector __attribute__((swift_name("minus(vector_:)")));
- (VSPKMoveVector *)normed __attribute__((swift_name("normed()")));
- (VSPKMoveVector *)plusVector_:(VSPKMoveVector *)vector __attribute__((swift_name("plus(vector_:)")));
- (VSPKMoveVector *)rotateAngle:(double)angle __attribute__((swift_name("rotate(angle:)")));
- (VSPKMoveVector *)timesFactor:(double)factor __attribute__((swift_name("times(factor:)")));
- (VSPKPointF *)toPointF __attribute__((swift_name("toPointF()")));
- (NSString *)description __attribute__((swift_name("description()")));
- (VSPKVector *)toVector __attribute__((swift_name("toVector()")));
@property VSPKMoveVectorMoveType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MoveVector.moveType")))
@interface VSPKMoveVectorMoveType : VSPKKotlinEnum<VSPKMoveVectorMoveType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKMoveVectorMoveType *generic __attribute__((swift_name("generic")));
@property (class, readonly) VSPKMoveVectorMoveType *trolley __attribute__((swift_name("trolley")));
+ (VSPKKotlinArray<VSPKMoveVectorMoveType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PointF.Companion")))
@interface VSPKPointFCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPointFCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PointWithOffset")))
@interface VSPKPointWithOffset : VSPKBase
- (instancetype)initWithPosition:(VSPKPointF *)position offset:(VSPKPointF *)offset __attribute__((swift_name("init(position:offset:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Deprecated, do not use offset, use angle")));
- (VSPKPointF *)component1 __attribute__((swift_name("component1()")));
- (VSPKPointF *)component2 __attribute__((swift_name("component2()")));
- (VSPKPointWithOffset *)doCopyPosition:(VSPKPointF *)position offset:(VSPKPointF *)offset __attribute__((swift_name("doCopy(position:offset:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKPointF *offset __attribute__((swift_name("offset")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@end;

__attribute__((swift_name("PolarPoint")))
@interface VSPKPolarPoint : VSPKBase
- (instancetype)initWithAzimuth:(float)azimuth radius:(double)radius __attribute__((swift_name("init(azimuth:radius:)"))) __attribute__((objc_designated_initializer));
- (VSPKPointF *)toPointF __attribute__((swift_name("toPointF()")));
@property (readonly) float azimuth __attribute__((swift_name("azimuth")));
@property (readonly) double radius __attribute__((swift_name("radius")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RawSensorData.Companion")))
@interface VSPKRawSensorDataCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRawSensorDataCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RawSensorData.SensorDataType")))
@interface VSPKRawSensorDataSensorDataType : VSPKKotlinEnum<VSPKRawSensorDataSensorDataType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKRawSensorDataSensorDataType *acceleration __attribute__((swift_name("acceleration")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *gravity __attribute__((swift_name("gravity")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *rotation __attribute__((swift_name("rotation")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *ambientLight __attribute__((swift_name("ambientLight")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *proximity __attribute__((swift_name("proximity")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *geomagnetic __attribute__((swift_name("geomagnetic")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *accelerationUncalibrated __attribute__((swift_name("accelerationUncalibrated")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *gyroscopeUncalibrated __attribute__((swift_name("gyroscopeUncalibrated")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *sync __attribute__((swift_name("sync")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *radiusSync __attribute__((swift_name("radiusSync")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *lux __attribute__((swift_name("lux")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *locked __attribute__((swift_name("locked")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *screenBrightness __attribute__((swift_name("screenBrightness")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *barometer __attribute__((swift_name("barometer")));
@property (class, readonly) VSPKRawSensorDataSensorDataType *altitude __attribute__((swift_name("altitude")));
+ (VSPKKotlinArray<VSPKRawSensorDataSensorDataType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimedMoveVector")))
@interface VSPKTimedMoveVector : VSPKMoveVector
- (instancetype)initWithMoveVector:(VSPKMoveVector *)moveVector duration:(double)duration timestamp:(int64_t)timestamp type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(moveVector:duration:timestamp:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithAzimuth:(float)azimuth magnitude:(double)magnitude duration:(double)duration timestamp:(int64_t)timestamp type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(azimuth:magnitude:duration:timestamp:type:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithAzimuth:(float)azimuth magnitude:(double)magnitude confidence:(double)confidence type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(azimuth:magnitude:confidence:type:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithPoint1:(VSPKPointF *)Point1 Point2:(VSPKPointF *)Point2 __attribute__((swift_name("init(Point1:Point2:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPolarPoint:(VSPKPolarPoint *)polarPoint type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(polarPoint:type:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithX:(double)x y:(double)y type:(VSPKMoveVectorMoveType *)type __attribute__((swift_name("init(x:y:type:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (VSPKTimedMoveVector *)divDivisor:(double)divisor __attribute__((swift_name("div(divisor:)")));
- (VSPKTimedMoveVector *)minusVector__:(VSPKTimedMoveVector *)vector __attribute__((swift_name("minus(vector__:)")));
- (VSPKTimedMoveVector *)plusVector__:(VSPKTimedMoveVector *)vector __attribute__((swift_name("plus(vector__:)")));
- (VSPKTimedMoveVector *)timesFactor:(double)factor __attribute__((swift_name("times(factor:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double duration __attribute__((swift_name("duration")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@end;

__attribute__((swift_name("SensorBundle")))
@interface VSPKSensorBundle : VSPKBase
@property (readonly) int64_t timeStamp __attribute__((swift_name("timeStamp")));
@property (readonly) VSPKSensorBundleBundleType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GeoMagneticRotationBundle")))
@interface VSPKGeoMagneticRotationBundle : VSPKSensorBundle
- (instancetype)initWithAzimuth:(VSPKDouble * _Nullable)azimuth pitch:(VSPKDouble * _Nullable)pitch roll:(VSPKDouble * _Nullable)roll timeStamp:(int64_t)timeStamp confidence:(double)confidence __attribute__((swift_name("init(azimuth:pitch:roll:timeStamp:confidence:)"))) __attribute__((objc_designated_initializer));
@property (readonly) VSPKDouble * _Nullable azimuth __attribute__((swift_name("azimuth")));
@property (readonly) VSPKDouble * _Nullable pitch __attribute__((swift_name("pitch")));
@property (readonly) VSPKDouble * _Nullable roll __attribute__((swift_name("roll")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SensorBundle.BundleType")))
@interface VSPKSensorBundleBundleType : VSPKKotlinEnum<VSPKSensorBundleBundleType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKSensorBundleBundleType *speed __attribute__((swift_name("speed")));
@property (class, readonly) VSPKSensorBundleBundleType *geomagneticRotationSensor __attribute__((swift_name("geomagneticRotationSensor")));
+ (VSPKKotlinArray<VSPKSensorBundleBundleType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpeedBundle")))
@interface VSPKSpeedBundle : VSPKSensorBundle
- (instancetype)initWithSpeed:(float)speed stepData:(VSPKStepData *)stepData __attribute__((swift_name("init(speed:stepData:)"))) __attribute__((objc_designated_initializer));
@property (readonly) float speed __attribute__((swift_name("speed")));
@property (readonly) VSPKStepData *stepData __attribute__((swift_name("stepData")));
@end;

__attribute__((swift_name("MLModel")))
@interface VSPKMLModel : VSPKBase
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer));
- (BOOL)pipelineData:(VSPKKotlinArray<VSPKFloat *> *)data __attribute__((swift_name("pipeline(data:)")));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
- (VSPKKotlinArray<VSPKFloat *> *)transformDataData:(VSPKKotlinArray<VSPKFloat *> *)data __attribute__((swift_name("transformData(data:)")));
@property NSMutableArray<VSPKVectorTransformer *> *transformers __attribute__((swift_name("transformers")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TestModel_")))
@interface VSPKTestModel_ : VSPKMLModel
- (instancetype)initWithResult:(BOOL)result __attribute__((swift_name("init(result:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@property (readonly) BOOL result __attribute__((swift_name("result")));
@end;

__attribute__((swift_name("VectorTransformer")))
@interface VSPKVectorTransformer : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKKotlinArray<VSPKFloat *> *)transformData:(VSPKKotlinArray<VSPKFloat *> *)data __attribute__((swift_name("transform(data:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PCATransformer")))
@interface VSPKPCATransformer : VSPKVectorTransformer
- (instancetype)initWithComponents:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)components means:(NSMutableArray<VSPKFloat *> * _Nullable)means __attribute__((swift_name("init(components:means:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (VSPKKotlinArray<VSPKFloat *> *)transformData:(VSPKKotlinArray<VSPKFloat *> *)data __attribute__((swift_name("transform(data:)")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *components __attribute__((swift_name("components")));
@property (readonly) NSMutableArray<VSPKFloat *> * _Nullable means __attribute__((swift_name("means")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StandardScaler")))
@interface VSPKStandardScaler : VSPKVectorTransformer
- (instancetype)initWithScales:(NSMutableArray<VSPKFloat *> *)scales means:(NSMutableArray<VSPKFloat *> *)means __attribute__((swift_name("init(scales:means:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (VSPKKotlinArray<VSPKFloat *> *)transformData:(VSPKKotlinArray<VSPKFloat *> *)data __attribute__((swift_name("transform(data:)")));
@property (readonly) NSMutableArray<VSPKFloat *> *means __attribute__((swift_name("means")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales __attribute__((swift_name("scales")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidJacketPocketMLParameters")))
@interface VSPKAndroidJacketPocketMLParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidJacketPocketMLParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidJacketPocketMLParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_jacket_pocket_nn __attribute__((swift_name("coeff_jacket_pocket_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_jacket_pocket_nn __attribute__((swift_name("intercepts_jacket_pocket_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_jacket_pocket_nn __attribute__((swift_name("means_jacket_pocket_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_jacket_pocket_nn __attribute__((swift_name("scales_jacket_pocket_nn")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPantJacketDistinguishParameters")))
@interface VSPKAndroidPantJacketDistinguishParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidPantJacketDistinguishParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidPantJacketDistinguishParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_distinguish_nn __attribute__((swift_name("coeff_distinguish_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_distinguish_nn __attribute__((swift_name("intercepts_distinguish_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_distinguish_nn __attribute__((swift_name("means_distinguish_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_distinguish_nn __attribute__((swift_name("scales_distinguish_nn")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPocketLenientParameters")))
@interface VSPKAndroidPocketLenientParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidPocketLenientParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidPocketLenientParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_pocket_lenient_221021 __attribute__((swift_name("PCA_components_pocket_lenient_221021")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_pocket_lenient_221021 __attribute__((swift_name("means_pocket_lenient_221021")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_pocket_lenient_221021 __attribute__((swift_name("scales_pocket_lenient_221021")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPocketMLParameters")))
@interface VSPKAndroidPocketMLParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidPocketMLParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidPocketMLParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_pocket_nn_android __attribute__((swift_name("coeff_pocket_nn_android")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_pocket_nn_android __attribute__((swift_name("intercepts_pocket_nn_android")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_pocket_nn_android __attribute__((swift_name("means_pocket_nn_android")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_pocket_nn_android __attribute__((swift_name("scales_pocket_nn_android")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidPocketOrSwingNNParameters")))
@interface VSPKAndroidPocketOrSwingNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidPocketOrSwingNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidPocketOrSwingNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_android_mode_classifier_nn_20220127_132622 __attribute__((swift_name("coeff_android_mode_classifier_nn_20220127_132622")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_android_mode_classifier_nn_20220127_132622 __attribute__((swift_name("intercepts_android_mode_classifier_nn_20220127_132622")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_android_mode_classifier_nn_20220127_132622 __attribute__((swift_name("means_android_mode_classifier_nn_20220127_132622")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_android_mode_classifier_nn_20220127_132622 __attribute__((swift_name("scales_android_mode_classifier_nn_20220127_132622")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidRegularMLParameters")))
@interface VSPKAndroidRegularMLParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidRegularMLParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidRegularMLParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_android_lenient_v1 __attribute__((swift_name("PCA_components_android_lenient_v1")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_regular_NN_20210523_112436 __attribute__((swift_name("coeff_regular_NN_20210523_112436")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_regular_NN_20210523_112436 __attribute__((swift_name("intercepts_regular_NN_20210523_112436")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_android_lenient_v1 __attribute__((swift_name("means_android_lenient_v1")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_regular_NN_20210523_112436 __attribute__((swift_name("means_regular_NN_20210523_112436")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_android_lenient_v1 __attribute__((swift_name("scales_android_lenient_v1")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_regular_NN_20210523_112436 __attribute__((swift_name("scales_regular_NN_20210523_112436")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidSwingAntiSymNeuralNetworkParameters")))
@interface VSPKAndroidSwingAntiSymNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidSwingAntiSymNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidSwingAntiSymNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("coeff_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("intercepts_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_0_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_10_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_11_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_12_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_1_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_2_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_3_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_4_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_5_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_6_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_7_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_8_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_9_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_coeff_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_0_intercepts_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_0_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_10_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_11_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_12_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_13_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_14_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_15_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_16_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_17_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_18_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_19_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_1_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_20_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_21_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_22_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_23_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_24_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_25_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_26_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_27_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_28_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_29_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_2_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_3_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_4_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_5_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_6_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_7_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_8_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_9_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_coeff_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_1_intercepts_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_0_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_0_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_10_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_10_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_11_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_11_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_12_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_12_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_13_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_13_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_14_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_14_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_15_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_15_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_16_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_16_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_17_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_17_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_18_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_18_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_19_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_19_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_1_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_1_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_20_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_20_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_21_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_21_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_22_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_22_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_23_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_23_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_24_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_24_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_25_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_25_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_26_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_26_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_27_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_27_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_28_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_28_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_29_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_29_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_2_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_2_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_3_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_3_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_4_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_4_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_5_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_5_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_6_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_6_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_7_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_7_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_8_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_8_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_9_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_9_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_2_coeff_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_coeff_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_intercepts_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("layer_2_intercepts_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("means_AndroidSwingAntiSym20220831_105234")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_AndroidSwingAntiSym20220831_105234 __attribute__((swift_name("scales_AndroidSwingAntiSym20220831_105234")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidSwingSymNeuralNetworkParameters")))
@interface VSPKAndroidSwingSymNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidSwingSymNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidSwingSymNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_AndroidSwingSym20220831_105318 __attribute__((swift_name("coeff_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_AndroidSwingSym20220831_105318 __attribute__((swift_name("intercepts_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_0_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_10_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_11_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_12_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_1_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_2_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_3_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_4_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_5_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_6_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_7_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_8_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_9_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_coeff_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_0_intercepts_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_0_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_10_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_11_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_12_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_13_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_14_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_15_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_16_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_17_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_18_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_19_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_1_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_20_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_20_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_21_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_21_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_22_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_22_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_23_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_23_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_24_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_24_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_25_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_25_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_26_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_26_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_27_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_27_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_28_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_28_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_29_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_29_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_2_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_3_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_4_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_5_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_6_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_7_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_8_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_9_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_coeff_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_1_intercepts_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_0_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_0_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_10_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_10_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_11_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_11_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_12_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_12_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_13_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_13_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_14_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_14_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_15_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_15_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_16_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_16_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_17_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_17_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_18_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_18_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_19_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_19_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_1_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_1_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_20_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_20_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_21_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_21_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_22_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_22_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_23_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_23_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_24_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_24_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_25_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_25_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_26_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_26_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_27_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_27_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_28_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_28_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_29_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_29_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_2_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_2_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_3_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_3_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_4_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_4_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_5_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_5_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_6_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_6_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_7_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_7_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_8_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_8_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_coeff_9_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_9_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_2_coeff_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_coeff_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_2_intercepts_AndroidSwingSym20220831_105318 __attribute__((swift_name("layer_2_intercepts_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_AndroidSwingSym20220831_105318 __attribute__((swift_name("means_AndroidSwingSym20220831_105318")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_AndroidSwingSym20220831_105318 __attribute__((swift_name("scales_AndroidSwingSym20220831_105318")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IOSJacketPocketNeuralNetworkParameters")))
@interface VSPKIOSJacketPocketNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)iOSJacketPocketNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIOSJacketPocketNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_jacket_pocket_nn __attribute__((swift_name("coeff_jacket_pocket_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_jacket_pocket_nn __attribute__((swift_name("intercepts_jacket_pocket_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_jacket_pocket_nn __attribute__((swift_name("means_jacket_pocket_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_jacket_pocket_nn __attribute__((swift_name("scales_jacket_pocket_nn")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IOSPantJacketDistinguishParameters")))
@interface VSPKIOSPantJacketDistinguishParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)iOSPantJacketDistinguishParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIOSPantJacketDistinguishParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_distinguish_nn __attribute__((swift_name("coeff_distinguish_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_distinguish_nn __attribute__((swift_name("intercepts_distinguish_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_distinguish_nn __attribute__((swift_name("means_distinguish_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_distinguish_nn __attribute__((swift_name("scales_distinguish_nn")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IOSPocketNeuralNetworkParameters")))
@interface VSPKIOSPocketNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)iOSPocketNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKIOSPocketNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_pocket_nn __attribute__((swift_name("coeff_pocket_nn")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_pocket_nn __attribute__((swift_name("intercepts_pocket_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_pocket_nn __attribute__((swift_name("means_pocket_nn")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_pocket_nn __attribute__((swift_name("scales_pocket_nn")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("JohanNeuralNetwork")))
@interface VSPKJohanNeuralNetwork : VSPKMLModel
- (instancetype)initWithC:(NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *)c interceptsArrayList:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)interceptsArrayList transformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(c:interceptsArrayList:transformers:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)debugPrintLayers __attribute__((swift_name("debugPrintLayers()")));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
- (float)predictProbabilityX:(NSMutableArray<VSPKFloat *> *)x __attribute__((swift_name("predictProbability(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MLModelFactory")))
@interface VSPKMLModelFactory : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)mLModelFactory __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKMLModelFactory *shared __attribute__((swift_name("shared")));
- (VSPKNeuralNetwork *)getAndroidPocketNeuralNetwork __attribute__((swift_name("getAndroidPocketNeuralNetwork()")));
- (VSPKNeuralNetwork *)getAndroidSwingAntiSymNeuralNetwork __attribute__((swift_name("getAndroidSwingAntiSymNeuralNetwork()")));
- (VSPKNeuralNetwork *)getAndroidSwingSymNeuralNetwork __attribute__((swift_name("getAndroidSwingSymNeuralNetwork()")));
- (VSPKNeuralNetwork *)getJacketPocketNeuralNetwork __attribute__((swift_name("getJacketPocketNeuralNetwork()")));
- (VSPKNeuralNetwork *)getPS20SwingAntiSymNeuralNetwork __attribute__((swift_name("getPS20SwingAntiSymNeuralNetwork()")));
- (VSPKNeuralNetwork *)getPS20SwingSymNeuralNetwork __attribute__((swift_name("getPS20SwingSymNeuralNetwork()")));
- (VSPKNeuralNetwork *)getPocketNeuralNetwork __attribute__((swift_name("getPocketNeuralNetwork()")));
- (VSPKNeuralNetwork *)getRegularAndroidNeuralNetwork __attribute__((swift_name("getRegularAndroidNeuralNetwork()")));
- (VSPKNeuralNetwork *)getRegularNeuralNetwork __attribute__((swift_name("getRegularNeuralNetwork()")));
- (VSPKSVM *)getSwingAndroidSVM __attribute__((swift_name("getSwingAndroidSVM()")));
- (VSPKNeuralNetwork *)getSwingAntiSymNeuralNetwork __attribute__((swift_name("getSwingAntiSymNeuralNetwork()")));
- (VSPKNeuralNetwork *)getSwingSymNeuralNetwork __attribute__((swift_name("getSwingSymNeuralNetwork()")));
- (VSPKSVM *)getTrolleySVM __attribute__((swift_name("getTrolleySVM()")));
- (VSPKNeuralNetwork *)getWarehouseTrolleyNeuralNetwork __attribute__((swift_name("getWarehouseTrolleyNeuralNetwork()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NNActivationFunctions")))
@interface VSPKNNActivationFunctions : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nNActivationFunctions __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKNNActivationFunctions *shared __attribute__((swift_name("shared")));
- (NSMutableArray<VSPKFloat *> *)logisticSigmoidX:(NSMutableArray<VSPKFloat *> *)x __attribute__((swift_name("logisticSigmoid(x:)")));
- (NSMutableArray<VSPKFloat *> *)reLUX:(NSMutableArray<VSPKFloat *> *)x __attribute__((swift_name("reLU(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NNCoefficientReader")))
@interface VSPKNNCoefficientReader : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nNCoefficientReader __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKNNCoefficientReader *shared __attribute__((swift_name("shared")));
- (VSPKNNCoefficientReaderJsonNN *)readNNFromFileJsonString:(NSString *)jsonString __attribute__((swift_name("readNNFromFile(jsonString:)")));
- (void)writeCoefficientsToNNParamObjectJsonNN:(VSPKNNCoefficientReaderJsonNN *)jsonNN coeff_dir_nn:(NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *)coeff_dir_nn scales_dir_nn:(NSMutableArray<VSPKFloat *> *)scales_dir_nn means_dir_nn:(NSMutableArray<VSPKFloat *> *)means_dir_nn intercepts_dir_nn:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)intercepts_dir_nn __attribute__((swift_name("writeCoefficientsToNNParamObject(jsonNN:coeff_dir_nn:scales_dir_nn:means_dir_nn:intercepts_dir_nn:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NNCoefficientReader.JsonNN")))
@interface VSPKNNCoefficientReaderJsonNN : VSPKBase
- (instancetype)initWithLayers:(int32_t)layers dimension:(VSPKKotlinIntArray *)dimension coeff_values:(VSPKKotlinFloatArray *)coeff_values scales:(VSPKKotlinFloatArray *)scales means:(VSPKKotlinFloatArray *)means intercepts:(VSPKKotlinFloatArray *)intercepts __attribute__((swift_name("init(layers:dimension:coeff_values:scales:means:intercepts:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKNNCoefficientReaderJsonNNCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()")));
- (VSPKKotlinIntArray *)component2 __attribute__((swift_name("component2()")));
- (VSPKKotlinFloatArray *)component3 __attribute__((swift_name("component3()")));
- (VSPKKotlinFloatArray *)component4 __attribute__((swift_name("component4()")));
- (VSPKKotlinFloatArray *)component5 __attribute__((swift_name("component5()")));
- (VSPKKotlinFloatArray *)component6 __attribute__((swift_name("component6()")));
- (VSPKNNCoefficientReaderJsonNN *)doCopyLayers:(int32_t)layers dimension:(VSPKKotlinIntArray *)dimension coeff_values:(VSPKKotlinFloatArray *)coeff_values scales:(VSPKKotlinFloatArray *)scales means:(VSPKKotlinFloatArray *)means intercepts:(VSPKKotlinFloatArray *)intercepts __attribute__((swift_name("doCopy(layers:dimension:coeff_values:scales:means:intercepts:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKKotlinFloatArray *coeff_values __attribute__((swift_name("coeff_values")));
@property (readonly) VSPKKotlinIntArray *dimension __attribute__((swift_name("dimension")));
@property (readonly) VSPKKotlinFloatArray *intercepts __attribute__((swift_name("intercepts")));
@property (readonly) int32_t layers __attribute__((swift_name("layers")));
@property (readonly) VSPKKotlinFloatArray *means __attribute__((swift_name("means")));
@property (readonly) VSPKKotlinFloatArray *scales __attribute__((swift_name("scales")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NNCoefficientReader.JsonNNCompanion")))
@interface VSPKNNCoefficientReaderJsonNNCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKNNCoefficientReaderJsonNNCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NeuralNetwork")))
@interface VSPKNeuralNetwork : VSPKMLModel
- (instancetype)initWithCoefficients:(NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *)coefficients intercepts:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)intercepts transformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers activationFunctionType:(VSPKNeuralNetworkActivationFunctionType *)activationFunctionType __attribute__((swift_name("init(coefficients:intercepts:transformers:activationFunctionType:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)debugPrintLayers __attribute__((swift_name("debugPrintLayers()")));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
- (float)predictProbabilityX:(NSMutableArray<VSPKFloat *> *)x __attribute__((swift_name("predictProbability(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NeuralNetwork.ActivationFunctionType")))
@interface VSPKNeuralNetworkActivationFunctionType : VSPKKotlinEnum<VSPKNeuralNetworkActivationFunctionType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKNeuralNetworkActivationFunctionType *relu __attribute__((swift_name("relu")));
@property (class, readonly) VSPKNeuralNetworkActivationFunctionType *sigmoid __attribute__((swift_name("sigmoid")));
+ (VSPKKotlinArray<VSPKNeuralNetworkActivationFunctionType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PS20SwingAntiSymNeuralNetworkParameters")))
@interface VSPKPS20SwingAntiSymNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pS20SwingAntiSymNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPS20SwingAntiSymNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("coeff_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("intercepts_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_0_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_10_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_11_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_12_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_1_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_2_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_3_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_4_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_5_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_6_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_7_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_8_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_9_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_coeff_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_0_intercepts_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_0_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_10_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_11_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_12_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_13_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_14_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_15_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_16_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_17_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_18_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_19_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_1_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_2_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_3_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_4_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_5_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_6_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_7_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_8_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_9_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_coeff_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("layer_1_intercepts_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("means_PS20SwingAntiSym20221025_132822")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_PS20SwingAntiSym20221025_132822 __attribute__((swift_name("scales_PS20SwingAntiSym20221025_132822")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PS20SwingSymNeuralNetworkParameters")))
@interface VSPKPS20SwingSymNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pS20SwingSymNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPS20SwingSymNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_PS20SwingSym20221025_132223 __attribute__((swift_name("coeff_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_PS20SwingSym20221025_132223 __attribute__((swift_name("intercepts_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_0_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_10_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_11_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_12_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_1_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_2_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_3_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_4_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_5_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_6_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_7_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_8_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_9_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_coeff_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_0_intercepts_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_0_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_10_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_11_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_12_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_13_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_14_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_15_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_15_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_16_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_16_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_17_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_17_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_18_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_18_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_19_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_19_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_1_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_2_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_3_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_4_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_5_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_6_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_7_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_8_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_9_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_coeff_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_PS20SwingSym20221025_132223 __attribute__((swift_name("layer_1_intercepts_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_PS20SwingSym20221025_132223 __attribute__((swift_name("means_PS20SwingSym20221025_132223")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_PS20SwingSym20221025_132223 __attribute__((swift_name("scales_PS20SwingSym20221025_132223")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PocketOrSwingNeuralNetworkParameters")))
@interface VSPKPocketOrSwingNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pocketOrSwingNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPocketOrSwingNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_mode_classifier_nn_20220818_143703 __attribute__((swift_name("coeff_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_mode_classifier_nn_20220818_143703 __attribute__((swift_name("intercepts_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_0_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_10_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_10_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_11_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_11_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_12_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_12_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_13_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_13_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_14_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_14_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_15_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_15_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_16_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_16_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_17_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_17_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_18_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_18_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_19_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_19_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_1_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_2_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_3_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_4_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_5_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_5_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_6_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_6_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_7_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_7_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_8_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_8_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_9_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_9_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_coeff_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_0_intercepts_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_0_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_10_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_11_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_12_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_12_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_13_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_13_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_14_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_14_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_1_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_2_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_3_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_4_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_5_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_6_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_7_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_8_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_9_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_coeff_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_mode_classifier_nn_20220818_143703 __attribute__((swift_name("layer_1_intercepts_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_mode_classifier_nn_20220818_143703 __attribute__((swift_name("means_mode_classifier_nn_20220818_143703")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_mode_classifier_nn_20220818_143703 __attribute__((swift_name("scales_mode_classifier_nn_20220818_143703")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegularNeuralNetworkParameters")))
@interface VSPKRegularNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)regularNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRegularNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_regular_NN_apollo20210925_142827 __attribute__((swift_name("coeff_regular_NN_apollo20210925_142827")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_regular_NN_apollo20210925_142827 __attribute__((swift_name("intercepts_regular_NN_apollo20210925_142827")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_regular_NN_apollo20210925_142827 __attribute__((swift_name("means_regular_NN_apollo20210925_142827")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_regular_NN_apollo20210925_142827 __attribute__((swift_name("scales_regular_NN_apollo20210925_142827")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymNeuralNetworkParameters")))
@interface VSPKSwingAntiSymNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingAntiSymNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingAntiSymNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_ANTI_SYM_SWING __attribute__((swift_name("coeff_ANTI_SYM_SWING")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_ANTI_SYM_SWING __attribute__((swift_name("intercepts_ANTI_SYM_SWING")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_ANTI_SYM_SWING __attribute__((swift_name("means_ANTI_SYM_SWING")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_ANTI_SYM_SWING __attribute__((swift_name("scales_ANTI_SYM_SWING")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingNeuralNetworkParameters")))
@interface VSPKSwingNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_20210628_101331 __attribute__((swift_name("coeff_20210628_101331")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_20210628_101331 __attribute__((swift_name("intercepts_20210628_101331")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_20210628_101331 __attribute__((swift_name("means_20210628_101331")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_20210628_101331 __attribute__((swift_name("scales_20210628_101331")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymNeuralNetworkParameters")))
@interface VSPKSwingSymNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingSymNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingSymNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_swing_NN_SYM_20220114_135358 __attribute__((swift_name("coeff_swing_NN_SYM_20220114_135358")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_swing_NN_SYM_20220114_135358 __attribute__((swift_name("intercepts_swing_NN_SYM_20220114_135358")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_swing_NN_SYM_20220114_135358 __attribute__((swift_name("means_swing_NN_SYM_20220114_135358")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_swing_NN_SYM_20220114_135358 __attribute__((swift_name("scales_swing_NN_SYM_20220114_135358")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TrolleyNeuralNetworkParameters")))
@interface VSPKTrolleyNeuralNetworkParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)trolleyNeuralNetworkParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTrolleyNeuralNetworkParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_trolley_NN_20210305_102105 __attribute__((swift_name("coeff_trolley_NN_20210305_102105")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_trolley_NN_20210305_102105 __attribute__((swift_name("intercepts_trolley_NN_20210305_102105")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_trolley_NN_20210305_102105 __attribute__((swift_name("means_trolley_NN_20210305_102105")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_trolley_NN_20210305_102105 __attribute__((swift_name("scales_trolley_NN_20210305_102105")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidSymAntiSymParameters")))
@interface VSPKAndroidSymAntiSymParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)androidSymAntiSymParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAndroidSymAntiSymParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_SymAntiSymAndroid20220826_161324 __attribute__((swift_name("PCA_components_SymAntiSymAndroid20220826_161324")));
@property (readonly) NSMutableArray<VSPKFloat *> *c0_SymAntiSymAndroid20220826_161324 __attribute__((swift_name("c0_SymAntiSymAndroid20220826_161324")));
@property (readonly) NSMutableArray<VSPKFloat *> *c1_SymAntiSymAndroid20220826_161324 __attribute__((swift_name("c1_SymAntiSymAndroid20220826_161324")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_SymAntiSymAndroid20220826_161324 __attribute__((swift_name("means_SymAntiSymAndroid20220826_161324")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_SymAntiSymAndroid20220826_161324 __attribute__((swift_name("scales_SymAntiSymAndroid20220826_161324")));
@end;

__attribute__((swift_name("SVM")))
@interface VSPKSVM : VSPKMLModel
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers weights:(NSMutableArray<VSPKFloat *> *)weights intercept:(float)intercept supportVectors:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)supportVectors kernel:(VSPKFloat *(^)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *))kernel __attribute__((swift_name("init(transformers:weights:intercept:supportVectors:kernel:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@property float intercept __attribute__((swift_name("intercept")));
@property (readonly) VSPKFloat *(^kernel)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *) __attribute__((swift_name("kernel")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *supportVectors __attribute__((swift_name("supportVectors")));
@property NSMutableArray<VSPKFloat *> *weights __attribute__((swift_name("weights")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinearSVM")))
@interface VSPKLinearSVM : VSPKSVM
- (instancetype)initWithWeights:(NSMutableArray<VSPKFloat *> *)weights intercept:(float)intercept transformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(weights:intercept:transformers:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers weights:(NSMutableArray<VSPKFloat *> *)weights intercept:(float)intercept supportVectors:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)supportVectors kernel:(VSPKFloat *(^)(VSPKKotlinArray<VSPKFloat *> *, NSMutableArray<VSPKFloat *> *))kernel __attribute__((swift_name("init(transformers:weights:intercept:supportVectors:kernel:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LinearSVMSwingStepDetectorValues")))
@interface VSPKLinearSVMSwingStepDetectorValues : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)linearSVMSwingStepDetectorValues __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKLinearSVMSwingStepDetectorValues *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_hugo_04_dec_2020 __attribute__((swift_name("PCA_components_hugo_04_dec_2020")));
@property (readonly) NSMutableArray<VSPKFloat *> *coef_hugo_04_dec_2020 __attribute__((swift_name("coef_hugo_04_dec_2020")));
@property (readonly) float intercept_hugo_04_dec_2020 __attribute__((swift_name("intercept_hugo_04_dec_2020")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_hugo_04_dec_2020 __attribute__((swift_name("means_hugo_04_dec_2020")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_hugo_04_dec_2020 __attribute__((swift_name("scales_hugo_04_dec_2020")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PS20SwingAntiSymLenientParameters")))
@interface VSPKPS20SwingAntiSymLenientParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pS20SwingAntiSymLenientParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPS20SwingAntiSymLenientParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_AntiSymAndroid20221025_164706 __attribute__((swift_name("PCA_components_AntiSymAndroid20221025_164706")));
@property (readonly) NSMutableArray<VSPKFloat *> *c0_AntiSymAndroid20221025_164706 __attribute__((swift_name("c0_AntiSymAndroid20221025_164706")));
@property (readonly) NSMutableArray<VSPKFloat *> *c1_AntiSymAndroid20221025_164706 __attribute__((swift_name("c1_AntiSymAndroid20221025_164706")));
@property (readonly) float line_k_AntiSymAndroid20221025_164706 __attribute__((swift_name("line_k_AntiSymAndroid20221025_164706")));
@property (readonly) float line_m_AntiSymAndroid20221025_164706 __attribute__((swift_name("line_m_AntiSymAndroid20221025_164706")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_AntiSymAndroid20221025_164706 __attribute__((swift_name("means_AntiSymAndroid20221025_164706")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_AntiSymAndroid20221025_164706 __attribute__((swift_name("scales_AntiSymAndroid20221025_164706")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PS20SwingSymLenientParameters")))
@interface VSPKPS20SwingSymLenientParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pS20SwingSymLenientParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPS20SwingSymLenientParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_SymAndroid20221025_174441 __attribute__((swift_name("PCA_components_SymAndroid20221025_174441")));
@property (readonly) NSMutableArray<VSPKFloat *> *c0_SymAndroid20221025_174441 __attribute__((swift_name("c0_SymAndroid20221025_174441")));
@property (readonly) NSMutableArray<VSPKFloat *> *c1_SymAndroid20221025_174441 __attribute__((swift_name("c1_SymAndroid20221025_174441")));
@property (readonly) float ellipse_a_SymAndroid20221025_174441 __attribute__((swift_name("ellipse_a_SymAndroid20221025_174441")));
@property (readonly) float ellipse_alpha_SymAndroid20221025_174441 __attribute__((swift_name("ellipse_alpha_SymAndroid20221025_174441")));
@property (readonly) float ellipse_b_SymAndroid20221025_174441 __attribute__((swift_name("ellipse_b_SymAndroid20221025_174441")));
@property (readonly) float ellipse_x0_SymAndroid20221025_174441 __attribute__((swift_name("ellipse_x0_SymAndroid20221025_174441")));
@property (readonly) float ellipse_y0_SymAndroid20221025_174441 __attribute__((swift_name("ellipse_y0_SymAndroid20221025_174441")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_SymAndroid20221025_174441 __attribute__((swift_name("means_SymAndroid20221025_174441")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_SymAndroid20221025_174441 __attribute__((swift_name("scales_SymAndroid20221025_174441")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RegularRBFSVMsupport")))
@interface VSPKRegularRBFSVMsupport : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)regularRBFSVMsupport __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKRegularRBFSVMsupport *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_spack_rbf_v2 __attribute__((swift_name("PCA_components_spack_rbf_v2")));
@property (readonly) float PCA_variance_spack_rbf __attribute__((swift_name("PCA_variance_spack_rbf")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *all_sv_spack_rbf_v2 __attribute__((swift_name("all_sv_spack_rbf_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *dual_coef_spack_rbf_v2 __attribute__((swift_name("dual_coef_spack_rbf_v2")));
@property (readonly) float intercept_spack_rbf_v2 __attribute__((swift_name("intercept_spack_rbf_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_spack_rbf_v2 __attribute__((swift_name("means_spack_rbf_v2")));
@property (readonly) NSMutableArray<VSPKInt *> *removed_vals_spack_rbf_v2 __attribute__((swift_name("removed_vals_spack_rbf_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_spack_rbf_v2 __attribute__((swift_name("scales_spack_rbf_v2")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SVMHelpers")))
@interface VSPKSVMHelpers : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)sVMHelpers __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSVMHelpers *shared __attribute__((swift_name("shared")));
- (float)rbfKernelX:(VSPKKotlinArray<VSPKFloat *> *)x y:(NSMutableArray<VSPKFloat *> *)y variance:(float)variance __attribute__((swift_name("rbfKernel(x:y:variance:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SpackRBFSVMsupport")))
@interface VSPKSpackRBFSVMsupport : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)spackRBFSVMsupport __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSpackRBFSVMsupport *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_spack_swing_12_okt_rbf __attribute__((swift_name("PCA_components_spack_swing_12_okt_rbf")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_spack_swing_rbf __attribute__((swift_name("PCA_components_spack_swing_rbf")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_weak_eval_swing __attribute__((swift_name("PCA_components_weak_eval_swing")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_weak_eval_swing_12_okt __attribute__((swift_name("PCA_components_weak_eval_swing_12_okt")));
@property (readonly) float PCA_variance_spack_swing_12_okt_rbf __attribute__((swift_name("PCA_variance_spack_swing_12_okt_rbf")));
@property (readonly) float PCA_variance_spack_swing_rbf __attribute__((swift_name("PCA_variance_spack_swing_rbf")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *all_sv_spack_swing_12_okt_rbf __attribute__((swift_name("all_sv_spack_swing_12_okt_rbf")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *all_sv_spack_swing_rbf __attribute__((swift_name("all_sv_spack_swing_rbf")));
@property (readonly) NSMutableArray<VSPKFloat *> *dual_coef_spack_swing_12_okt_rbf __attribute__((swift_name("dual_coef_spack_swing_12_okt_rbf")));
@property (readonly) NSMutableArray<VSPKFloat *> *dual_coef_spack_swing_rbf __attribute__((swift_name("dual_coef_spack_swing_rbf")));
@property (readonly) float intercept_spack_swing_12_okt_rbf __attribute__((swift_name("intercept_spack_swing_12_okt_rbf")));
@property (readonly) float intercept_spack_swing_rbf __attribute__((swift_name("intercept_spack_swing_rbf")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_spack_swing_12_okt_rbf __attribute__((swift_name("means_spack_swing_12_okt_rbf")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_spack_swing_rbf __attribute__((swift_name("means_spack_swing_rbf")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_spack_swing_12_okt_rbf __attribute__((swift_name("scales_spack_swing_12_okt_rbf")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_spack_swing_rbf __attribute__((swift_name("scales_spack_swing_rbf")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingAntiSymLenientParameters")))
@interface VSPKSwingAntiSymLenientParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingAntiSymLenientParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingAntiSymLenientParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_swing_antisym_lenient_200122 __attribute__((swift_name("means_swing_antisym_lenient_200122")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_swing_antisym_lenient_200122 __attribute__((swift_name("scales_swing_antisym_lenient_200122")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingPCAEvaluator")))
@interface VSPKSwingPCAEvaluator : VSPKMLModel
- (instancetype)initWithX0:(float)x0 y0:(float)y0 y1:(float)y1 scaler:(VSPKStandardScaler *)scaler PCA:(VSPKPCATransformer *)PCA __attribute__((swift_name("init(x0:y0:y1:scaler:PCA:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SwingSymLenientParameters")))
@interface VSPKSwingSymLenientParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)swingSymLenientParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSwingSymLenientParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_swing_sym_lenient_200122 __attribute__((swift_name("PCA_components_swing_sym_lenient_200122")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_swing_sym_lenient_200122 __attribute__((swift_name("means_swing_sym_lenient_200122")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_swing_sym_lenient_200122 __attribute__((swift_name("scales_swing_sym_lenient_200122")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SymAntiSymParameters")))
@interface VSPKSymAntiSymParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)symAntiSymParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKSymAntiSymParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCAComponentsSymAntiSym __attribute__((swift_name("PCAComponentsSymAntiSym")));
@property (readonly) NSMutableArray<VSPKFloat *> *meansSymAntiSym __attribute__((swift_name("meansSymAntiSym")));
@property (readonly) NSMutableArray<VSPKFloat *> *scalesSymAntiSym __attribute__((swift_name("scalesSymAntiSym")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeakEvaluatorParameters")))
@interface VSPKWeakEvaluatorParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)weakEvaluatorParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKWeakEvaluatorParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_regular_lenient_250921 __attribute__((swift_name("PCA_components_regular_lenient_250921")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_weak_eval __attribute__((swift_name("PCA_components_weak_eval")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *PCA_components_weak_eval_swing_jun30 __attribute__((swift_name("PCA_components_weak_eval_swing_jun30")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_regular_lenient_250921 __attribute__((swift_name("means_regular_lenient_250921")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_weak_eval_swing_jun30 __attribute__((swift_name("means_weak_eval_swing_jun30")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_regular_lenient_250921 __attribute__((swift_name("scales_regular_lenient_250921")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_weak_eval_swing_jun30 __attribute__((swift_name("scales_weak_eval_swing_jun30")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EllipseEvaluator")))
@interface VSPKEllipseEvaluator : VSPKMLModel
- (instancetype)initWithCenterX:(float)centerX centerY:(float)centerY alpha:(float)alpha radiusA:(float)radiusA radiusB:(float)radiusB scaler:(VSPKStandardScaler *)scaler PCA:(VSPKPCATransformer *)PCA __attribute__((swift_name("init(centerX:centerY:alpha:radiusA:radiusB:scaler:PCA:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FirstPCAEvaluator")))
@interface VSPKFirstPCAEvaluator : VSPKMLModel
- (instancetype)initWithX0:(float)x0 scaler:(VSPKStandardScaler *)scaler PCA:(VSPKPCATransformer *)PCA __attribute__((swift_name("init(x0:scaler:PCA:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HyperbolaEvaluator")))
@interface VSPKHyperbolaEvaluator : VSPKMLModel
- (instancetype)initWithScaler:(VSPKStandardScaler *)scaler PCA:(VSPKPCATransformer *)PCA hyperbolaAngle:(double)hyperbolaAngle hyperbolaInnerConstant:(double)hyperbolaInnerConstant hyperbolaXShift:(double)hyperbolaXShift hyperbolaYShift:(double)hyperbolaYShift __attribute__((swift_name("init(scaler:PCA:hyperbolaAngle:hyperbolaInnerConstant:hyperbolaXShift:hyperbolaYShift:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LineEvaluator")))
@interface VSPKLineEvaluator : VSPKMLModel
- (instancetype)initWithK:(float)k m:(float)m scaler:(VSPKStandardScaler *)scaler PCA:(VSPKPCATransformer *)PCA __attribute__((swift_name("init(k:m:scaler:PCA:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoPCAEllipseEvaluator")))
@interface VSPKNoPCAEllipseEvaluator : VSPKMLModel
- (instancetype)initWithCenterX:(float)centerX centerY:(float)centerY alpha:(float)alpha radiusA:(float)radiusA radiusB:(float)radiusB scaler:(VSPKStandardScaler *)scaler __attribute__((swift_name("init(centerX:centerY:alpha:radiusA:radiusB:scaler:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithTransformers:(NSMutableArray<VSPKVectorTransformer *> *)transformers __attribute__((swift_name("init(transformers:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (BOOL)predictX:(VSPKKotlinArray<VSPKFloat *> *)x __attribute__((swift_name("predict(x:)")));
@property (readonly) float alpha __attribute__((swift_name("alpha")));
@property (readonly) float centerX __attribute__((swift_name("centerX")));
@property (readonly) float centerY __attribute__((swift_name("centerY")));
@property (readonly) float radiusA __attribute__((swift_name("radiusA")));
@property (readonly) float radiusB __attribute__((swift_name("radiusB")));
@end;

__attribute__((swift_name("LegacyInterface")))
@protocol VSPKLegacyInterface <VSPKIQPSInteractor>
@required
- (void)onBadStepLength __attribute__((swift_name("onBadStepLength()"))) __attribute__((deprecated("Use onRescueMode instead")));
- (void)onDestroy __attribute__((swift_name("onDestroy()"))) __attribute__((deprecated("Unused")));
- (void)onFloorChangeFloorDifference:(int32_t)floorDifference timestamp:(int64_t)timestamp __attribute__((swift_name("onFloorChange(floorDifference:timestamp:)")));
- (void)onIllegalBehaviour __attribute__((swift_name("onIllegalBehaviour()")));
- (void)onNewDeviceOrientationOrientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("onNewDeviceOrientation(orientation:)")));
- (void)onNewDirectionBundleDirectionBundle:(VSPKDirectionBundle *)directionBundle __attribute__((swift_name("onNewDirectionBundle(directionBundle:)")));
- (void)onNewNavigationBundleNavigationBundle:(VSPKNavBundle *)navigationBundle __attribute__((swift_name("onNewNavigationBundle(navigationBundle:)")));
- (void)onPositionEventPositionEvent:(VSPKPositionEvent *)positionEvent __attribute__((swift_name("onPositionEvent(positionEvent:)")));
- (void)onRescueModeCurrentTime:(int64_t)currentTime __attribute__((swift_name("onRescueMode(currentTime:)")));
- (void)onSensorsInitiated __attribute__((swift_name("onSensorsInitiated()")));
- (void)onTrolleyDetectionCurrentTime:(int64_t)currentTime __attribute__((swift_name("onTrolleyDetection(currentTime:)")));
@end;

__attribute__((swift_name("LegacyInterfacePlus")))
@protocol VSPKLegacyInterfacePlus <VSPKLegacyInterface>
@required
- (void)handleNeoSignalSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("handleNeoSignal(signal:)")));
@property (readonly) id<VSPKSignalDispatcher> signalDispatcher __attribute__((swift_name("signalDispatcher")));
@property (readonly) id<VSPKIQPSVPS> _Nullable vps __attribute__((swift_name("vps")));
@end;

__attribute__((swift_name("SignalDispatcher")))
@protocol VSPKSignalDispatcher
@required
- (NSMutableArray<id<VSPKSignalResponse>> *)dispatchSignalSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("dispatchSignal(signal:)")));
@end;

__attribute__((swift_name("SignalHandler")))
@interface VSPKSignalHandler : VSPKBase <VSPKSignalDispatcher>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<id<VSPKSignalResponse>> *)dispatchSignalSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("dispatchSignal(signal:)")));
@property (readonly) NSMutableArray<id<VSPKSignalListener>> *listeners __attribute__((swift_name("listeners")));
@end;

__attribute__((swift_name("SignalListener")))
@protocol VSPKSignalListener
@required
- (id<VSPKSignalResponse> _Nullable)listenSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("listen(signal:)")));
@end;

__attribute__((swift_name("SignalResponse")))
@protocol VSPKSignalResponse
@required
- (void)responseVps:(id<VSPKIQPSVPS>)vps __attribute__((swift_name("response(vps:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoRescueAfterSyncExample")))
@interface VSPKNoRescueAfterSyncExample : VSPKBase <VSPKSignalListener>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (id<VSPKSignalResponse> _Nullable)listenSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("listen(signal:)")));
@property id<VSPKIQPSSyncData> _Nullable latestSyncData __attribute__((swift_name("latestSyncData")));
@property VSPKLong * _Nullable latestSyncTime __attribute__((swift_name("latestSyncTime")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetDirectionResponse")))
@interface VSPKSetDirectionResponse : VSPKBase <VSPKSignalResponse>
- (instancetype)initWithAngle:(float)angle __attribute__((swift_name("init(angle:)"))) __attribute__((objc_designated_initializer));
- (void)responseVps:(id<VSPKIQPSVPS>)vps __attribute__((swift_name("response(vps:)")));
@property (readonly) float angle __attribute__((swift_name("angle")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SetPositionResponse")))
@interface VSPKSetPositionResponse : VSPKBase <VSPKSignalResponse>
- (instancetype)initWithSyncEvent:(id<VSPKIQPSSyncData>)syncEvent __attribute__((swift_name("init(syncEvent:)"))) __attribute__((objc_designated_initializer));
- (void)responseVps:(id<VSPKIQPSVPS>)vps __attribute__((swift_name("response(vps:)")));
@property (readonly) id<VSPKIQPSSyncData> syncEvent __attribute__((swift_name("syncEvent")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TSPDirectionExample")))
@interface VSPKTSPDirectionExample : VSPKBase <VSPKSignalListener>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (float)getTSPDirectionPosition:(VSPKPointF *)position __attribute__((swift_name("getTSPDirection(position:)")));
- (id<VSPKSignalResponse> _Nullable)listenSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("listen(signal:)")));
@property (readonly) int64_t TROLLEY_TSP_DIRECTION_THRESHOLD __attribute__((swift_name("TROLLEY_TSP_DIRECTION_THRESHOLD")));
@property VSPKPointF * _Nullable currentPosition __attribute__((swift_name("currentPosition")));
@property int64_t latestTrolleyTime __attribute__((swift_name("latestTrolleyTime")));
@end;

__attribute__((swift_name("VeddestaInterfacePlusExample")))
@interface VSPKVeddestaInterfacePlusExample : VSPKBase <VSPKLegacyInterfacePlus>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)setVPSVps:(id<VSPKIQPSVPS>)vps __attribute__((swift_name("setVPS(vps:)")));
@property (readonly) id<VSPKSignalDispatcher> signalDispatcher __attribute__((swift_name("signalDispatcher")));
@property (readonly) id<VSPKIQPSVPS> _Nullable vps __attribute__((swift_name("vps")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VeddestaPlusSignalHandler")))
@interface VSPKVeddestaPlusSignalHandler : VSPKSignalHandler
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (readonly) NSMutableArray<id<VSPKSignalListener>> *listeners __attribute__((swift_name("listeners")));
@end;

__attribute__((swift_name("FloorSensor")))
@protocol VSPKFloorSensor <VSPKAuxiliarySensor, VSPKObserver>
@required
- (void)checkAndListenObservable:(VSPKRawSensor * _Nullable)observable __attribute__((swift_name("checkAndListen(observable:)")));
- (void)onNewDataData:(float)data timestamp:(int64_t)timestamp dataType:(VSPKRawSensorDataSensorDataType *)dataType __attribute__((swift_name("onNewData(data:timestamp:dataType:)")));
@property (readonly) void (^floorChangeCallback)(VSPKInt *, VSPKLong *) __attribute__((swift_name("floorChangeCallback")));
@property VSPKRawSensor * _Nullable sensor __attribute__((swift_name("sensor")));
@end;

__attribute__((swift_name("AltitudeBasedFloorSensor")))
@interface VSPKAltitudeBasedFloorSensor : VSPKBase <VSPKFloorSensor>
- (instancetype)initWithFloorDistance:(double)floorDistance floorChangeCallback:(void (^)(VSPKInt *, VSPKLong *))floorChangeCallback externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(floorDistance:floorChangeCallback:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (float)filterSensorDataData:(float)data __attribute__((swift_name("filterSensorData(data:)")));
- (void)onNewDataData:(float)data timestamp:(int64_t)timestamp dataType:(VSPKRawSensorDataSensorDataType *)dataType __attribute__((swift_name("onNewData(data:timestamp:dataType:)")));
@property VSPKAverageVariance *compensationDataHistory __attribute__((swift_name("compensationDataHistory")));
@property VSPKAverageVariance *dataHistory __attribute__((swift_name("dataHistory")));
@property (readonly) void (^floorChangeCallback)(VSPKInt *, VSPKLong *) __attribute__((swift_name("floorChangeCallback")));
@property (readonly) VSPKFloorSensorParameters *parameters __attribute__((swift_name("parameters")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AltitudeBasedFloorSensor.FloorState")))
@interface VSPKAltitudeBasedFloorSensorFloorState : VSPKKotlinEnum<VSPKAltitudeBasedFloorSensorFloorState *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKAltitudeBasedFloorSensorFloorState *goingUp __attribute__((swift_name("goingUp")));
@property (class, readonly) VSPKAltitudeBasedFloorSensorFloorState *goingDown __attribute__((swift_name("goingDown")));
@property (class, readonly) VSPKAltitudeBasedFloorSensorFloorState *stable __attribute__((swift_name("stable")));
+ (VSPKKotlinArray<VSPKAltitudeBasedFloorSensorFloorState *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AndroidFloorSensor")))
@interface VSPKAndroidFloorSensor : VSPKAltitudeBasedFloorSensor
- (instancetype)initWithFloorDistance:(double)floorDistance floorChangeCallback:(void (^)(VSPKInt *, VSPKLong *))floorChangeCallback sensor:(VSPKRawSensor * _Nullable)sensor externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(floorDistance:floorChangeCallback:sensor:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFloorDistance:(double)floorDistance floorChangeCallback:(void (^)(VSPKInt *, VSPKLong *))floorChangeCallback externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(floorDistance:floorChangeCallback:externalDataManager:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (float)filterSensorDataData:(float)data __attribute__((swift_name("filterSensorData(data:)")));
- (void)onNewDataData:(float)data timestamp:(int64_t)timestamp dataType:(VSPKRawSensorDataSensorDataType *)dataType __attribute__((swift_name("onNewData(data:timestamp:dataType:)")));
@property VSPKRawSensor * _Nullable sensor __attribute__((swift_name("sensor")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FloorSensorFrequencyUser")))
@interface VSPKFloorSensorFrequencyUser : VSPKFrequencyUser
- (instancetype)initWithSensor:(VSPKRawSensor * _Nullable)sensor onFrequencyCallback:(void (^)(void))onFrequencyCallback __attribute__((swift_name("init(sensor:onFrequencyCallback:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)onSampleFrequencyInitialised __attribute__((swift_name("onSampleFrequencyInitialised()")));
@property (readonly) void (^onFrequencyCallback)(void) __attribute__((swift_name("onFrequencyCallback")));
@property VSPKRawSensor * _Nullable sensor __attribute__((swift_name("sensor")));
@property (readonly) VSPKRawSensorDataSensorDataType *sensorType __attribute__((swift_name("sensorType")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IOSFloorSensor")))
@interface VSPKIOSFloorSensor : VSPKAltitudeBasedFloorSensor
- (instancetype)initWithFloorDistance:(double)floorDistance floorChangeCallback:(void (^)(VSPKInt *, VSPKLong *))floorChangeCallback sensor:(VSPKRawSensor * _Nullable)sensor externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(floorDistance:floorChangeCallback:sensor:externalDataManager:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithFloorDistance:(double)floorDistance floorChangeCallback:(void (^)(VSPKInt *, VSPKLong *))floorChangeCallback externalDataManager:(VSPKExternalDataManager *)externalDataManager __attribute__((swift_name("init(floorDistance:floorChangeCallback:externalDataManager:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (float)filterSensorDataData:(float)data __attribute__((swift_name("filterSensorData(data:)")));
@property VSPKRawSensor * _Nullable sensor __attribute__((swift_name("sensor")));
@end;

__attribute__((swift_name("PositionEventHandler")))
@interface VSPKPositionEventHandler : VSPKBase
- (instancetype)initWithOnNewPath:(void (^)(NSMutableArray<VSPKPointF *> *, VSPKLong *))onNewPath scroobyFun:(NSMutableArray<VSPKPointF *> *(^)(NSMutableArray<VSPKPositionEvent *> *))scroobyFun __attribute__((swift_name("init(onNewPath:scroobyFun:)"))) __attribute__((objc_designated_initializer));
- (void)addPositionEventEvent:(VSPKPositionEvent *)event __attribute__((swift_name("addPositionEvent(event:)")));
@end;

__attribute__((swift_name("Scrubber")))
@protocol VSPKScrubber
@required
- (NSMutableArray<VSPKPointF *> *)scrubList:(NSMutableArray<VSPKPositionEvent *> *)list __attribute__((swift_name("scrub(list:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BasicScrubber")))
@interface VSPKBasicScrubber : VSPKBase <VSPKScrubber>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSMutableArray<VSPKPointF *> *)scrubList:(NSMutableArray<VSPKPositionEvent *> *)list __attribute__((swift_name("scrub(list:)")));
@end;

__attribute__((swift_name("NavMeshScrubber")))
@interface VSPKNavMeshScrubber : VSPKBase <VSPKScrubber>
- (instancetype)initWithIsPointOnNavMesh:(VSPKBoolean *(^)(VSPKPointF *))isPointOnNavMesh __attribute__((swift_name("init(isPointOnNavMesh:)"))) __attribute__((objc_designated_initializer));
- (NSMutableArray<VSPKVector *> *)generateDirectionVectorsOffset:(double)offset num:(int32_t)num __attribute__((swift_name("generateDirectionVectors(offset:num:)")));
- (int32_t)numberObjectsInWayPos1:(VSPKPointF *)pos1 pos2:(VSPKPointF *)pos2 resolution:(double)resolution __attribute__((swift_name("numberObjectsInWay(pos1:pos2:resolution:)")));
- (BOOL)rayTracePos1:(VSPKPointF *)pos1 pos2:(VSPKPointF *)pos2 resolution:(double)resolution __attribute__((swift_name("rayTrace(pos1:pos2:resolution:)")));
@property (readonly) VSPKBoolean *(^isPointOnNavMesh)(VSPKPointF *) __attribute__((swift_name("isPointOnNavMesh")));
@end;

__attribute__((swift_name("SequentialScrubber")))
@interface VSPKSequentialScrubber : VSPKNavMeshScrubber
- (instancetype)initWithIsPointOnNavMesh:(VSPKBoolean *(^)(VSPKPointF *))isPointOnNavMesh __attribute__((swift_name("init(isPointOnNavMesh:)"))) __attribute__((objc_designated_initializer));
- (void)handleClusterPrioList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleClusterPrio(list:i:)")));
- (void)handleRescueList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleRescue(list:i:)")));
- (void)handleSyncList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleSync(list:i:)")));
- (void)handleTrolleySkipList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleTrolleySkip(list:i:)")));
- (NSMutableArray<VSPKPointF *> *)scrubList:(NSMutableArray<VSPKPositionEvent *> *)list __attribute__((swift_name("scrub(list:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VeddestaHeuristicSequentialScrubber")))
@interface VSPKVeddestaHeuristicSequentialScrubber : VSPKSequentialScrubber
- (instancetype)initWithIsPointOnNavMesh:(VSPKBoolean *(^)(VSPKPointF *))isPointOnNavMesh __attribute__((swift_name("init(isPointOnNavMesh:)"))) __attribute__((objc_designated_initializer));
- (void)handleClusterPrioList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleClusterPrio(list:i:)")));
- (void)handleRescueList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleRescue(list:i:)")));
- (void)handleSyncList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleSync(list:i:)")));
- (void)handleTrolleySkipList:(NSMutableArray<VSPKPositionEvent *> *)list i:(int32_t)i __attribute__((swift_name("handleTrolleySkip(list:i:)")));
@end;

__attribute__((swift_name("LegacyQPSHandlerEmulator")))
@interface VSPKLegacyQPSHandlerEmulator : VSPKQLayerHandler
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager interactor:(id<VSPKIQPSInteractor>)interactor replayInteractor:(id<VSPKIQPSReplayInteractor>)replayInteractor mapInformation:(id<VSPKIQPSMapInformation>)mapInformation userSettings:(id<VSPKIQPSUserSettings>)userSettings parameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum mlParameters:(id<VSPKIQPSMLParameters> _Nullable)mlParameters __attribute__((swift_name("init(rawSensorManager:interactor:replayInteractor:mapInformation:userSettings:parameterPackageEnum:mlParameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use QLayerHandler")));
- (instancetype)initWithRawSensorManager:(id<VSPKIQPSRawSensorManager>)rawSensorManager interactor:(id<VSPKIQPSInteractor>)interactor replayInteractor:(id<VSPKIQPSReplayInteractor> _Nullable)replayInteractor mapInformation:(id<VSPKIQPSMapInformation>)mapInformation userSettings:(id<VSPKIQPSUserSettings> _Nullable)userSettings parameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum playback:(BOOL)playback sensorInterpreter:(id<VSPKSensorInterpreter> _Nullable)sensorInterpreter particleFilter:(id<VSPKtt2Engine> _Nullable)particleFilter tt2EngineParameterManager:(id<VSPKtt2EngineParameterManager> _Nullable)tt2EngineParameterManager mlParameters:(id<VSPKIQPSMLParameters> _Nullable)mlParameters __attribute__((swift_name("init(rawSensorManager:interactor:replayInteractor:mapInformation:userSettings:parameterPackageEnum:playback:sensorInterpreter:particleFilter:tt2EngineParameterManager:mlParameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (void)onPositionSyncEventData:(id<VSPKIQPSSyncData>)data __attribute__((swift_name("onPositionSyncEvent(data:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Altitude")))
@interface VSPKAltitude : VSPKBase
- (instancetype)initWithDelegate:(id<VSPKAltitudeDelegate>)delegate options:(VSPKAltitudeOptions *)options __attribute__((swift_name("init(delegate:options:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKAltitudeCompanion *companion __attribute__((swift_name("companion")));
- (double)averageQueue:(VSPKSingleLinkedQueue<VSPKFloat *> *)queue __attribute__((swift_name("average(queue:)")));
- (void)doNewFloorReset __attribute__((swift_name("doNewFloorReset()")));
- (void)updateAltitudeMillibar:(float)millibar __attribute__((swift_name("updateAltitude(millibar:)")));
@property float baselineAltitude __attribute__((swift_name("baselineAltitude")));
@property int32_t changeoffloorinrow __attribute__((swift_name("changeoffloorinrow")));
@property (readonly) id<VSPKAltitudeDelegate> delegate __attribute__((swift_name("delegate")));
@property int64_t firstBaseTime __attribute__((swift_name("firstBaseTime")));
@property int32_t gotAHit __attribute__((swift_name("gotAHit")));
@property float lastGoodValue __attribute__((swift_name("lastGoodValue")));
@property int32_t prematureAltitudeChangeInRow __attribute__((swift_name("prematureAltitudeChangeInRow")));
@property int32_t prematureAltitudeChangeIndicator __attribute__((swift_name("prematureAltitudeChangeIndicator")));
@property double previousAverage __attribute__((swift_name("previousAverage")));
@property VSPKSingleLinkedQueue<VSPKFloat *> *previousMillibarValues __attribute__((swift_name("previousMillibarValues")));
@property int64_t previousTime __attribute__((swift_name("previousTime")));
@property float previousValue __attribute__((swift_name("previousValue")));
@property int32_t waitForBaselineUpdate __attribute__((swift_name("waitForBaselineUpdate")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Altitude.Companion")))
@interface VSPKAltitudeCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAltitudeCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) double FAST_LEVEL_INDICATOR __attribute__((swift_name("FAST_LEVEL_INDICATOR")));
@property (readonly) int32_t MAX_TIME_TO_CHANGE_FLOOR __attribute__((swift_name("MAX_TIME_TO_CHANGE_FLOOR")));
@property (readonly) double METER_TO_NEXT_FLOOR __attribute__((swift_name("METER_TO_NEXT_FLOOR")));
@property (readonly) float SEA_LEVEL_MBAR_PRESSURE __attribute__((swift_name("SEA_LEVEL_MBAR_PRESSURE")));
@end;

__attribute__((swift_name("AltitudeDelegate")))
@protocol VSPKAltitudeDelegate
@required
- (void)changeOfFloorFloor:(int32_t)floor __attribute__((swift_name("changeOfFloor(floor:)")));
- (void)changeOfFloorIndicatorFloor:(NSString *)floor __attribute__((swift_name("changeOfFloorIndicator(floor:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Altitude.Options")))
@interface VSPKAltitudeOptions : VSPKBase
- (instancetype)initWithMeterToNextFloor:(double)meterToNextFloor maxTimeToChangeFloor:(int32_t)maxTimeToChangeFloor seaLevelMBarPressure:(float)seaLevelMBarPressure fastLevelIndicator:(double)fastLevelIndicator highestValueOfIndication:(int32_t)highestValueOfIndication timeThresholdAboveFastLevelIndicator:(int32_t)timeThresholdAboveFastLevelIndicator maxHumanlyPossibleAltitudeChangePerSecond:(int32_t)maxHumanlyPossibleAltitudeChangePerSecond extraTimeForBaselineCalculation:(int32_t)extraTimeForBaselineCalculation dataFrequencyIntervalInMillis:(int32_t)dataFrequencyIntervalInMillis timeToUpdateBaseLineMillis:(int32_t)timeToUpdateBaseLineMillis __attribute__((swift_name("init(meterToNextFloor:maxTimeToChangeFloor:seaLevelMBarPressure:fastLevelIndicator:highestValueOfIndication:timeThresholdAboveFastLevelIndicator:maxHumanlyPossibleAltitudeChangePerSecond:extraTimeForBaselineCalculation:dataFrequencyIntervalInMillis:timeToUpdateBaseLineMillis:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKAltitudeOptionsCompanion *companion __attribute__((swift_name("companion")));
- (double)component1 __attribute__((swift_name("component1()")));
- (int32_t)component10 __attribute__((swift_name("component10()")));
- (int32_t)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (double)component4 __attribute__((swift_name("component4()")));
- (int32_t)component5 __attribute__((swift_name("component5()")));
- (int32_t)component6 __attribute__((swift_name("component6()")));
- (int32_t)component7 __attribute__((swift_name("component7()")));
- (int32_t)component8 __attribute__((swift_name("component8()")));
- (int32_t)component9 __attribute__((swift_name("component9()")));
- (VSPKAltitudeOptions *)doCopyMeterToNextFloor:(double)meterToNextFloor maxTimeToChangeFloor:(int32_t)maxTimeToChangeFloor seaLevelMBarPressure:(float)seaLevelMBarPressure fastLevelIndicator:(double)fastLevelIndicator highestValueOfIndication:(int32_t)highestValueOfIndication timeThresholdAboveFastLevelIndicator:(int32_t)timeThresholdAboveFastLevelIndicator maxHumanlyPossibleAltitudeChangePerSecond:(int32_t)maxHumanlyPossibleAltitudeChangePerSecond extraTimeForBaselineCalculation:(int32_t)extraTimeForBaselineCalculation dataFrequencyIntervalInMillis:(int32_t)dataFrequencyIntervalInMillis timeToUpdateBaseLineMillis:(int32_t)timeToUpdateBaseLineMillis __attribute__((swift_name("doCopy(meterToNextFloor:maxTimeToChangeFloor:seaLevelMBarPressure:fastLevelIndicator:highestValueOfIndication:timeThresholdAboveFastLevelIndicator:maxHumanlyPossibleAltitudeChangePerSecond:extraTimeForBaselineCalculation:dataFrequencyIntervalInMillis:timeToUpdateBaseLineMillis:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property int32_t dataFrequencyIntervalInMillis __attribute__((swift_name("dataFrequencyIntervalInMillis")));
@property int32_t extraTimeForBaselineCalculation __attribute__((swift_name("extraTimeForBaselineCalculation")));
@property double fastLevelIndicator __attribute__((swift_name("fastLevelIndicator")));
@property int32_t highestValueOfIndication __attribute__((swift_name("highestValueOfIndication")));
@property int32_t maxHumanlyPossibleAltitudeChangePerSecond __attribute__((swift_name("maxHumanlyPossibleAltitudeChangePerSecond")));
@property int32_t maxTimeToChangeFloor __attribute__((swift_name("maxTimeToChangeFloor")));
@property double meterToNextFloor __attribute__((swift_name("meterToNextFloor")));
@property float seaLevelMBarPressure __attribute__((swift_name("seaLevelMBarPressure")));
@property int32_t timeThresholdAboveFastLevelIndicator __attribute__((swift_name("timeThresholdAboveFastLevelIndicator")));
@property int32_t timeToUpdateBaseLineMillis __attribute__((swift_name("timeToUpdateBaseLineMillis")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Altitude.OptionsCompanion")))
@interface VSPKAltitudeOptionsCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKAltitudeOptionsCompanion *shared __attribute__((swift_name("shared")));
- (VSPKAltitudeOptions *)default __attribute__((swift_name("default()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Node")))
@interface VSPKNode<T> : VSPKBase
- (instancetype)initWithValue:(T _Nullable)value next:(VSPKNode<T> * _Nullable)next __attribute__((swift_name("init(value:next:)"))) __attribute__((objc_designated_initializer));
@property VSPKNode<T> * _Nullable next __attribute__((swift_name("next")));
@property (readonly) T _Nullable value __attribute__((swift_name("value")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SingleLinkedQueue")))
@interface VSPKSingleLinkedQueue<T> : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (T _Nullable)dequeue __attribute__((swift_name("dequeue()")));
- (void)enqueueValue:(T _Nullable)value __attribute__((swift_name("enqueue(value:)")));
@property VSPKNode<T> * _Nullable head __attribute__((swift_name("head")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property int32_t size __attribute__((swift_name("size")));
@property VSPKNode<T> * _Nullable tail __attribute__((swift_name("tail")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BaseSignalDispatcher")))
@interface VSPKBaseSignalDispatcher : VSPKSignalHandler
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (readonly) NSMutableArray<id<VSPKSignalListener>> *listeners __attribute__((swift_name("listeners")));
@end;

__attribute__((swift_name("IPathfinderListener")))
@protocol VSPKIPathfinderListener
@required
- (void)onCurrentGoalUpdatedGoal:(id<VSPKIPathfinderGoal> _Nullable)goal __attribute__((swift_name("onCurrentGoalUpdated(goal:)")));
- (void)onPathUpdatedPath:(id<VSPKIPathfinderPath>)path __attribute__((swift_name("onPathUpdated(path:)")));
- (void)onSortedGoalUpdatedGoals:(NSArray<id<VSPKIPathfinderGoal>> *)goals __attribute__((swift_name("onSortedGoalUpdated(goals:)")));
@property (readonly) NSString *id_ __attribute__((swift_name("id_")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BaseVPSHandler")))
@interface VSPKBaseVPSHandler : VSPKBase <VSPKIQPSInteractor, VSPKIPathfinderListener>
- (instancetype)initWithParameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum onNewNavigationBundle:(void (^ _Nullable)(VSPKFloat * _Nullable, VSPKFloat * _Nullable, VSPKFloat * _Nullable, VSPKLong *))onNewNavigationBundle onPositionEvent:(void (^ _Nullable)(VSPKPositionEvent *))onPositionEvent onIllegalBehaviour:(void (^ _Nullable)(void))onIllegalBehaviour onTrolleyDetection:(void (^ _Nullable)(VSPKLong *))onTrolleyDetection onRescueMode:(void (^ _Nullable)(VSPKLong *))onRescueMode onSensorsInitiated:(void (^ _Nullable)(void))onSensorsInitiated onNewDeviceOrientation:(void (^ _Nullable)(VSPKIQPSDeviceOrientation *))onNewDeviceOrientation onFloorChange:(void (^ _Nullable)(VSPKInt *, VSPKLong *))onFloorChange onNewDebugMessage:(void (^ _Nullable)(NSString *))onNewDebugMessage onNewDirectionBundle:(void (^ _Nullable)(VSPKDirectionBundle *))onNewDirectionBundle onNewRealWorldOffsetUpdate:(void (^ _Nullable)(VSPKRealWorldOffsetUpdate *))onNewRealWorldOffsetUpdate onNewStepEvent:(void (^ _Nullable)(VSPKStepEventData *))onNewStepEvent onNewMlUpdate:(void (^ _Nullable)(VSPKMLUpdate *))onNewMlUpdate onNewMlCalibration:(void (^ _Nullable)(VSPKUserAdjustments *, VSPKIQPSPersonalMLAlgorithm *))onNewMlCalibration __attribute__((swift_name("init(parameterPackageEnum:onNewNavigationBundle:onPositionEvent:onIllegalBehaviour:onTrolleyDetection:onRescueMode:onSensorsInitiated:onNewDeviceOrientation:onFloorChange:onNewDebugMessage:onNewDirectionBundle:onNewRealWorldOffsetUpdate:onNewStepEvent:onNewMlUpdate:onNewMlCalibration:)"))) __attribute__((objc_designated_initializer));
- (void)handleNeoSignalSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("handleNeoSignal(signal:)")));
- (void)onCurrentGoalUpdatedGoal:(id<VSPKIPathfinderGoal> _Nullable)goal __attribute__((swift_name("onCurrentGoalUpdated(goal:)")));
- (void)onDestroy __attribute__((swift_name("onDestroy()")));
- (void)onPathUpdatedPath:(id<VSPKIPathfinderPath>)path __attribute__((swift_name("onPathUpdated(path:)")));
- (void)onSortedGoalUpdatedGoals:(NSArray<id<VSPKIPathfinderGoal>> *)goals __attribute__((swift_name("onSortedGoalUpdated(goals:)")));
- (void)outputSignalSignal:(id<VSPKOutputSignal>)signal __attribute__((swift_name("outputSignal(signal:)")));
- (VSPKDouble * _Nullable)rayTraceWithDistancePos1:(VSPKPointF *)pos1 pos2:(VSPKPointF *)pos2 __attribute__((swift_name("rayTraceWithDistance(pos1:pos2:)")));
- (void)setVPSVps:(id<VSPKIQPSVPS>)vps __attribute__((swift_name("setVPS(vps:)")));
@property (readonly) NSString *id_ __attribute__((swift_name("id_")));
@property (readonly) VSPKIQPSParameterPackageEnum *parameterPackageEnum __attribute__((swift_name("parameterPackageEnum")));
@property id<VSPKIPathfinder> _Nullable pathfinder __attribute__((swift_name("pathfinder")));
@property (readonly) VSPKNavMeshScrubber * _Nullable scrubber __attribute__((swift_name("scrubber")));
@property (readonly) VSPKBaseSignalDispatcher *signalDispatcher __attribute__((swift_name("signalDispatcher")));
@property (readonly) id<VSPKIQPSVPS> _Nullable vps __attribute__((swift_name("vps")));
@end;

__attribute__((swift_name("BaseVPSHandlerDelegate")))
@protocol VSPKBaseVPSHandlerDelegate
@required
- (void)onFloorChangeFloorDifference:(int32_t)floorDifference timestamp:(int64_t)timestamp __attribute__((swift_name("onFloorChange(floorDifference:timestamp:)")));
- (void)onIllegalBehaviour __attribute__((swift_name("onIllegalBehaviour()")));
- (void)onNewDebugMessageMessage:(NSString *)message __attribute__((swift_name("onNewDebugMessage(message:)")));
- (void)onNewDeviceOrientationOrientation:(VSPKIQPSDeviceOrientation *)orientation __attribute__((swift_name("onNewDeviceOrientation(orientation:)")));
- (void)onNewDirectionBundleDirectionBundle:(VSPKDirectionBundle *)directionBundle __attribute__((swift_name("onNewDirectionBundle(directionBundle:)")));
- (void)onNewNavigationBundleNavigationBundle:(VSPKNavBundle *)navigationBundle __attribute__((swift_name("onNewNavigationBundle(navigationBundle:)")));
- (void)onNewRealWorldOffsetUpdateRealWorldOffsetUpdate:(VSPKRealWorldOffsetUpdate *)realWorldOffsetUpdate __attribute__((swift_name("onNewRealWorldOffsetUpdate(realWorldOffsetUpdate:)")));
- (void)onPositionEventPositionEvent:(VSPKPositionEvent *)positionEvent __attribute__((swift_name("onPositionEvent(positionEvent:)")));
- (void)onRescueModeCurrentTime:(int64_t)currentTime __attribute__((swift_name("onRescueMode(currentTime:)")));
- (void)onSensorsInitiated __attribute__((swift_name("onSensorsInitiated()")));
- (void)onTrolleyDetectionCurrentTime:(int64_t)currentTime __attribute__((swift_name("onTrolleyDetection(currentTime:)")));
- (void)whatToDoWithScrubbedListIfInWarehouseModeList:(NSMutableArray<VSPKPointF *> *)list timestamp:(int64_t)timestamp __attribute__((swift_name("whatToDoWithScrubbedListIfInWarehouseMode(list:timestamp:)")));
@end;

__attribute__((swift_name("VPSHandler")))
@interface VSPKVPSHandler : VSPKBase <VSPKLegacyInterfacePlus>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use BaseVPSHandler")));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)onPositionEventPositionEvent:(VSPKPositionEvent *)positionEvent __attribute__((swift_name("onPositionEvent(positionEvent:)")));
- (VSPKDouble * _Nullable)rayTraceWithDistancePos1:(VSPKPointF *)pos1 pos2:(VSPKPointF *)pos2 __attribute__((swift_name("rayTraceWithDistance(pos1:pos2:)")));
- (void)whatToDoWithScrubbedListIfInWarehouseModeList:(NSMutableArray<VSPKPointF *> *)list timestamp:(int64_t)timestamp __attribute__((swift_name("whatToDoWithScrubbedListIfInWarehouseMode(list:timestamp:)")));
@property (readonly) id<VSPKIQPSVPS> _Nullable _vps __attribute__((swift_name("_vps")));
@property (readonly) VSPKPositionEventHandler * _Nullable handler __attribute__((swift_name("handler")));
@property (readonly) VSPKIQPSParameterPackageEnum *parameterPackageEnum __attribute__((swift_name("parameterPackageEnum")));
@property (readonly) VSPKNavMeshScrubber * _Nullable scrubber __attribute__((swift_name("scrubber")));
@property (readonly) id<VSPKSignalDispatcher> signalDispatcher __attribute__((swift_name("signalDispatcher")));
@property (readonly) id<VSPKIQPSVPS> vps __attribute__((swift_name("vps")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VPSHandler.concreteSignalHandler")))
@interface VSPKVPSHandlerConcreteSignalHandler : VSPKSignalHandler
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (readonly) NSMutableArray<id<VSPKSignalListener>> *listeners __attribute__((swift_name("listeners")));
@end;

__attribute__((swift_name("IPathfinder")))
@protocol VSPKIPathfinder
@required
- (void)addGoalGoal:(id<VSPKIPathfinderGoal>)goal callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("addGoal(goal:callback:)")));
- (void)addGoalsGoals:(id)goals callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("addGoals(goals:callback:)")));
- (void)addListenerListener_:(id<VSPKIPathfinderListener>)listener __attribute__((swift_name("addListener(listener_:)")));
- (void)forceRefreshWithTSP:(BOOL)withTSP overridePosition:(VSPKPointF * _Nullable)overridePosition callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("forceRefresh(withTSP:overridePosition:callback:)")));
- (void)popGoal __attribute__((swift_name("popGoal()")));
- (void)removeGoalId:(NSString *)id callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("removeGoal(id:callback:)")));
- (void)removeGoalsIds:(id)ids callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("removeGoals(ids:callback:)")));
- (void)removeListenerListener_:(id<VSPKIPathfinderListener>)listener __attribute__((swift_name("removeListener(listener_:)")));
- (void)setGoalsGoals:(id)goals callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("setGoals(goals:callback:)")));
- (void)setUserPositionPosition:(VSPKPointF * _Nullable)position __attribute__((swift_name("setUserPosition(position:)")));
@property (readonly) id<VSPKIPathfinderGoal> _Nullable currentGoal __attribute__((swift_name("currentGoal")));
@property (readonly) BOOL hasGoal __attribute__((swift_name("hasGoal")));
@property (readonly) NSArray<id<VSPKIPathfinderGoal>> *sortedGoals __attribute__((swift_name("sortedGoals")));
@property (readonly) VSPKPointF *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) VSPKPointF *stopPosition __attribute__((swift_name("stopPosition")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BasePathfinder")))
@interface VSPKBasePathfinder : VSPKBase <VSPKIPathfinder>
- (instancetype)initWithHeightInPixels:(float)heightInPixels widthInPixels:(float)widthInPixels pixelsPerMeter:(float)pixelsPerMeter navGraph:(VSPKNavGraph *)navGraph pathRefreshDistance:(float)pathRefreshDistance startPosition:(VSPKPointF *)startPosition stopPosition:(VSPKPointF *)stopPosition __attribute__((swift_name("init(heightInPixels:widthInPixels:pixelsPerMeter:navGraph:pathRefreshDistance:startPosition:stopPosition:)"))) __attribute__((objc_designated_initializer));
- (void)addGoalGoal:(id<VSPKIPathfinderGoal>)goal callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("addGoal(goal:callback:)")));
- (void)addGoalsGoals:(id)goals callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("addGoals(goals:callback:)")));
- (void)addListenerListener_:(id<VSPKIPathfinderListener>)listener __attribute__((swift_name("addListener(listener_:)")));
- (void)forceRefreshWithTSP:(BOOL)withTSP overridePosition:(VSPKPointF * _Nullable)overridePosition callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("forceRefresh(withTSP:overridePosition:callback:)")));
- (void)popGoal __attribute__((swift_name("popGoal()")));
- (void)removeGoalId:(NSString *)id callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("removeGoal(id:callback:)")));
- (void)removeGoalsIds:(id)ids callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("removeGoals(ids:callback:)")));
- (void)removeListenerListener_:(id<VSPKIPathfinderListener>)listener __attribute__((swift_name("removeListener(listener_:)")));
- (void)setGoalsGoals:(id)goals callback:(void (^ _Nullable)(void))callback __attribute__((swift_name("setGoals(goals:callback:)")));
- (void)setUserPositionPosition:(VSPKPointF * _Nullable)position __attribute__((swift_name("setUserPosition(position:)")));
- (VSPKPointF *)flipY:(VSPKPointF *)receiver __attribute__((swift_name("flipY(_:)")));
- (VSPKPointF *)pixelsToMeters:(VSPKPointF *)receiver __attribute__((swift_name("pixelsToMeters(_:)")));
@property (readonly) id<VSPKIPathfinderGoal> _Nullable currentGoal __attribute__((swift_name("currentGoal")));
@property (readonly) BOOL hasGoal __attribute__((swift_name("hasGoal")));
@property (readonly) float heightInPixels __attribute__((swift_name("heightInPixels")));
@property NSArray<id<VSPKIPathfinderGoal>> *lastSortedGoals __attribute__((swift_name("lastSortedGoals")));
@property (readonly) float pathRefreshDistance __attribute__((swift_name("pathRefreshDistance")));
@property (readonly) float pixelsPerMeter __attribute__((swift_name("pixelsPerMeter")));
@property (readonly) NSArray<id<VSPKIPathfinderGoal>> *sortedGoals __attribute__((swift_name("sortedGoals")));
@property (readonly) VSPKPointF *startPosition __attribute__((swift_name("startPosition")));
@property (readonly) VSPKPointF *stopPosition __attribute__((swift_name("stopPosition")));
@property (readonly) float widthInPixels __attribute__((swift_name("widthInPixels")));
@end;

__attribute__((swift_name("IPathfinderGoal")))
@protocol VSPKIPathfinderGoal
@required
@property (readonly) id _Nullable data __attribute__((swift_name("data")));
@property (readonly) NSString *id_ __attribute__((swift_name("id_")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) VSPKIPathfinderGoalType *type __attribute__((swift_name("type")));
@end;

__attribute__((swift_name("BasePathfinderGoal")))
@interface VSPKBasePathfinderGoal<T> : VSPKBase <VSPKIPathfinderGoal>
- (instancetype)initWithId:(NSString *)id position:(VSPKPointF *)position data:(T _Nullable)data type:(VSPKIPathfinderGoalType *)type __attribute__((swift_name("init(id:position:data:type:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
@property (readonly) T _Nullable data __attribute__((swift_name("data")));
@property (readonly) NSString *id_ __attribute__((swift_name("id_")));
@property (readonly) VSPKPointF *position __attribute__((swift_name("position")));
@property (readonly) VSPKIPathfinderGoalType *type __attribute__((swift_name("type")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DjikstrasOptimized")))
@interface VSPKDjikstrasOptimized : VSPKBase
- (instancetype)initWithGraph:(VSPKNavGraph *)graph __attribute__((swift_name("init(graph:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKDjikstrasOptimizedCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<VSPKPointF *> * _Nullable)getPixelScalePathFrom:(VSPKPointF *)from to:(VSPKPointF *)to __attribute__((swift_name("getPixelScalePath(from:to:)")));
- (void)resetHistory __attribute__((swift_name("resetHistory()")));
@property VSPKDjikstrasOptimizedOldNodeGraph *currentGoalGraph __attribute__((swift_name("currentGoalGraph")));
@property BOOL oldGraphIsInitiated __attribute__((swift_name("oldGraphIsInitiated")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DjikstrasOptimized.Companion")))
@interface VSPKDjikstrasOptimizedCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKDjikstrasOptimizedCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DjikstrasOptimized.OldNodeGraph")))
@interface VSPKDjikstrasOptimizedOldNodeGraph : VSPKBase
- (instancetype)initWithGoal:(VSPKNavGraphVertex *)goal currentGoal:(NSString *)currentGoal __attribute__((swift_name("init(goal:currentGoal:)"))) __attribute__((objc_designated_initializer));
@property (readonly) VSPKMutableDictionary<NSString *, id> *cameFrom __attribute__((swift_name("cameFrom")));
@property (readonly) VSPKMutableDictionary<NSString *, VSPKInt *> *costSoFar __attribute__((swift_name("costSoFar")));
@property (readonly) VSPKPriorityQueueUsingSinglyLinkedList<VSPKNavGraphVertex *> *frontier __attribute__((swift_name("frontier")));
@property NSString *goalId __attribute__((swift_name("goalId")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IPathfinderGoalType")))
@interface VSPKIPathfinderGoalType : VSPKKotlinEnum<VSPKIPathfinderGoalType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKIPathfinderGoalType *end __attribute__((swift_name("end")));
@property (class, readonly) VSPKIPathfinderGoalType *start __attribute__((swift_name("start")));
@property (class, readonly) VSPKIPathfinderGoalType *target __attribute__((swift_name("target")));
+ (VSPKKotlinArray<VSPKIPathfinderGoalType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((swift_name("IPathfinderPath")))
@protocol VSPKIPathfinderPath
@required
@property (readonly) NSArray<NSArray<VSPKPointF *> *> *body __attribute__((swift_name("body")));
@property (readonly) NSArray<VSPKPointF *> *bodyMeterScale __attribute__((swift_name("bodyMeterScale")));
@property (readonly) NSArray<VSPKPointF *> *head __attribute__((swift_name("head")));
@property (readonly) NSArray<VSPKPointF *> *headMeterScale __attribute__((swift_name("headMeterScale")));
@property (readonly) NSArray<VSPKPointF *> *tail __attribute__((swift_name("tail")));
@property (readonly) NSArray<VSPKPointF *> *tailMeterScale __attribute__((swift_name("tailMeterScale")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NavGraph")))
@interface VSPKNavGraph : VSPKBase
- (instancetype)initWithSpacing:(int32_t)spacing numVertices:(int32_t)numVertices vertices:(NSDictionary<NSString *, VSPKNavGraphVertex *> *)vertices __attribute__((swift_name("init(spacing:numVertices:vertices:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKNavGraphCompanion *companion __attribute__((swift_name("companion")));
- (VSPKNavGraphVertex * _Nullable)closestVertexPoint:(VSPKPointF *)point __attribute__((swift_name("closestVertex(point:)")));
- (VSPKInt * _Nullable)getCostFromVertexId:(NSString *)fromVertexId toVertexId:(NSString *)toVertexId __attribute__((swift_name("getCost(fromVertexId:toVertexId:)")));
- (VSPKNavGraphVertex * _Nullable)getVertexId:(NSString *)id __attribute__((swift_name("getVertex(id:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t numVertices __attribute__((swift_name("numVertices")));
@property (readonly) int32_t spacing __attribute__((swift_name("spacing")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NavGraph.Companion")))
@interface VSPKNavGraphCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKNavGraphCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NavGraph.Vertex")))
@interface VSPKNavGraphVertex : VSPKBase
- (instancetype)initWithId:(NSString *)id x:(float)x y:(float)y cost:(int32_t)cost neighborCosts:(NSDictionary<NSString *, VSPKInt *> *)neighborCosts __attribute__((swift_name("init(id:x:y:cost:neighborCosts:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKNavGraphVertexCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (float)component2 __attribute__((swift_name("component2()")));
- (float)component3 __attribute__((swift_name("component3()")));
- (int32_t)component4 __attribute__((swift_name("component4()")));
- (NSDictionary<NSString *, VSPKInt *> *)component5 __attribute__((swift_name("component5()")));
- (VSPKNavGraphVertex *)doCopyId:(NSString *)id x:(float)x y:(float)y cost:(int32_t)cost neighborCosts:(NSDictionary<NSString *, VSPKInt *> *)neighborCosts __attribute__((swift_name("doCopy(id:x:y:cost:neighborCosts:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (VSPKInt * _Nullable)getCostToVertex:(VSPKNavGraphVertex *)vertex __attribute__((swift_name("getCostTo(vertex:)")));
- (VSPKInt * _Nullable)getCostToIdId:(NSString *)id __attribute__((swift_name("getCostToId(id:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (VSPKPointF *)toPointF __attribute__((swift_name("toPointF()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t cost __attribute__((swift_name("cost")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, VSPKInt *> *neighborCosts __attribute__((swift_name("neighborCosts")));
@property (readonly) float x __attribute__((swift_name("x")));
@property (readonly) float y __attribute__((swift_name("y")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NavGraph.VertexCompanion")))
@interface VSPKNavGraphVertexCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKNavGraphVertexCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PathProcessor")))
@interface VSPKPathProcessor : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)pathProcessor __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPathProcessor *shared __attribute__((swift_name("shared")));
- (NSArray<VSPKPointF *> *)processPath:(NSArray<VSPKPointF *> * _Nullable)path goal:(id<VSPKIPathfinderGoal>)goal __attribute__((swift_name("process(path:goal:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PathProcessor.BSpline")))
@interface VSPKPathProcessorBSpline : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)bSpline __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPathProcessorBSpline *shared __attribute__((swift_name("shared")));
- (double)BX:(double)x k:(int32_t)k i:(int32_t)i t:(VSPKKotlinDoubleArray *)t __attribute__((swift_name("B(x:k:i:t:)")));
- (VSPKKotlinDoubleArray *)bsplineX:(double)x t:(VSPKKotlinDoubleArray *)t c:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)c k:(int32_t)k __attribute__((swift_name("bspline(x:t:c:k:)")));
- (VSPKKotlinDoubleArray *)linspaceStart:(double)start end:(double)end points:(int32_t)points __attribute__((swift_name("linspace(start:end:points:)")));
- (VSPKKotlinArray<VSPKKotlinDoubleArray *> *)paul_splineFirst:(VSPKKotlinDoubleArray *)first second:(VSPKKotlinDoubleArray *)second d_first:(VSPKKotlinDoubleArray *)d_first d_second:(VSPKKotlinDoubleArray *)d_second __attribute__((swift_name("paul_spline(first:second:d_first:d_second:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PriorityQueueUsingSinglyLinkedList")))
@interface VSPKPriorityQueueUsingSinglyLinkedList<T> : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)isNotEmpty __attribute__((swift_name("isNotEmpty()")));
- (T _Nullable)peek __attribute__((swift_name("peek()")));
- (T _Nullable)pop __attribute__((swift_name("pop()")));
- (void)pushValue:(T _Nullable)value cost:(int32_t)cost __attribute__((swift_name("push(value:cost:)")));
@property int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TSPThreeOptAlgorithm")))
@interface VSPKTSPThreeOptAlgorithm : VSPKBase
- (instancetype)initWithSize:(int32_t)size dist:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)dist nodes:(VSPKKotlinArray<VSPKKotlinPair<VSPKDouble *, VSPKDouble *> *> *)nodes __attribute__((swift_name("init(size:dist:nodes:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKTSPThreeOptAlgorithmCompanion *companion __attribute__((swift_name("companion")));
- (VSPKKotlinIntArray *)solve __attribute__((swift_name("solve()")));
- (void)shuffle:(VSPKKotlinIntArray *)receiver random:(VSPKKotlinRandom *)random __attribute__((swift_name("shuffle(_:random:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TSPThreeOptAlgorithm.Companion")))
@interface VSPKTSPThreeOptAlgorithmCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKTSPThreeOptAlgorithmCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((swift_name("StepEventBasedML")))
@protocol VSPKStepEventBasedML
@required
- (void)configureDelegate:(id<VSPKStepEventBasedMLStepEventBasedMLDelegate>)delegate isPointOnNavMesh:(VSPKBoolean *(^)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("configure(delegate:isPointOnNavMesh:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)onObservationX:(float)x y:(float)y std:(VSPKFloat * _Nullable)std offset:(VSPKFloat * _Nullable)offset observationType:(VSPKStepEventBasedMLObservationType *)observationType __attribute__((swift_name("onObservation(x:y:std:offset:observationType:)")));
- (void)onStepEventSuccess:(BOOL)success magnitude:(double)magnitude direction:(double)direction duration:(int64_t)duration timestamp:(int64_t)timestamp deviceOrientation:(VSPKIQPSDeviceOrientation * _Nullable)deviceOrientation parameters:(VSPKStepEventBasedMLMLParameters * _Nullable)parameters __attribute__((swift_name("onStepEvent(success:magnitude:direction:duration:timestamp:deviceOrientation:parameters:)")));
- (void)onStopNavigation __attribute__((swift_name("onStopNavigation()")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)start __attribute__((swift_name("start()")));
@end;

__attribute__((swift_name("MLParamSetter")))
@protocol VSPKMLParamSetter <VSPKStepEventBasedML>
@required
- (VSPKUserAdjustments *)getUserAdjustments __attribute__((swift_name("getUserAdjustments()")));
@property NSMutableArray<VSPKPersonalMLData *> *data __attribute__((swift_name("data")));
@property VSPKIQPSPersonalMLAlgorithm *tag __attribute__((swift_name("tag")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PersonalMLData")))
@interface VSPKPersonalMLData : VSPKBase
- (instancetype)initWithVersion:(NSString *)version mlAlgoTag:(VSPKIQPSPersonalMLAlgorithm *)mlAlgoTag deviceOrientation:(VSPKIQPSDeviceOrientation *)deviceOrientation speedModifier:(double)speedModifier angleModifier:(double)angleModifier driftModifier:(double)driftModifier properties:(NSDictionary<NSString *, VSPKDouble *> *)properties __attribute__((swift_name("init(version:mlAlgoTag:deviceOrientation:speedModifier:angleModifier:driftModifier:properties:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKPersonalMLDataCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()")));
- (VSPKIQPSPersonalMLAlgorithm *)component2 __attribute__((swift_name("component2()")));
- (VSPKIQPSDeviceOrientation *)component3 __attribute__((swift_name("component3()")));
- (double)component4 __attribute__((swift_name("component4()")));
- (double)component5 __attribute__((swift_name("component5()")));
- (double)component6 __attribute__((swift_name("component6()")));
- (NSDictionary<NSString *, VSPKDouble *> *)component7 __attribute__((swift_name("component7()")));
- (VSPKPersonalMLData *)doCopyVersion:(NSString *)version mlAlgoTag:(VSPKIQPSPersonalMLAlgorithm *)mlAlgoTag deviceOrientation:(VSPKIQPSDeviceOrientation *)deviceOrientation speedModifier:(double)speedModifier angleModifier:(double)angleModifier driftModifier:(double)driftModifier properties:(NSDictionary<NSString *, VSPKDouble *> *)properties __attribute__((swift_name("doCopy(version:mlAlgoTag:deviceOrientation:speedModifier:angleModifier:driftModifier:properties:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double angleModifier __attribute__((swift_name("angleModifier")));
@property (readonly) VSPKIQPSDeviceOrientation *deviceOrientation __attribute__((swift_name("deviceOrientation")));
@property (readonly) double driftModifier __attribute__((swift_name("driftModifier")));
@property (readonly) VSPKIQPSPersonalMLAlgorithm *mlAlgoTag __attribute__((swift_name("mlAlgoTag")));
@property (readonly) NSDictionary<NSString *, VSPKDouble *> *properties __attribute__((swift_name("properties")));
@property (readonly) double speedModifier __attribute__((swift_name("speedModifier")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PersonalMLData.Companion")))
@interface VSPKPersonalMLDataCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKPersonalMLDataCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepBasedMLHandler")))
@interface VSPKStepBasedMLHandler : VSPKBase <VSPKStepEventBasedML, VSPKStepEventBasedMLStepEventBasedMLDelegate>
- (instancetype)initWithMlAlgorithms:(NSMutableArray<VSPKIQPSPersonalMLAlgorithm *> * _Nullable)mlAlgorithms mlParameterSetter:(VSPKKotlinPair<VSPKIQPSPersonalMLAlgorithm *, NSMutableArray<VSPKPersonalMLData *> *> * _Nullable)mlParameterSetter __attribute__((swift_name("init(mlAlgorithms:mlParameterSetter:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMlAlgos:(NSArray<id<VSPKStepEventBasedML>> *)mlAlgos speedInterpreter:(id<VSPKMLParamSetter> _Nullable)speedInterpreter __attribute__((swift_name("init(mlAlgos:speedInterpreter:)"))) __attribute__((objc_designated_initializer));
- (void)configureDelegate:(id<VSPKStepEventBasedMLStepEventBasedMLDelegate>)delegate isPointOnNavMesh:(VSPKBoolean *(^)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("configure(delegate:isPointOnNavMesh:)")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)onHeadingCorrectionSuggestionOffset:(VSPKDouble * _Nullable)offset deviceOrientation:(VSPKIQPSDeviceOrientation *)deviceOrientation __attribute__((swift_name("onHeadingCorrectionSuggestion(offset:deviceOrientation:)")));
- (void)onObservationX:(float)x y:(float)y std:(VSPKFloat * _Nullable)std offset:(VSPKFloat * _Nullable)offset observationType:(VSPKStepEventBasedMLObservationType *)observationType __attribute__((swift_name("onObservation(x:y:std:offset:observationType:)")));
- (void)onSpeedCoefficientSuggestionAlpha:(VSPKFloat * _Nullable)alpha beta:(VSPKFloat * _Nullable)beta __attribute__((swift_name("onSpeedCoefficientSuggestion(alpha:beta:)")));
- (void)onSpeedScalingSuggestionScaleFactor:(VSPKFloat * _Nullable)scaleFactor __attribute__((swift_name("onSpeedScalingSuggestion(scaleFactor:)")));
- (void)onStepEventSuccess:(BOOL)success magnitude:(double)magnitude direction:(double)direction duration:(int64_t)duration timestamp:(int64_t)timestamp deviceOrientation:(VSPKIQPSDeviceOrientation * _Nullable)deviceOrientation parameters:(VSPKStepEventBasedMLMLParameters * _Nullable)parameters __attribute__((swift_name("onStepEvent(success:magnitude:direction:duration:timestamp:deviceOrientation:parameters:)")));
- (void)onStopNavigation __attribute__((swift_name("onStopNavigation()")));
- (void)reiterateFromGivenTimestampTimestamp:(int64_t)timestamp __attribute__((swift_name("reiterateFromGivenTimestamp(timestamp:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)sendDriftAdditionFloat:(float)float_ __attribute__((swift_name("sendDriftAddition(float:)")));
- (void)sendMLDataData:(VSPKPersonalMLData *)data __attribute__((swift_name("sendMLData(data:)")));
- (void)sendMLJobJob:(id<VSPKMLJob>)job __attribute__((swift_name("sendMLJob(job:)")));
- (void)sendRotationAdditionFloat:(float)float_ override:(BOOL)override __attribute__((swift_name("sendRotationAddition(float:override:)")));
- (void)sendSpeedFactorFloat:(float)float_ override:(BOOL)override __attribute__((swift_name("sendSpeedFactor(float:override:)")));
- (void)start __attribute__((swift_name("start()")));
@property id<VSPKMLParamSetter> _Nullable speedInterpreter __attribute__((swift_name("speedInterpreter")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventBasedMLMLParameters")))
@interface VSPKStepEventBasedMLMLParameters : VSPKBase
- (instancetype)initWithSpeed:(double)speed rotation:(double)rotation drift:(double)drift __attribute__((swift_name("init(speed:rotation:drift:)"))) __attribute__((objc_designated_initializer));
- (double)component1 __attribute__((swift_name("component1()")));
- (double)component2 __attribute__((swift_name("component2()")));
- (double)component3 __attribute__((swift_name("component3()")));
- (VSPKStepEventBasedMLMLParameters *)doCopySpeed:(double)speed rotation:(double)rotation drift:(double)drift __attribute__((swift_name("doCopy(speed:rotation:drift:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) double drift __attribute__((swift_name("drift")));
@property (readonly) double rotation __attribute__((swift_name("rotation")));
@property (readonly) double speed __attribute__((swift_name("speed")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventBasedMLObservationType")))
@interface VSPKStepEventBasedMLObservationType : VSPKKotlinEnum<VSPKStepEventBasedMLObservationType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) VSPKStepEventBasedMLObservationType *sync __attribute__((swift_name("sync")));
@property (class, readonly) VSPKStepEventBasedMLObservationType *radiusSync __attribute__((swift_name("radiusSync")));
@property (class, readonly) VSPKStepEventBasedMLObservationType *start __attribute__((swift_name("start")));
@property (class, readonly) VSPKStepEventBasedMLObservationType *stop __attribute__((swift_name("stop")));
+ (VSPKKotlinArray<VSPKStepEventBasedMLObservationType *> *)values __attribute__((swift_name("values()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserAdjustments")))
@interface VSPKUserAdjustments : VSPKBase
- (instancetype)initWithSpeedModifier:(NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *)speedModifier directionModifier:(NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *)directionModifier __attribute__((swift_name("init(speedModifier:directionModifier:)"))) __attribute__((objc_designated_initializer));
- (NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *)component1 __attribute__((swift_name("component1()")));
- (NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *)component2 __attribute__((swift_name("component2()")));
- (VSPKUserAdjustments *)doCopySpeedModifier:(NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *)speedModifier directionModifier:(NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *)directionModifier __attribute__((swift_name("doCopy(speedModifier:directionModifier:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *directionModifier __attribute__((swift_name("directionModifier")));
@property NSDictionary<VSPKIQPSDeviceOrientation *, VSPKFloat *> *speedModifier __attribute__((swift_name("speedModifier")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReiterationData")))
@interface VSPKReiterationData : VSPKBase
- (instancetype)initWithReiterationStartPosition:(VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable)reiterationStartPosition reiterationStepEvents:(NSArray<VSPKStepData *> *)reiterationStepEvents __attribute__((swift_name("init(reiterationStartPosition:reiterationStepEvents:)"))) __attribute__((objc_designated_initializer));
- (VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable)component1 __attribute__((swift_name("component1()")));
- (NSArray<VSPKStepData *> *)component2 __attribute__((swift_name("component2()")));
- (VSPKReiterationData *)doCopyReiterationStartPosition:(VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable)reiterationStartPosition reiterationStepEvents:(NSArray<VSPKStepData *> *)reiterationStepEvents __attribute__((swift_name("doCopy(reiterationStartPosition:reiterationStepEvents:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable reiterationStartPosition __attribute__((swift_name("reiterationStartPosition")));
@property (readonly) NSArray<VSPKStepData *> *reiterationStepEvents __attribute__((swift_name("reiterationStepEvents")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SystemHistory")))
@interface VSPKSystemHistory : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKReiterationData *)getReiterationDataTimestamp:(int64_t)timestamp __attribute__((swift_name("getReiterationData(timestamp:)")));
- (void)storePositionX:(float)x y:(float)y timestamp:(int64_t)timestamp __attribute__((swift_name("storePosition(x:y:timestamp:)")));
- (void)storeStepDataStep:(VSPKStepData *)step __attribute__((swift_name("storeStepData(step:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventAlgorithmAlreadyStartedException")))
@interface VSPKStepEventAlgorithmAlreadyStartedException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StepEventAlgorithmNotInitializedException")))
@interface VSPKStepEventAlgorithmNotInitializedException : VSPKKotlinThrowable
- (instancetype)initWithMessage:(NSString *)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(VSPKKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end;

__attribute__((swift_name("CorridorFinder")))
@protocol VSPKCorridorFinder
@required
- (VSPKDouble * _Nullable)findClearPathX:(float)x y:(float)y pointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))pointOnNavMesh __attribute__((swift_name("findClearPath(x:y:pointOnNavMesh:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("BasicYAxisGetter")))
@interface VSPKBasicYAxisGetter : VSPKBase <VSPKCorridorFinder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKDouble * _Nullable)findClearPathX:(float)x y:(float)y pointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))pointOnNavMesh __attribute__((swift_name("findClearPath(x:y:pointOnNavMesh:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RayTracingCorridorFinder")))
@interface VSPKRayTracingCorridorFinder : VSPKBase <VSPKCorridorFinder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKDouble * _Nullable)findClearPathX:(float)x y:(float)y pointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))pointOnNavMesh __attribute__((swift_name("findClearPath(x:y:pointOnNavMesh:)")));
@end;

__attribute__((swift_name("MLJob")))
@protocol VSPKMLJob
@required
- (VSPKPersonalMLData *)calculateIsPointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("calculate(isPointOnNavMesh:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJob")))
@interface VSPKCoefficientOptimizerJob : VSPKBase <VSPKMLJob>
- (instancetype)initWithStartAngle:(double)startAngle startPosition:(VSPKKotlinPair<VSPKFloat *, VSPKFloat *> *)startPosition rollingDirections:(NSMutableArray<VSPKDouble *> *)rollingDirections rollingMagnitudes:(NSMutableArray<VSPKDouble *> *)rollingMagnitudes rollingDeviceOrientations:(NSMutableArray<id> * _Nullable)rollingDeviceOrientations syncPoints:(NSMutableArray<VSPKKotlinDoubleArray *> * _Nullable)syncPoints __attribute__((swift_name("init(startAngle:startPosition:rollingDirections:rollingMagnitudes:rollingDeviceOrientations:syncPoints:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKCoefficientOptimizerJobCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPersonalMLData *)calculateIsPointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("calculate(isPointOnNavMesh:)")));
@property VSPKIQPSPersonalMLAlgorithm *tag __attribute__((swift_name("tag")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJob.Companion")))
@interface VSPKCoefficientOptimizerJobCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKCoefficientOptimizerJobCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJobAxlExperimental")))
@interface VSPKCoefficientOptimizerJobAxlExperimental : VSPKBase <VSPKMLJob>
- (instancetype)initWithStartAngle:(VSPKDouble * _Nullable)startAngle startPosition:(VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable)startPosition rollingStepList:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)rollingStepList rollingDirections:(NSMutableArray<VSPKDouble *> * _Nullable)rollingDirections rollingMagnitudes:(NSMutableArray<VSPKDouble *> * _Nullable)rollingMagnitudes rollingTimeStamps:(NSMutableArray<VSPKLong *> * _Nullable)rollingTimeStamps rollingDeviceOrientations:(NSMutableArray<id> * _Nullable)rollingDeviceOrientations syncPoints:(NSMutableArray<VSPKKotlinDoubleArray *> * _Nullable)syncPoints __attribute__((swift_name("init(startAngle:startPosition:rollingStepList:rollingDirections:rollingMagnitudes:rollingTimeStamps:rollingDeviceOrientations:syncPoints:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKCoefficientOptimizerJobAxlExperimentalCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPersonalMLData *)calculateIsPointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("calculate(isPointOnNavMesh:)")));
@property VSPKIQPSPersonalMLAlgorithm *tag __attribute__((swift_name("tag")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJobAxlExperimental.Companion")))
@interface VSPKCoefficientOptimizerJobAxlExperimentalCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKCoefficientOptimizerJobAxlExperimentalCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJobLegacy")))
@interface VSPKCoefficientOptimizerJobLegacy : VSPKBase <VSPKMLJob>
- (instancetype)initWithStartAngle:(VSPKDouble * _Nullable)startAngle startPosition:(VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable)startPosition rollingStepList:(VSPKKotlinArray<VSPKKotlinDoubleArray *> *)rollingStepList rollingDirections:(NSMutableArray<VSPKDouble *> * _Nullable)rollingDirections rollingMagnitudes:(NSMutableArray<VSPKDouble *> * _Nullable)rollingMagnitudes rollingTimeStamps:(NSMutableArray<VSPKLong *> * _Nullable)rollingTimeStamps rollingDeviceOrientations:(NSMutableArray<id> * _Nullable)rollingDeviceOrientations syncPoints:(NSMutableArray<VSPKKotlinDoubleArray *> * _Nullable)syncPoints __attribute__((swift_name("init(startAngle:startPosition:rollingStepList:rollingDirections:rollingMagnitudes:rollingTimeStamps:rollingDeviceOrientations:syncPoints:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKCoefficientOptimizerJobLegacyCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPersonalMLData *)calculateIsPointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("calculate(isPointOnNavMesh:)")));
@property NSMutableArray<id> * _Nullable rollingDeviceOrientations __attribute__((swift_name("rollingDeviceOrientations")));
@property NSMutableArray<VSPKDouble *> * _Nullable rollingDirections __attribute__((swift_name("rollingDirections")));
@property NSMutableArray<VSPKDouble *> * _Nullable rollingMagnitudes __attribute__((swift_name("rollingMagnitudes")));
@property VSPKKotlinArray<VSPKKotlinDoubleArray *> *rollingStepList __attribute__((swift_name("rollingStepList")));
@property NSMutableArray<VSPKLong *> * _Nullable rollingTimeStamps __attribute__((swift_name("rollingTimeStamps")));
@property VSPKDouble * _Nullable startAngle __attribute__((swift_name("startAngle")));
@property VSPKKotlinPair<VSPKFloat *, VSPKFloat *> * _Nullable startPosition __attribute__((swift_name("startPosition")));
@property NSMutableArray<VSPKKotlinDoubleArray *> * _Nullable syncPoints __attribute__((swift_name("syncPoints")));
@property VSPKIQPSPersonalMLAlgorithm *tag __attribute__((swift_name("tag")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJobLegacy.Companion")))
@interface VSPKCoefficientOptimizerJobLegacyCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKCoefficientOptimizerJobLegacyCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJobPaulExperimental")))
@interface VSPKCoefficientOptimizerJobPaulExperimental : VSPKBase <VSPKMLJob>
- (instancetype)initWithStartAngle:(double)startAngle startPosition:(VSPKKotlinPair<VSPKFloat *, VSPKFloat *> *)startPosition rollingDirections:(NSMutableArray<VSPKDouble *> *)rollingDirections rollingMagnitudes:(NSMutableArray<VSPKDouble *> *)rollingMagnitudes rollingDeviceOrientations:(NSMutableArray<id> * _Nullable)rollingDeviceOrientations syncPoints:(NSMutableArray<VSPKKotlinDoubleArray *> * _Nullable)syncPoints __attribute__((swift_name("init(startAngle:startPosition:rollingDirections:rollingMagnitudes:rollingDeviceOrientations:syncPoints:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) VSPKCoefficientOptimizerJobPaulExperimentalCompanion *companion __attribute__((swift_name("companion")));
- (VSPKPersonalMLData *)calculateIsPointOnNavMesh:(VSPKBoolean *(^ _Nullable)(VSPKFloat *, VSPKFloat *))isPointOnNavMesh __attribute__((swift_name("calculate(isPointOnNavMesh:)")));
@property VSPKIQPSPersonalMLAlgorithm *tag __attribute__((swift_name("tag")));
@property (readonly) NSString *version __attribute__((swift_name("version")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoefficientOptimizerJobPaulExperimental.Companion")))
@interface VSPKCoefficientOptimizerJobPaulExperimentalCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKCoefficientOptimizerJobPaulExperimentalCompanion *shared __attribute__((swift_name("shared")));
- (id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeightCalculatorNNParameters")))
@interface VSPKWeightCalculatorNNParameters : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)weightCalculatorNNParameters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKWeightCalculatorNNParameters *shared __attribute__((swift_name("shared")));
@property (readonly) NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *coeff_22_10_06_weight_calculator_v2 __attribute__((swift_name("coeff_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *intercepts_22_10_06_weight_calculator_v2 __attribute__((swift_name("intercepts_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_0_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_coeff_0_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_1_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_coeff_1_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_0_coeff_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_coeff_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_2_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_coeff_2_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_3_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_coeff_3_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_coeff_4_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_coeff_4_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_0_intercepts_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_0_intercepts_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_0_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_0_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_10_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_10_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_11_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_11_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_1_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_1_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<NSMutableArray<VSPKFloat *> *> *layer_1_coeff_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_2_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_2_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_3_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_3_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_4_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_4_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_5_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_5_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_6_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_6_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_7_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_7_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_8_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_8_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_coeff_9_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_coeff_9_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *layer_1_intercepts_22_10_06_weight_calculator_v2 __attribute__((swift_name("layer_1_intercepts_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *means_22_10_06_weight_calculator_v2 __attribute__((swift_name("means_22_10_06_weight_calculator_v2")));
@property (readonly) NSMutableArray<VSPKFloat *> *scales_22_10_06_weight_calculator_v2 __attribute__((swift_name("scales_22_10_06_weight_calculator_v2")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoScanSpeedCalculator")))
@interface VSPKNoScanSpeedCalculator : VSPKBase
- (instancetype)initWithDataList:(NSMutableArray<VSPKPersonalMLData *> *)dataList __attribute__((swift_name("init(dataList:)"))) __attribute__((objc_designated_initializer));
@end;

__attribute__((swift_name("StepEventSolver")))
@interface VSPKStepEventSolver : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (VSPKKotlinPair<VSPKFloat *, VSPKFloat *> *)solveX:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)X y:(NSMutableArray<VSPKFloat *> *)y __attribute__((swift_name("solve(X:y:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinFloatArray")))
@interface VSPKKotlinFloatArray : VSPKBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(VSPKFloat *(^)(VSPKInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (float)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (VSPKKotlinFloatIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(float)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

@interface VSPKKotlinFloatArray (Extensions)
- (VSPKKotlinFloatArray *)divNorm:(float)norm __attribute__((swift_name("div(norm:)")));
- (float)dotV:(VSPKKotlinFloatArray *)v __attribute__((swift_name("dot(v:)")));
- (VSPKKotlinFloatArray *)gsV:(VSPKKotlinFloatArray *)v __attribute__((swift_name("gs(v:)")));
- (VSPKKotlinFloatArray *)minusV2:(VSPKKotlinFloatArray *)v2 __attribute__((swift_name("minus(v2:)")));
- (float)norm __attribute__((swift_name("norm()")));
- (VSPKKotlinFloatArray *)timesC:(float)c __attribute__((swift_name("times(c:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinDoubleArray")))
@interface VSPKKotlinDoubleArray : VSPKBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(VSPKDouble *(^)(VSPKInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (double)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (VSPKKotlinDoubleIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(double)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

@interface VSPKKotlinDoubleArray (Extensions)
- (double)dotV:(VSPKKotlinDoubleArray *)v __attribute__((swift_name("dot(v:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("VectorUtilsKt")))
@interface VSPKVectorUtilsKt : VSPKBase
+ (float)arrayListDotV1:(id)v1 v2:(id)v2 __attribute__((swift_name("arrayListDot(v1:v2:)")));
+ (float)getRotatedAxisAngleOnPlaneRotationVector:(VSPKKotlinFloatArray *)rotationVector axis:(VSPKKotlinFloatArray *)axis __attribute__((swift_name("getRotatedAxisAngleOnPlane(rotationVector:axis:)")));
+ (NSArray<VSPKFloat *> *)linearRegression2DVector1:(id)vector1 vector2:(id)vector2 y:(id)y __attribute__((swift_name("linearRegression2D(vector1:vector2:y:)")));
+ (void)linearSolverA:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)A b:(NSMutableArray<VSPKFloat *> *)b dim:(int32_t)dim __attribute__((swift_name("linearSolver(A:b:dim:)")));
+ (NSMutableArray<VSPKFloat *> *)matrixMultiplicationMatrix:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)matrix vector:(NSMutableArray<VSPKFloat *> *)vector __attribute__((swift_name("matrixMultiplication(matrix:vector:)")));
+ (NSMutableArray<VSPKFloat *> *)matrixMultiplicationJohanMatrix:(NSMutableArray<NSMutableArray<VSPKFloat *> *> *)matrix vector:(NSMutableArray<VSPKFloat *> *)vector __attribute__((swift_name("matrixMultiplicationJohan(matrix:vector:)")));
+ (id)projectOnMatrix:(VSPKKotlinArray<VSPKKotlinFloatArray *> *)matrix direction:(VSPKKotlinFloatArray *)direction __attribute__((swift_name("projectOn(matrix:direction:)")));
+ (NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *)transposeCoefficientsC:(NSMutableArray<NSMutableArray<NSMutableArray<VSPKFloat *> *> *> *)c __attribute__((swift_name("transposeCoefficients(c:)")));
+ (float)max:(NSMutableArray<VSPKFloat *> *)receiver __attribute__((swift_name("max(_:)")));
+ (float)min:(NSMutableArray<VSPKFloat *> *)receiver __attribute__((swift_name("min(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AxisUtilKt")))
@interface VSPKAxisUtilKt : VSPKBase
+ (VSPKKotlinFloatArray *)getAxisType:(VSPKIQPSDeviceOrientation *)type swingAxis:(VSPKKotlinFloatArray *)swingAxis __attribute__((swift_name("getAxis(type:swingAxis:)")));
+ (VSPKKotlinFloatArray *)rotateAxisAxis:(VSPKKotlinFloatArray *)axis offset:(double)offset deviceOrientation:(VSPKIQPSDeviceOrientation *)deviceOrientation parameterPackageEnum:(VSPKIQPSParameterPackageEnum *)parameterPackageEnum __attribute__((swift_name("rotateAxis(axis:offset:deviceOrientation:parameterPackageEnum:)")));
+ (void)setArmRotationMatrixAngle:(double)angle __attribute__((swift_name("setArmRotationMatrix(angle:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UtilsKt")))
@interface VSPKUtilsKt : VSPKBase
+ (int64_t)getSystemTimeInMillis __attribute__((swift_name("getSystemTimeInMillis()")));
+ (int64_t)getSystemTimeInNanos __attribute__((swift_name("getSystemTimeInNanos()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ModelExtensionsKt")))
@interface VSPKModelExtensionsKt : VSPKBase
+ (VSPKVector *)sum:(id)receiver __attribute__((swift_name("sum(_:)")));
+ (double)totalMagnitude:(id)receiver __attribute__((swift_name("totalMagnitude(_:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PathfinderUtilsKt")))
@interface VSPKPathfinderUtilsKt : VSPKBase
+ (VSPKPointF * _Nullable)getMinOrNull:(NSArray<VSPKPointF *> *)receiver selector:(VSPKDouble *(^)(VSPKPointF *))selector __attribute__((swift_name("getMinOrNull(_:selector:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinArray")))
@interface VSPKKotlinArray<T> : VSPKBase
+ (instancetype)arrayWithSize:(int32_t)size init:(T _Nullable (^)(VSPKInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id<VSPKKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(T _Nullable)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinEnumCompanion")))
@interface VSPKKotlinEnumCompanion : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKKotlinEnumCompanion *shared __attribute__((swift_name("shared")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUnit")))
@interface VSPKKotlinUnit : VSPKBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKKotlinUnit *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinPair")))
@interface VSPKKotlinPair<__covariant A, __covariant B> : VSPKBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("init(first:second:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()")));
- (B _Nullable)component2 __attribute__((swift_name("component2()")));
- (VSPKKotlinPair<A, B> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("doCopy(first:second:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreSerializationStrategy")))
@protocol VSPKKotlinx_serialization_coreSerializationStrategy
@required
- (void)serializeEncoder:(id<VSPKKotlinx_serialization_coreEncoder>)encoder value:(id _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<VSPKKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreDeserializationStrategy")))
@protocol VSPKKotlinx_serialization_coreDeserializationStrategy
@required
- (id _Nullable)deserializeDecoder:(id<VSPKKotlinx_serialization_coreDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
@property (readonly) id<VSPKKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreKSerializer")))
@protocol VSPKKotlinx_serialization_coreKSerializer <VSPKKotlinx_serialization_coreSerializationStrategy, VSPKKotlinx_serialization_coreDeserializationStrategy>
@required
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinIntArray")))
@interface VSPKKotlinIntArray : VSPKBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(VSPKInt *(^)(VSPKInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int32_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (VSPKKotlinIntIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int32_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("KotlinIterator")))
@protocol VSPKKotlinIterator
@required
- (BOOL)hasNext __attribute__((swift_name("hasNext()")));
- (id _Nullable)next __attribute__((swift_name("next()")));
@end;

__attribute__((swift_name("KotlinMutableIterator")))
@protocol VSPKKotlinMutableIterator <VSPKKotlinIterator>
@required
- (void)remove __attribute__((swift_name("remove()")));
@end;

__attribute__((swift_name("KotlinRandom")))
@interface VSPKKotlinRandom : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) VSPKKotlinRandomDefault *companion __attribute__((swift_name("companion")));
- (int32_t)nextBitsBitCount:(int32_t)bitCount __attribute__((swift_name("nextBits(bitCount:)")));
- (BOOL)nextBoolean __attribute__((swift_name("nextBoolean()")));
- (VSPKKotlinByteArray *)nextBytesArray:(VSPKKotlinByteArray *)array __attribute__((swift_name("nextBytes(array:)")));
- (VSPKKotlinByteArray *)nextBytesArray:(VSPKKotlinByteArray *)array fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("nextBytes(array:fromIndex:toIndex:)")));
- (VSPKKotlinByteArray *)nextBytesSize:(int32_t)size __attribute__((swift_name("nextBytes(size:)")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
- (double)nextDoubleUntil:(double)until __attribute__((swift_name("nextDouble(until:)")));
- (double)nextDoubleFrom:(double)from until:(double)until __attribute__((swift_name("nextDouble(from:until:)")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
- (int32_t)nextIntUntil:(int32_t)until __attribute__((swift_name("nextInt(until:)")));
- (int32_t)nextIntFrom:(int32_t)from until:(int32_t)until __attribute__((swift_name("nextInt(from:until:)")));
- (int64_t)nextLong __attribute__((swift_name("nextLong()")));
- (int64_t)nextLongUntil:(int64_t)until __attribute__((swift_name("nextLong(until:)")));
- (int64_t)nextLongFrom:(int64_t)from until:(int64_t)until __attribute__((swift_name("nextLong(from:until:)")));
@end;

__attribute__((swift_name("KotlinFloatIterator")))
@interface VSPKKotlinFloatIterator : VSPKBase <VSPKKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKFloat *)next __attribute__((swift_name("next()")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
@end;

__attribute__((swift_name("KotlinDoubleIterator")))
@interface VSPKKotlinDoubleIterator : VSPKBase <VSPKKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKDouble *)next __attribute__((swift_name("next()")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreEncoder")))
@protocol VSPKKotlinx_serialization_coreEncoder
@required
- (id<VSPKKotlinx_serialization_coreCompositeEncoder>)beginCollectionDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize __attribute__((swift_name("beginCollection(descriptor:collectionSize:)")));
- (id<VSPKKotlinx_serialization_coreCompositeEncoder>)beginStructureDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeEnumEnumDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (id<VSPKKotlinx_serialization_coreEncoder>)encodeInlineInlineDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)inlineDescriptor __attribute__((swift_name("encodeInline(inlineDescriptor:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));
- (void)encodeNull __attribute__((swift_name("encodeNull()")));
- (void)encodeNullableSerializableValueSerializer:(id<VSPKKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableValue(serializer:value:)")));
- (void)encodeSerializableValueSerializer:(id<VSPKKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableValue(serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
@property (readonly) VSPKKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreSerialDescriptor")))
@protocol VSPKKotlinx_serialization_coreSerialDescriptor
@required
- (NSArray<id<VSPKKotlinAnnotation>> *)getElementAnnotationsIndex:(int32_t)index __attribute__((swift_name("getElementAnnotations(index:)")));
- (id<VSPKKotlinx_serialization_coreSerialDescriptor>)getElementDescriptorIndex:(int32_t)index __attribute__((swift_name("getElementDescriptor(index:)")));
- (int32_t)getElementIndexName:(NSString *)name __attribute__((swift_name("getElementIndex(name:)")));
- (NSString *)getElementNameIndex:(int32_t)index __attribute__((swift_name("getElementName(index:)")));
- (BOOL)isElementOptionalIndex:(int32_t)index __attribute__((swift_name("isElementOptional(index:)")));
@property (readonly) NSArray<id<VSPKKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));
@property (readonly) int32_t elementsCount __attribute__((swift_name("elementsCount")));
@property (readonly) BOOL isInline __attribute__((swift_name("isInline")));
@property (readonly) BOOL isNullable __attribute__((swift_name("isNullable")));
@property (readonly) VSPKKotlinx_serialization_coreSerialKind *kind __attribute__((swift_name("kind")));
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreDecoder")))
@protocol VSPKKotlinx_serialization_coreDecoder
@required
- (id<VSPKKotlinx_serialization_coreCompositeDecoder>)beginStructureDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (int32_t)decodeEnumEnumDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (id<VSPKKotlinx_serialization_coreDecoder>)decodeInlineInlineDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)inlineDescriptor __attribute__((swift_name("decodeInline(inlineDescriptor:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));
- (VSPKKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));
- (id _Nullable)decodeNullableSerializableValueDeserializer:(id<VSPKKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeNullableSerializableValue(deserializer:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<VSPKKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeSerializableValue(deserializer:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
@property (readonly) VSPKKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("KotlinIntIterator")))
@interface VSPKKotlinIntIterator : VSPKBase <VSPKKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKInt *)next __attribute__((swift_name("next()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinRandom.Default")))
@interface VSPKKotlinRandomDefault : VSPKKotlinRandom
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (instancetype)default_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) VSPKKotlinRandomDefault *shared __attribute__((swift_name("shared")));
- (int32_t)nextBitsBitCount:(int32_t)bitCount __attribute__((swift_name("nextBits(bitCount:)")));
- (BOOL)nextBoolean __attribute__((swift_name("nextBoolean()")));
- (VSPKKotlinByteArray *)nextBytesArray:(VSPKKotlinByteArray *)array __attribute__((swift_name("nextBytes(array:)")));
- (VSPKKotlinByteArray *)nextBytesArray:(VSPKKotlinByteArray *)array fromIndex:(int32_t)fromIndex toIndex:(int32_t)toIndex __attribute__((swift_name("nextBytes(array:fromIndex:toIndex:)")));
- (VSPKKotlinByteArray *)nextBytesSize:(int32_t)size __attribute__((swift_name("nextBytes(size:)")));
- (double)nextDouble __attribute__((swift_name("nextDouble()")));
- (double)nextDoubleUntil:(double)until __attribute__((swift_name("nextDouble(until:)")));
- (double)nextDoubleFrom:(double)from until:(double)until __attribute__((swift_name("nextDouble(from:until:)")));
- (float)nextFloat __attribute__((swift_name("nextFloat()")));
- (int32_t)nextInt __attribute__((swift_name("nextInt()")));
- (int32_t)nextIntUntil:(int32_t)until __attribute__((swift_name("nextInt(until:)")));
- (int32_t)nextIntFrom:(int32_t)from until:(int32_t)until __attribute__((swift_name("nextInt(from:until:)")));
- (int64_t)nextLong __attribute__((swift_name("nextLong()")));
- (int64_t)nextLongUntil:(int64_t)until __attribute__((swift_name("nextLong(until:)")));
- (int64_t)nextLongFrom:(int64_t)from until:(int64_t)until __attribute__((swift_name("nextLong(from:until:)")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByteArray")))
@interface VSPKKotlinByteArray : VSPKBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(VSPKByte *(^)(VSPKInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (VSPKKotlinByteIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreCompositeEncoder")))
@protocol VSPKKotlinx_serialization_coreCompositeEncoder
@required
- (void)encodeBooleanElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeFloatElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<VSPKKotlinx_serialization_coreEncoder>)encodeInlineElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));
- (void)encodeNullableSerializableElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<VSPKKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<VSPKKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)endStructureDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
- (BOOL)shouldEncodeElementDefaultDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("shouldEncodeElementDefault(descriptor:index:)")));
@property (readonly) VSPKKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreSerializersModule")))
@interface VSPKKotlinx_serialization_coreSerializersModule : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)dumpToCollector:(id<VSPKKotlinx_serialization_coreSerializersModuleCollector>)collector __attribute__((swift_name("dumpTo(collector:)")));
- (id<VSPKKotlinx_serialization_coreKSerializer> _Nullable)getContextualKClass:(id<VSPKKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<VSPKKotlinx_serialization_coreKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("getContextual(kClass:typeArgumentsSerializers:)")));
- (id<VSPKKotlinx_serialization_coreSerializationStrategy> _Nullable)getPolymorphicBaseClass:(id<VSPKKotlinKClass>)baseClass value:(id)value __attribute__((swift_name("getPolymorphic(baseClass:value:)")));
- (id<VSPKKotlinx_serialization_coreDeserializationStrategy> _Nullable)getPolymorphicBaseClass:(id<VSPKKotlinKClass>)baseClass serializedClassName:(NSString * _Nullable)serializedClassName __attribute__((swift_name("getPolymorphic(baseClass:serializedClassName:)")));
@end;

__attribute__((swift_name("KotlinAnnotation")))
@protocol VSPKKotlinAnnotation
@required
@end;

__attribute__((swift_name("Kotlinx_serialization_coreSerialKind")))
@interface VSPKKotlinx_serialization_coreSerialKind : VSPKBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreCompositeDecoder")))
@protocol VSPKKotlinx_serialization_coreCompositeDecoder
@required
- (BOOL)decodeBooleanElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByteElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeCharElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (int32_t)decodeCollectionSizeDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeCollectionSize(descriptor:)")));
- (double)decodeDoubleElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeElementIndexDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeElementIndex(descriptor:)")));
- (float)decodeFloatElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<VSPKKotlinx_serialization_coreDecoder>)decodeInlineElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeIntElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLongElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<VSPKKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (BOOL)decodeSequentially __attribute__((swift_name("decodeSequentially()")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<VSPKKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (int16_t)decodeShortElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeStringElementDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (void)endStructureDescriptor:(id<VSPKKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@property (readonly) VSPKKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end;

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinNothing")))
@interface VSPKKotlinNothing : VSPKBase
@end;

__attribute__((swift_name("KotlinByteIterator")))
@interface VSPKKotlinByteIterator : VSPKBase <VSPKKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (VSPKByte *)next __attribute__((swift_name("next()")));
- (int8_t)nextByte __attribute__((swift_name("nextByte()")));
@end;

__attribute__((swift_name("Kotlinx_serialization_coreSerializersModuleCollector")))
@protocol VSPKKotlinx_serialization_coreSerializersModuleCollector
@required
- (void)contextualKClass:(id<VSPKKotlinKClass>)kClass provider:(id<VSPKKotlinx_serialization_coreKSerializer> (^)(NSArray<id<VSPKKotlinx_serialization_coreKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<VSPKKotlinKClass>)kClass serializer:(id<VSPKKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)polymorphicBaseClass:(id<VSPKKotlinKClass>)baseClass actualClass:(id<VSPKKotlinKClass>)actualClass actualSerializer:(id<VSPKKotlinx_serialization_coreKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<VSPKKotlinKClass>)baseClass defaultSerializerProvider:(id<VSPKKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultSerializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultSerializerProvider:)")));
@end;

__attribute__((swift_name("KotlinKDeclarationContainer")))
@protocol VSPKKotlinKDeclarationContainer
@required
@end;

__attribute__((swift_name("KotlinKAnnotatedElement")))
@protocol VSPKKotlinKAnnotatedElement
@required
@end;

__attribute__((swift_name("KotlinKClassifier")))
@protocol VSPKKotlinKClassifier
@required
@end;

__attribute__((swift_name("KotlinKClass")))
@protocol VSPKKotlinKClass <VSPKKotlinKDeclarationContainer, VSPKKotlinKAnnotatedElement, VSPKKotlinKClassifier>
@required
- (BOOL)isInstanceValue:(id _Nullable)value __attribute__((swift_name("isInstance(value:)")));
@property (readonly) NSString * _Nullable qualifiedName __attribute__((swift_name("qualifiedName")));
@property (readonly) NSString * _Nullable simpleName __attribute__((swift_name("simpleName")));
@end;

#pragma pop_macro("_Nullable_result")
#pragma clang diagnostic pop
NS_ASSUME_NONNULL_END
